{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/tether.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.28;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TetherUSDT is ERC20, Ownable(msg.sender) {\\r\\n    constructor() ERC20(\\\"Tether\\\", \\\"USDT\\\") {\\r\\n        // Mint initial supply of 100,000,000 tokens to the owner\\r\\n        uint256 initialSupply = 100_000_000 * 10 ** decimals();\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n\\r\\n    // Owner can mint new tokens if needed\\r\\n    function mint(address to, uint256 amount) external onlyOwner {\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n\\r\\n    // Owner can burn tokens if needed\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender, amount);\\r\\n    }\\r\\n}\\r\\n\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "TetherUSDT",
	"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tether.sol\":\"TetherUSDT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/tether.sol\":{\"keccak256\":\"0xc5045d17e64527e6dd6504dec54b85a2cb410745b6a76ac02cad94efad3e3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://245bb84c9fe8dce67a40f05dbededbde2e19b3c2f24dc72a67f89ae6e5a199ed\",\"dweb:/ipfs/QmU45mXk6A7xyMvHqXxbbzQzS2u8Lggd1UbPcUkNUmrjGi\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_336": {
				"entryPoint": null,
				"id": 336,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_50": {
				"entryPoint": null,
				"id": 50,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_966": {
				"entryPoint": null,
				"id": 966,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_mint_639": {
				"entryPoint": 556,
				"id": 639,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 353,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 689,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@decimals_363": {
				"entryPoint": 548,
				"id": 363,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 2054,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 2644,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 2069,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 2659,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 2712,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_dataslot_t_string_storage": {
				"entryPoint": 1374,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 1226,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 2593,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_exp_helper": {
				"entryPoint": 2151,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 2
			},
			"checked_exp_t_uint256_t_uint8": {
				"entryPoint": 2454,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_exp_unsigned": {
				"entryPoint": 2233,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 2528,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_t_string_storage": {
				"entryPoint": 1662,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"cleanup_t_address": {
				"entryPoint": 2037,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 2006,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 1500,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 2442,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clear_storage_range_t_bytes1": {
				"entryPoint": 1628,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"convert_t_uint256_to_t_uint256": {
				"entryPoint": 1518,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 1799,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"divide_by_32_ceil": {
				"entryPoint": 1392,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 1326,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": 1772,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"identity": {
				"entryPoint": 1509,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"mask_bytes_dynamic": {
				"entryPoint": 1744,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 2094,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 1281,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 1236,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"prepare_store_t_uint256": {
				"entryPoint": 1551,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_left_dynamic": {
				"entryPoint": 1407,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"shift_right_1_unsigned": {
				"entryPoint": 2139,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_right_unsigned_dynamic": {
				"entryPoint": 1732,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"storage_set_to_zero_t_uint256": {
				"entryPoint": 1604,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"update_byte_slice_dynamic32": {
				"entryPoint": 1419,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"update_storage_value_t_uint256_to_t_uint256": {
				"entryPoint": 1560,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"zero_value_for_split_t_uint256": {
				"entryPoint": 1597,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:9836:7",
					"nodeType": "YulBlock",
					"src": "0:9836:7",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:7",
								"nodeType": "YulBlock",
								"src": "66:40:7",
								"statements": [
									{
										"nativeSrc": "77:22:7",
										"nodeType": "YulAssignment",
										"src": "77:22:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:7",
													"nodeType": "YulIdentifier",
													"src": "93:5:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:7",
												"nodeType": "YulIdentifier",
												"src": "87:5:7"
											},
											"nativeSrc": "87:12:7",
											"nodeType": "YulFunctionCall",
											"src": "87:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:7",
												"nodeType": "YulIdentifier",
												"src": "77:6:7"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:7",
									"nodeType": "YulTypedName",
									"src": "49:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:7",
									"nodeType": "YulTypedName",
									"src": "59:6:7",
									"type": ""
								}
							],
							"src": "7:99:7"
						},
						{
							"body": {
								"nativeSrc": "140:152:7",
								"nodeType": "YulBlock",
								"src": "140:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "157:1:7",
													"nodeType": "YulLiteral",
													"src": "157:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "160:77:7",
													"nodeType": "YulLiteral",
													"src": "160:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "150:6:7",
												"nodeType": "YulIdentifier",
												"src": "150:6:7"
											},
											"nativeSrc": "150:88:7",
											"nodeType": "YulFunctionCall",
											"src": "150:88:7"
										},
										"nativeSrc": "150:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "150:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "254:1:7",
													"nodeType": "YulLiteral",
													"src": "254:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "257:4:7",
													"nodeType": "YulLiteral",
													"src": "257:4:7",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "247:6:7",
												"nodeType": "YulIdentifier",
												"src": "247:6:7"
											},
											"nativeSrc": "247:15:7",
											"nodeType": "YulFunctionCall",
											"src": "247:15:7"
										},
										"nativeSrc": "247:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "247:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "278:1:7",
													"nodeType": "YulLiteral",
													"src": "278:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "281:4:7",
													"nodeType": "YulLiteral",
													"src": "281:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "271:6:7",
												"nodeType": "YulIdentifier",
												"src": "271:6:7"
											},
											"nativeSrc": "271:15:7",
											"nodeType": "YulFunctionCall",
											"src": "271:15:7"
										},
										"nativeSrc": "271:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "271:15:7"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "112:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "112:180:7"
						},
						{
							"body": {
								"nativeSrc": "326:152:7",
								"nodeType": "YulBlock",
								"src": "326:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "343:1:7",
													"nodeType": "YulLiteral",
													"src": "343:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "346:77:7",
													"nodeType": "YulLiteral",
													"src": "346:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "336:6:7",
												"nodeType": "YulIdentifier",
												"src": "336:6:7"
											},
											"nativeSrc": "336:88:7",
											"nodeType": "YulFunctionCall",
											"src": "336:88:7"
										},
										"nativeSrc": "336:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "336:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "440:1:7",
													"nodeType": "YulLiteral",
													"src": "440:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "443:4:7",
													"nodeType": "YulLiteral",
													"src": "443:4:7",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "433:6:7",
												"nodeType": "YulIdentifier",
												"src": "433:6:7"
											},
											"nativeSrc": "433:15:7",
											"nodeType": "YulFunctionCall",
											"src": "433:15:7"
										},
										"nativeSrc": "433:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "433:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "464:1:7",
													"nodeType": "YulLiteral",
													"src": "464:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "467:4:7",
													"nodeType": "YulLiteral",
													"src": "467:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "457:6:7",
												"nodeType": "YulIdentifier",
												"src": "457:6:7"
											},
											"nativeSrc": "457:15:7",
											"nodeType": "YulFunctionCall",
											"src": "457:15:7"
										},
										"nativeSrc": "457:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "457:15:7"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "298:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "298:180:7"
						},
						{
							"body": {
								"nativeSrc": "535:269:7",
								"nodeType": "YulBlock",
								"src": "535:269:7",
								"statements": [
									{
										"nativeSrc": "545:22:7",
										"nodeType": "YulAssignment",
										"src": "545:22:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "559:4:7",
													"nodeType": "YulIdentifier",
													"src": "559:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "565:1:7",
													"nodeType": "YulLiteral",
													"src": "565:1:7",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "555:3:7",
												"nodeType": "YulIdentifier",
												"src": "555:3:7"
											},
											"nativeSrc": "555:12:7",
											"nodeType": "YulFunctionCall",
											"src": "555:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "545:6:7",
												"nodeType": "YulIdentifier",
												"src": "545:6:7"
											}
										]
									},
									{
										"nativeSrc": "576:38:7",
										"nodeType": "YulVariableDeclaration",
										"src": "576:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "606:4:7",
													"nodeType": "YulIdentifier",
													"src": "606:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "612:1:7",
													"nodeType": "YulLiteral",
													"src": "612:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "602:3:7",
												"nodeType": "YulIdentifier",
												"src": "602:3:7"
											},
											"nativeSrc": "602:12:7",
											"nodeType": "YulFunctionCall",
											"src": "602:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "580:18:7",
												"nodeType": "YulTypedName",
												"src": "580:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "653:51:7",
											"nodeType": "YulBlock",
											"src": "653:51:7",
											"statements": [
												{
													"nativeSrc": "667:27:7",
													"nodeType": "YulAssignment",
													"src": "667:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "681:6:7",
																"nodeType": "YulIdentifier",
																"src": "681:6:7"
															},
															{
																"kind": "number",
																"nativeSrc": "689:4:7",
																"nodeType": "YulLiteral",
																"src": "689:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "677:3:7",
															"nodeType": "YulIdentifier",
															"src": "677:3:7"
														},
														"nativeSrc": "677:17:7",
														"nodeType": "YulFunctionCall",
														"src": "677:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "667:6:7",
															"nodeType": "YulIdentifier",
															"src": "667:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "633:18:7",
													"nodeType": "YulIdentifier",
													"src": "633:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "626:6:7",
												"nodeType": "YulIdentifier",
												"src": "626:6:7"
											},
											"nativeSrc": "626:26:7",
											"nodeType": "YulFunctionCall",
											"src": "626:26:7"
										},
										"nativeSrc": "623:81:7",
										"nodeType": "YulIf",
										"src": "623:81:7"
									},
									{
										"body": {
											"nativeSrc": "756:42:7",
											"nodeType": "YulBlock",
											"src": "756:42:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "770:16:7",
															"nodeType": "YulIdentifier",
															"src": "770:16:7"
														},
														"nativeSrc": "770:18:7",
														"nodeType": "YulFunctionCall",
														"src": "770:18:7"
													},
													"nativeSrc": "770:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "770:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "720:18:7",
													"nodeType": "YulIdentifier",
													"src": "720:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "743:6:7",
															"nodeType": "YulIdentifier",
															"src": "743:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "751:2:7",
															"nodeType": "YulLiteral",
															"src": "751:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "740:2:7",
														"nodeType": "YulIdentifier",
														"src": "740:2:7"
													},
													"nativeSrc": "740:14:7",
													"nodeType": "YulFunctionCall",
													"src": "740:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "717:2:7",
												"nodeType": "YulIdentifier",
												"src": "717:2:7"
											},
											"nativeSrc": "717:38:7",
											"nodeType": "YulFunctionCall",
											"src": "717:38:7"
										},
										"nativeSrc": "714:84:7",
										"nodeType": "YulIf",
										"src": "714:84:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "484:320:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "519:4:7",
									"nodeType": "YulTypedName",
									"src": "519:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "528:6:7",
									"nodeType": "YulTypedName",
									"src": "528:6:7",
									"type": ""
								}
							],
							"src": "484:320:7"
						},
						{
							"body": {
								"nativeSrc": "864:87:7",
								"nodeType": "YulBlock",
								"src": "864:87:7",
								"statements": [
									{
										"nativeSrc": "874:11:7",
										"nodeType": "YulAssignment",
										"src": "874:11:7",
										"value": {
											"name": "ptr",
											"nativeSrc": "882:3:7",
											"nodeType": "YulIdentifier",
											"src": "882:3:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "874:4:7",
												"nodeType": "YulIdentifier",
												"src": "874:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "902:1:7",
													"nodeType": "YulLiteral",
													"src": "902:1:7",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "905:3:7",
													"nodeType": "YulIdentifier",
													"src": "905:3:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "895:6:7",
												"nodeType": "YulIdentifier",
												"src": "895:6:7"
											},
											"nativeSrc": "895:14:7",
											"nodeType": "YulFunctionCall",
											"src": "895:14:7"
										},
										"nativeSrc": "895:14:7",
										"nodeType": "YulExpressionStatement",
										"src": "895:14:7"
									},
									{
										"nativeSrc": "918:26:7",
										"nodeType": "YulAssignment",
										"src": "918:26:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "936:1:7",
													"nodeType": "YulLiteral",
													"src": "936:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "939:4:7",
													"nodeType": "YulLiteral",
													"src": "939:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "926:9:7",
												"nodeType": "YulIdentifier",
												"src": "926:9:7"
											},
											"nativeSrc": "926:18:7",
											"nodeType": "YulFunctionCall",
											"src": "926:18:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "918:4:7",
												"nodeType": "YulIdentifier",
												"src": "918:4:7"
											}
										]
									}
								]
							},
							"name": "array_dataslot_t_string_storage",
							"nativeSrc": "810:141:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "851:3:7",
									"nodeType": "YulTypedName",
									"src": "851:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "859:4:7",
									"nodeType": "YulTypedName",
									"src": "859:4:7",
									"type": ""
								}
							],
							"src": "810:141:7"
						},
						{
							"body": {
								"nativeSrc": "1001:49:7",
								"nodeType": "YulBlock",
								"src": "1001:49:7",
								"statements": [
									{
										"nativeSrc": "1011:33:7",
										"nodeType": "YulAssignment",
										"src": "1011:33:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1029:5:7",
															"nodeType": "YulIdentifier",
															"src": "1029:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "1036:2:7",
															"nodeType": "YulLiteral",
															"src": "1036:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1025:3:7",
														"nodeType": "YulIdentifier",
														"src": "1025:3:7"
													},
													"nativeSrc": "1025:14:7",
													"nodeType": "YulFunctionCall",
													"src": "1025:14:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1041:2:7",
													"nodeType": "YulLiteral",
													"src": "1041:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "1021:3:7",
												"nodeType": "YulIdentifier",
												"src": "1021:3:7"
											},
											"nativeSrc": "1021:23:7",
											"nodeType": "YulFunctionCall",
											"src": "1021:23:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1011:6:7",
												"nodeType": "YulIdentifier",
												"src": "1011:6:7"
											}
										]
									}
								]
							},
							"name": "divide_by_32_ceil",
							"nativeSrc": "957:93:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "984:5:7",
									"nodeType": "YulTypedName",
									"src": "984:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "994:6:7",
									"nodeType": "YulTypedName",
									"src": "994:6:7",
									"type": ""
								}
							],
							"src": "957:93:7"
						},
						{
							"body": {
								"nativeSrc": "1109:54:7",
								"nodeType": "YulBlock",
								"src": "1109:54:7",
								"statements": [
									{
										"nativeSrc": "1119:37:7",
										"nodeType": "YulAssignment",
										"src": "1119:37:7",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "1144:4:7",
													"nodeType": "YulIdentifier",
													"src": "1144:4:7"
												},
												{
													"name": "value",
													"nativeSrc": "1150:5:7",
													"nodeType": "YulIdentifier",
													"src": "1150:5:7"
												}
											],
											"functionName": {
												"name": "shl",
												"nativeSrc": "1140:3:7",
												"nodeType": "YulIdentifier",
												"src": "1140:3:7"
											},
											"nativeSrc": "1140:16:7",
											"nodeType": "YulFunctionCall",
											"src": "1140:16:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "1119:8:7",
												"nodeType": "YulIdentifier",
												"src": "1119:8:7"
											}
										]
									}
								]
							},
							"name": "shift_left_dynamic",
							"nativeSrc": "1056:107:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "1084:4:7",
									"nodeType": "YulTypedName",
									"src": "1084:4:7",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "1090:5:7",
									"nodeType": "YulTypedName",
									"src": "1090:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "1100:8:7",
									"nodeType": "YulTypedName",
									"src": "1100:8:7",
									"type": ""
								}
							],
							"src": "1056:107:7"
						},
						{
							"body": {
								"nativeSrc": "1245:317:7",
								"nodeType": "YulBlock",
								"src": "1245:317:7",
								"statements": [
									{
										"nativeSrc": "1255:35:7",
										"nodeType": "YulVariableDeclaration",
										"src": "1255:35:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBytes",
													"nativeSrc": "1276:10:7",
													"nodeType": "YulIdentifier",
													"src": "1276:10:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1288:1:7",
													"nodeType": "YulLiteral",
													"src": "1288:1:7",
													"type": "",
													"value": "8"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "1272:3:7",
												"nodeType": "YulIdentifier",
												"src": "1272:3:7"
											},
											"nativeSrc": "1272:18:7",
											"nodeType": "YulFunctionCall",
											"src": "1272:18:7"
										},
										"variables": [
											{
												"name": "shiftBits",
												"nativeSrc": "1259:9:7",
												"nodeType": "YulTypedName",
												"src": "1259:9:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1299:109:7",
										"nodeType": "YulVariableDeclaration",
										"src": "1299:109:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1330:9:7",
													"nodeType": "YulIdentifier",
													"src": "1330:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1341:66:7",
													"nodeType": "YulLiteral",
													"src": "1341:66:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1311:18:7",
												"nodeType": "YulIdentifier",
												"src": "1311:18:7"
											},
											"nativeSrc": "1311:97:7",
											"nodeType": "YulFunctionCall",
											"src": "1311:97:7"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "1303:4:7",
												"nodeType": "YulTypedName",
												"src": "1303:4:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1417:51:7",
										"nodeType": "YulAssignment",
										"src": "1417:51:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1448:9:7",
													"nodeType": "YulIdentifier",
													"src": "1448:9:7"
												},
												{
													"name": "toInsert",
													"nativeSrc": "1459:8:7",
													"nodeType": "YulIdentifier",
													"src": "1459:8:7"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1429:18:7",
												"nodeType": "YulIdentifier",
												"src": "1429:18:7"
											},
											"nativeSrc": "1429:39:7",
											"nodeType": "YulFunctionCall",
											"src": "1429:39:7"
										},
										"variableNames": [
											{
												"name": "toInsert",
												"nativeSrc": "1417:8:7",
												"nodeType": "YulIdentifier",
												"src": "1417:8:7"
											}
										]
									},
									{
										"nativeSrc": "1477:30:7",
										"nodeType": "YulAssignment",
										"src": "1477:30:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1490:5:7",
													"nodeType": "YulIdentifier",
													"src": "1490:5:7"
												},
												{
													"arguments": [
														{
															"name": "mask",
															"nativeSrc": "1501:4:7",
															"nodeType": "YulIdentifier",
															"src": "1501:4:7"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "1497:3:7",
														"nodeType": "YulIdentifier",
														"src": "1497:3:7"
													},
													"nativeSrc": "1497:9:7",
													"nodeType": "YulFunctionCall",
													"src": "1497:9:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1486:3:7",
												"nodeType": "YulIdentifier",
												"src": "1486:3:7"
											},
											"nativeSrc": "1486:21:7",
											"nodeType": "YulFunctionCall",
											"src": "1486:21:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1477:5:7",
												"nodeType": "YulIdentifier",
												"src": "1477:5:7"
											}
										]
									},
									{
										"nativeSrc": "1516:40:7",
										"nodeType": "YulAssignment",
										"src": "1516:40:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1529:5:7",
													"nodeType": "YulIdentifier",
													"src": "1529:5:7"
												},
												{
													"arguments": [
														{
															"name": "toInsert",
															"nativeSrc": "1540:8:7",
															"nodeType": "YulIdentifier",
															"src": "1540:8:7"
														},
														{
															"name": "mask",
															"nativeSrc": "1550:4:7",
															"nodeType": "YulIdentifier",
															"src": "1550:4:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1536:3:7",
														"nodeType": "YulIdentifier",
														"src": "1536:3:7"
													},
													"nativeSrc": "1536:19:7",
													"nodeType": "YulFunctionCall",
													"src": "1536:19:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "1526:2:7",
												"nodeType": "YulIdentifier",
												"src": "1526:2:7"
											},
											"nativeSrc": "1526:30:7",
											"nodeType": "YulFunctionCall",
											"src": "1526:30:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1516:6:7",
												"nodeType": "YulIdentifier",
												"src": "1516:6:7"
											}
										]
									}
								]
							},
							"name": "update_byte_slice_dynamic32",
							"nativeSrc": "1169:393:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1206:5:7",
									"nodeType": "YulTypedName",
									"src": "1206:5:7",
									"type": ""
								},
								{
									"name": "shiftBytes",
									"nativeSrc": "1213:10:7",
									"nodeType": "YulTypedName",
									"src": "1213:10:7",
									"type": ""
								},
								{
									"name": "toInsert",
									"nativeSrc": "1225:8:7",
									"nodeType": "YulTypedName",
									"src": "1225:8:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "1238:6:7",
									"nodeType": "YulTypedName",
									"src": "1238:6:7",
									"type": ""
								}
							],
							"src": "1169:393:7"
						},
						{
							"body": {
								"nativeSrc": "1613:32:7",
								"nodeType": "YulBlock",
								"src": "1613:32:7",
								"statements": [
									{
										"nativeSrc": "1623:16:7",
										"nodeType": "YulAssignment",
										"src": "1623:16:7",
										"value": {
											"name": "value",
											"nativeSrc": "1634:5:7",
											"nodeType": "YulIdentifier",
											"src": "1634:5:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1623:7:7",
												"nodeType": "YulIdentifier",
												"src": "1623:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1568:77:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1595:5:7",
									"nodeType": "YulTypedName",
									"src": "1595:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1605:7:7",
									"nodeType": "YulTypedName",
									"src": "1605:7:7",
									"type": ""
								}
							],
							"src": "1568:77:7"
						},
						{
							"body": {
								"nativeSrc": "1683:28:7",
								"nodeType": "YulBlock",
								"src": "1683:28:7",
								"statements": [
									{
										"nativeSrc": "1693:12:7",
										"nodeType": "YulAssignment",
										"src": "1693:12:7",
										"value": {
											"name": "value",
											"nativeSrc": "1700:5:7",
											"nodeType": "YulIdentifier",
											"src": "1700:5:7"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1693:3:7",
												"nodeType": "YulIdentifier",
												"src": "1693:3:7"
											}
										]
									}
								]
							},
							"name": "identity",
							"nativeSrc": "1651:60:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1669:5:7",
									"nodeType": "YulTypedName",
									"src": "1669:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1679:3:7",
									"nodeType": "YulTypedName",
									"src": "1679:3:7",
									"type": ""
								}
							],
							"src": "1651:60:7"
						},
						{
							"body": {
								"nativeSrc": "1777:82:7",
								"nodeType": "YulBlock",
								"src": "1777:82:7",
								"statements": [
									{
										"nativeSrc": "1787:66:7",
										"nodeType": "YulAssignment",
										"src": "1787:66:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1845:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1845:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "1827:17:7",
																"nodeType": "YulIdentifier",
																"src": "1827:17:7"
															},
															"nativeSrc": "1827:24:7",
															"nodeType": "YulFunctionCall",
															"src": "1827:24:7"
														}
													],
													"functionName": {
														"name": "identity",
														"nativeSrc": "1818:8:7",
														"nodeType": "YulIdentifier",
														"src": "1818:8:7"
													},
													"nativeSrc": "1818:34:7",
													"nodeType": "YulFunctionCall",
													"src": "1818:34:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "1800:17:7",
												"nodeType": "YulIdentifier",
												"src": "1800:17:7"
											},
											"nativeSrc": "1800:53:7",
											"nodeType": "YulFunctionCall",
											"src": "1800:53:7"
										},
										"variableNames": [
											{
												"name": "converted",
												"nativeSrc": "1787:9:7",
												"nodeType": "YulIdentifier",
												"src": "1787:9:7"
											}
										]
									}
								]
							},
							"name": "convert_t_uint256_to_t_uint256",
							"nativeSrc": "1717:142:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1757:5:7",
									"nodeType": "YulTypedName",
									"src": "1757:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "converted",
									"nativeSrc": "1767:9:7",
									"nodeType": "YulTypedName",
									"src": "1767:9:7",
									"type": ""
								}
							],
							"src": "1717:142:7"
						},
						{
							"body": {
								"nativeSrc": "1912:28:7",
								"nodeType": "YulBlock",
								"src": "1912:28:7",
								"statements": [
									{
										"nativeSrc": "1922:12:7",
										"nodeType": "YulAssignment",
										"src": "1922:12:7",
										"value": {
											"name": "value",
											"nativeSrc": "1929:5:7",
											"nodeType": "YulIdentifier",
											"src": "1929:5:7"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1922:3:7",
												"nodeType": "YulIdentifier",
												"src": "1922:3:7"
											}
										]
									}
								]
							},
							"name": "prepare_store_t_uint256",
							"nativeSrc": "1865:75:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1898:5:7",
									"nodeType": "YulTypedName",
									"src": "1898:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1908:3:7",
									"nodeType": "YulTypedName",
									"src": "1908:3:7",
									"type": ""
								}
							],
							"src": "1865:75:7"
						},
						{
							"body": {
								"nativeSrc": "2022:193:7",
								"nodeType": "YulBlock",
								"src": "2022:193:7",
								"statements": [
									{
										"nativeSrc": "2032:63:7",
										"nodeType": "YulVariableDeclaration",
										"src": "2032:63:7",
										"value": {
											"arguments": [
												{
													"name": "value_0",
													"nativeSrc": "2087:7:7",
													"nodeType": "YulIdentifier",
													"src": "2087:7:7"
												}
											],
											"functionName": {
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2056:30:7",
												"nodeType": "YulIdentifier",
												"src": "2056:30:7"
											},
											"nativeSrc": "2056:39:7",
											"nodeType": "YulFunctionCall",
											"src": "2056:39:7"
										},
										"variables": [
											{
												"name": "convertedValue_0",
												"nativeSrc": "2036:16:7",
												"nodeType": "YulTypedName",
												"src": "2036:16:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2111:4:7",
													"nodeType": "YulIdentifier",
													"src": "2111:4:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "2151:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2151:4:7"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "2145:5:7",
																"nodeType": "YulIdentifier",
																"src": "2145:5:7"
															},
															"nativeSrc": "2145:11:7",
															"nodeType": "YulFunctionCall",
															"src": "2145:11:7"
														},
														{
															"name": "offset",
															"nativeSrc": "2158:6:7",
															"nodeType": "YulIdentifier",
															"src": "2158:6:7"
														},
														{
															"arguments": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2190:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "2190:16:7"
																}
															],
															"functionName": {
																"name": "prepare_store_t_uint256",
																"nativeSrc": "2166:23:7",
																"nodeType": "YulIdentifier",
																"src": "2166:23:7"
															},
															"nativeSrc": "2166:41:7",
															"nodeType": "YulFunctionCall",
															"src": "2166:41:7"
														}
													],
													"functionName": {
														"name": "update_byte_slice_dynamic32",
														"nativeSrc": "2117:27:7",
														"nodeType": "YulIdentifier",
														"src": "2117:27:7"
													},
													"nativeSrc": "2117:91:7",
													"nodeType": "YulFunctionCall",
													"src": "2117:91:7"
												}
											],
											"functionName": {
												"name": "sstore",
												"nativeSrc": "2104:6:7",
												"nodeType": "YulIdentifier",
												"src": "2104:6:7"
											},
											"nativeSrc": "2104:105:7",
											"nodeType": "YulFunctionCall",
											"src": "2104:105:7"
										},
										"nativeSrc": "2104:105:7",
										"nodeType": "YulExpressionStatement",
										"src": "2104:105:7"
									}
								]
							},
							"name": "update_storage_value_t_uint256_to_t_uint256",
							"nativeSrc": "1946:269:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "1999:4:7",
									"nodeType": "YulTypedName",
									"src": "1999:4:7",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2005:6:7",
									"nodeType": "YulTypedName",
									"src": "2005:6:7",
									"type": ""
								},
								{
									"name": "value_0",
									"nativeSrc": "2013:7:7",
									"nodeType": "YulTypedName",
									"src": "2013:7:7",
									"type": ""
								}
							],
							"src": "1946:269:7"
						},
						{
							"body": {
								"nativeSrc": "2270:24:7",
								"nodeType": "YulBlock",
								"src": "2270:24:7",
								"statements": [
									{
										"nativeSrc": "2280:8:7",
										"nodeType": "YulAssignment",
										"src": "2280:8:7",
										"value": {
											"kind": "number",
											"nativeSrc": "2287:1:7",
											"nodeType": "YulLiteral",
											"src": "2287:1:7",
											"type": "",
											"value": "0"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "2280:3:7",
												"nodeType": "YulIdentifier",
												"src": "2280:3:7"
											}
										]
									}
								]
							},
							"name": "zero_value_for_split_t_uint256",
							"nativeSrc": "2221:73:7",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "2266:3:7",
									"nodeType": "YulTypedName",
									"src": "2266:3:7",
									"type": ""
								}
							],
							"src": "2221:73:7"
						},
						{
							"body": {
								"nativeSrc": "2353:136:7",
								"nodeType": "YulBlock",
								"src": "2353:136:7",
								"statements": [
									{
										"nativeSrc": "2363:46:7",
										"nodeType": "YulVariableDeclaration",
										"src": "2363:46:7",
										"value": {
											"arguments": [],
											"functionName": {
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2377:30:7",
												"nodeType": "YulIdentifier",
												"src": "2377:30:7"
											},
											"nativeSrc": "2377:32:7",
											"nodeType": "YulFunctionCall",
											"src": "2377:32:7"
										},
										"variables": [
											{
												"name": "zero_0",
												"nativeSrc": "2367:6:7",
												"nodeType": "YulTypedName",
												"src": "2367:6:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2462:4:7",
													"nodeType": "YulIdentifier",
													"src": "2462:4:7"
												},
												{
													"name": "offset",
													"nativeSrc": "2468:6:7",
													"nodeType": "YulIdentifier",
													"src": "2468:6:7"
												},
												{
													"name": "zero_0",
													"nativeSrc": "2476:6:7",
													"nodeType": "YulIdentifier",
													"src": "2476:6:7"
												}
											],
											"functionName": {
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2418:43:7",
												"nodeType": "YulIdentifier",
												"src": "2418:43:7"
											},
											"nativeSrc": "2418:65:7",
											"nodeType": "YulFunctionCall",
											"src": "2418:65:7"
										},
										"nativeSrc": "2418:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "2418:65:7"
									}
								]
							},
							"name": "storage_set_to_zero_t_uint256",
							"nativeSrc": "2300:189:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "2339:4:7",
									"nodeType": "YulTypedName",
									"src": "2339:4:7",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2345:6:7",
									"nodeType": "YulTypedName",
									"src": "2345:6:7",
									"type": ""
								}
							],
							"src": "2300:189:7"
						},
						{
							"body": {
								"nativeSrc": "2545:136:7",
								"nodeType": "YulBlock",
								"src": "2545:136:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2612:63:7",
											"nodeType": "YulBlock",
											"src": "2612:63:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2656:5:7",
																"nodeType": "YulIdentifier",
																"src": "2656:5:7"
															},
															{
																"kind": "number",
																"nativeSrc": "2663:1:7",
																"nodeType": "YulLiteral",
																"src": "2663:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "storage_set_to_zero_t_uint256",
															"nativeSrc": "2626:29:7",
															"nodeType": "YulIdentifier",
															"src": "2626:29:7"
														},
														"nativeSrc": "2626:39:7",
														"nodeType": "YulFunctionCall",
														"src": "2626:39:7"
													},
													"nativeSrc": "2626:39:7",
													"nodeType": "YulExpressionStatement",
													"src": "2626:39:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "start",
													"nativeSrc": "2565:5:7",
													"nodeType": "YulIdentifier",
													"src": "2565:5:7"
												},
												{
													"name": "end",
													"nativeSrc": "2572:3:7",
													"nodeType": "YulIdentifier",
													"src": "2572:3:7"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "2562:2:7",
												"nodeType": "YulIdentifier",
												"src": "2562:2:7"
											},
											"nativeSrc": "2562:14:7",
											"nodeType": "YulFunctionCall",
											"src": "2562:14:7"
										},
										"nativeSrc": "2555:120:7",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "2577:26:7",
											"nodeType": "YulBlock",
											"src": "2577:26:7",
											"statements": [
												{
													"nativeSrc": "2579:22:7",
													"nodeType": "YulAssignment",
													"src": "2579:22:7",
													"value": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2592:5:7",
																"nodeType": "YulIdentifier",
																"src": "2592:5:7"
															},
															{
																"kind": "number",
																"nativeSrc": "2599:1:7",
																"nodeType": "YulLiteral",
																"src": "2599:1:7",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2588:3:7",
															"nodeType": "YulIdentifier",
															"src": "2588:3:7"
														},
														"nativeSrc": "2588:13:7",
														"nodeType": "YulFunctionCall",
														"src": "2588:13:7"
													},
													"variableNames": [
														{
															"name": "start",
															"nativeSrc": "2579:5:7",
															"nodeType": "YulIdentifier",
															"src": "2579:5:7"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "2559:2:7",
											"nodeType": "YulBlock",
											"src": "2559:2:7",
											"statements": []
										},
										"src": "2555:120:7"
									}
								]
							},
							"name": "clear_storage_range_t_bytes1",
							"nativeSrc": "2495:186:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "start",
									"nativeSrc": "2533:5:7",
									"nodeType": "YulTypedName",
									"src": "2533:5:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2540:3:7",
									"nodeType": "YulTypedName",
									"src": "2540:3:7",
									"type": ""
								}
							],
							"src": "2495:186:7"
						},
						{
							"body": {
								"nativeSrc": "2766:464:7",
								"nodeType": "YulBlock",
								"src": "2766:464:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2792:431:7",
											"nodeType": "YulBlock",
											"src": "2792:431:7",
											"statements": [
												{
													"nativeSrc": "2806:54:7",
													"nodeType": "YulVariableDeclaration",
													"src": "2806:54:7",
													"value": {
														"arguments": [
															{
																"name": "array",
																"nativeSrc": "2854:5:7",
																"nodeType": "YulIdentifier",
																"src": "2854:5:7"
															}
														],
														"functionName": {
															"name": "array_dataslot_t_string_storage",
															"nativeSrc": "2822:31:7",
															"nodeType": "YulIdentifier",
															"src": "2822:31:7"
														},
														"nativeSrc": "2822:38:7",
														"nodeType": "YulFunctionCall",
														"src": "2822:38:7"
													},
													"variables": [
														{
															"name": "dataArea",
															"nativeSrc": "2810:8:7",
															"nodeType": "YulTypedName",
															"src": "2810:8:7",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "2873:63:7",
													"nodeType": "YulVariableDeclaration",
													"src": "2873:63:7",
													"value": {
														"arguments": [
															{
																"name": "dataArea",
																"nativeSrc": "2896:8:7",
																"nodeType": "YulIdentifier",
																"src": "2896:8:7"
															},
															{
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "2924:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2924:10:7"
																	}
																],
																"functionName": {
																	"name": "divide_by_32_ceil",
																	"nativeSrc": "2906:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2906:17:7"
																},
																"nativeSrc": "2906:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2906:29:7"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2892:3:7",
															"nodeType": "YulIdentifier",
															"src": "2892:3:7"
														},
														"nativeSrc": "2892:44:7",
														"nodeType": "YulFunctionCall",
														"src": "2892:44:7"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "2877:11:7",
															"nodeType": "YulTypedName",
															"src": "2877:11:7",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3093:27:7",
														"nodeType": "YulBlock",
														"src": "3093:27:7",
														"statements": [
															{
																"nativeSrc": "3095:23:7",
																"nodeType": "YulAssignment",
																"src": "3095:23:7",
																"value": {
																	"name": "dataArea",
																	"nativeSrc": "3110:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3110:8:7"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "3095:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "3095:11:7"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "3077:10:7",
																"nodeType": "YulIdentifier",
																"src": "3077:10:7"
															},
															{
																"kind": "number",
																"nativeSrc": "3089:2:7",
																"nodeType": "YulLiteral",
																"src": "3089:2:7",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "3074:2:7",
															"nodeType": "YulIdentifier",
															"src": "3074:2:7"
														},
														"nativeSrc": "3074:18:7",
														"nodeType": "YulFunctionCall",
														"src": "3074:18:7"
													},
													"nativeSrc": "3071:49:7",
													"nodeType": "YulIf",
													"src": "3071:49:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "deleteStart",
																"nativeSrc": "3162:11:7",
																"nodeType": "YulIdentifier",
																"src": "3162:11:7"
															},
															{
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "3179:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3179:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "3207:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3207:3:7"
																			}
																		],
																		"functionName": {
																			"name": "divide_by_32_ceil",
																			"nativeSrc": "3189:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3189:17:7"
																		},
																		"nativeSrc": "3189:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:22:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3175:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:7"
																},
																"nativeSrc": "3175:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3175:37:7"
															}
														],
														"functionName": {
															"name": "clear_storage_range_t_bytes1",
															"nativeSrc": "3133:28:7",
															"nodeType": "YulIdentifier",
															"src": "3133:28:7"
														},
														"nativeSrc": "3133:80:7",
														"nodeType": "YulFunctionCall",
														"src": "3133:80:7"
													},
													"nativeSrc": "3133:80:7",
													"nodeType": "YulExpressionStatement",
													"src": "3133:80:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "2783:3:7",
													"nodeType": "YulIdentifier",
													"src": "2783:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "2788:2:7",
													"nodeType": "YulLiteral",
													"src": "2788:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2780:2:7",
												"nodeType": "YulIdentifier",
												"src": "2780:2:7"
											},
											"nativeSrc": "2780:11:7",
											"nodeType": "YulFunctionCall",
											"src": "2780:11:7"
										},
										"nativeSrc": "2777:446:7",
										"nodeType": "YulIf",
										"src": "2777:446:7"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_t_string_storage",
							"nativeSrc": "2687:543:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "2742:5:7",
									"nodeType": "YulTypedName",
									"src": "2742:5:7",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "2749:3:7",
									"nodeType": "YulTypedName",
									"src": "2749:3:7",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "2754:10:7",
									"nodeType": "YulTypedName",
									"src": "2754:10:7",
									"type": ""
								}
							],
							"src": "2687:543:7"
						},
						{
							"body": {
								"nativeSrc": "3299:54:7",
								"nodeType": "YulBlock",
								"src": "3299:54:7",
								"statements": [
									{
										"nativeSrc": "3309:37:7",
										"nodeType": "YulAssignment",
										"src": "3309:37:7",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "3334:4:7",
													"nodeType": "YulIdentifier",
													"src": "3334:4:7"
												},
												{
													"name": "value",
													"nativeSrc": "3340:5:7",
													"nodeType": "YulIdentifier",
													"src": "3340:5:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "3330:3:7",
												"nodeType": "YulIdentifier",
												"src": "3330:3:7"
											},
											"nativeSrc": "3330:16:7",
											"nodeType": "YulFunctionCall",
											"src": "3330:16:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "3309:8:7",
												"nodeType": "YulIdentifier",
												"src": "3309:8:7"
											}
										]
									}
								]
							},
							"name": "shift_right_unsigned_dynamic",
							"nativeSrc": "3236:117:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "3274:4:7",
									"nodeType": "YulTypedName",
									"src": "3274:4:7",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "3280:5:7",
									"nodeType": "YulTypedName",
									"src": "3280:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "3290:8:7",
									"nodeType": "YulTypedName",
									"src": "3290:8:7",
									"type": ""
								}
							],
							"src": "3236:117:7"
						},
						{
							"body": {
								"nativeSrc": "3410:118:7",
								"nodeType": "YulBlock",
								"src": "3410:118:7",
								"statements": [
									{
										"nativeSrc": "3420:68:7",
										"nodeType": "YulVariableDeclaration",
										"src": "3420:68:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3469:1:7",
																	"nodeType": "YulLiteral",
																	"src": "3469:1:7",
																	"type": "",
																	"value": "8"
																},
																{
																	"name": "bytes",
																	"nativeSrc": "3472:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:7"
																}
															],
															"functionName": {
																"name": "mul",
																"nativeSrc": "3465:3:7",
																"nodeType": "YulIdentifier",
																"src": "3465:3:7"
															},
															"nativeSrc": "3465:13:7",
															"nodeType": "YulFunctionCall",
															"src": "3465:13:7"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3484:1:7",
																	"nodeType": "YulLiteral",
																	"src": "3484:1:7",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "3480:3:7",
																"nodeType": "YulIdentifier",
																"src": "3480:3:7"
															},
															"nativeSrc": "3480:6:7",
															"nodeType": "YulFunctionCall",
															"src": "3480:6:7"
														}
													],
													"functionName": {
														"name": "shift_right_unsigned_dynamic",
														"nativeSrc": "3436:28:7",
														"nodeType": "YulIdentifier",
														"src": "3436:28:7"
													},
													"nativeSrc": "3436:51:7",
													"nodeType": "YulFunctionCall",
													"src": "3436:51:7"
												}
											],
											"functionName": {
												"name": "not",
												"nativeSrc": "3432:3:7",
												"nodeType": "YulIdentifier",
												"src": "3432:3:7"
											},
											"nativeSrc": "3432:56:7",
											"nodeType": "YulFunctionCall",
											"src": "3432:56:7"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "3424:4:7",
												"nodeType": "YulTypedName",
												"src": "3424:4:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "3497:25:7",
										"nodeType": "YulAssignment",
										"src": "3497:25:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3511:4:7",
													"nodeType": "YulIdentifier",
													"src": "3511:4:7"
												},
												{
													"name": "mask",
													"nativeSrc": "3517:4:7",
													"nodeType": "YulIdentifier",
													"src": "3517:4:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "3507:3:7",
												"nodeType": "YulIdentifier",
												"src": "3507:3:7"
											},
											"nativeSrc": "3507:15:7",
											"nodeType": "YulFunctionCall",
											"src": "3507:15:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "3497:6:7",
												"nodeType": "YulIdentifier",
												"src": "3497:6:7"
											}
										]
									}
								]
							},
							"name": "mask_bytes_dynamic",
							"nativeSrc": "3359:169:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3387:4:7",
									"nodeType": "YulTypedName",
									"src": "3387:4:7",
									"type": ""
								},
								{
									"name": "bytes",
									"nativeSrc": "3393:5:7",
									"nodeType": "YulTypedName",
									"src": "3393:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "3403:6:7",
									"nodeType": "YulTypedName",
									"src": "3403:6:7",
									"type": ""
								}
							],
							"src": "3359:169:7"
						},
						{
							"body": {
								"nativeSrc": "3614:214:7",
								"nodeType": "YulBlock",
								"src": "3614:214:7",
								"statements": [
									{
										"nativeSrc": "3747:37:7",
										"nodeType": "YulAssignment",
										"src": "3747:37:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3774:4:7",
													"nodeType": "YulIdentifier",
													"src": "3774:4:7"
												},
												{
													"name": "len",
													"nativeSrc": "3780:3:7",
													"nodeType": "YulIdentifier",
													"src": "3780:3:7"
												}
											],
											"functionName": {
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3755:18:7",
												"nodeType": "YulIdentifier",
												"src": "3755:18:7"
											},
											"nativeSrc": "3755:29:7",
											"nodeType": "YulFunctionCall",
											"src": "3755:29:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "3747:4:7",
												"nodeType": "YulIdentifier",
												"src": "3747:4:7"
											}
										]
									},
									{
										"nativeSrc": "3793:29:7",
										"nodeType": "YulAssignment",
										"src": "3793:29:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3804:4:7",
													"nodeType": "YulIdentifier",
													"src": "3804:4:7"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "3814:1:7",
															"nodeType": "YulLiteral",
															"src": "3814:1:7",
															"type": "",
															"value": "2"
														},
														{
															"name": "len",
															"nativeSrc": "3817:3:7",
															"nodeType": "YulIdentifier",
															"src": "3817:3:7"
														}
													],
													"functionName": {
														"name": "mul",
														"nativeSrc": "3810:3:7",
														"nodeType": "YulIdentifier",
														"src": "3810:3:7"
													},
													"nativeSrc": "3810:11:7",
													"nodeType": "YulFunctionCall",
													"src": "3810:11:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "3801:2:7",
												"nodeType": "YulIdentifier",
												"src": "3801:2:7"
											},
											"nativeSrc": "3801:21:7",
											"nodeType": "YulFunctionCall",
											"src": "3801:21:7"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "3793:4:7",
												"nodeType": "YulIdentifier",
												"src": "3793:4:7"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "3533:295:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3595:4:7",
									"nodeType": "YulTypedName",
									"src": "3595:4:7",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "3601:3:7",
									"nodeType": "YulTypedName",
									"src": "3601:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "3609:4:7",
									"nodeType": "YulTypedName",
									"src": "3609:4:7",
									"type": ""
								}
							],
							"src": "3533:295:7"
						},
						{
							"body": {
								"nativeSrc": "3925:1303:7",
								"nodeType": "YulBlock",
								"src": "3925:1303:7",
								"statements": [
									{
										"nativeSrc": "3936:51:7",
										"nodeType": "YulVariableDeclaration",
										"src": "3936:51:7",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nativeSrc": "3983:3:7",
													"nodeType": "YulIdentifier",
													"src": "3983:3:7"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3950:32:7",
												"nodeType": "YulIdentifier",
												"src": "3950:32:7"
											},
											"nativeSrc": "3950:37:7",
											"nodeType": "YulFunctionCall",
											"src": "3950:37:7"
										},
										"variables": [
											{
												"name": "newLen",
												"nativeSrc": "3940:6:7",
												"nodeType": "YulTypedName",
												"src": "3940:6:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "4072:22:7",
											"nodeType": "YulBlock",
											"src": "4072:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "4074:16:7",
															"nodeType": "YulIdentifier",
															"src": "4074:16:7"
														},
														"nativeSrc": "4074:18:7",
														"nodeType": "YulFunctionCall",
														"src": "4074:18:7"
													},
													"nativeSrc": "4074:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "4074:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4044:6:7",
													"nodeType": "YulIdentifier",
													"src": "4044:6:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4052:18:7",
													"nodeType": "YulLiteral",
													"src": "4052:18:7",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4041:2:7",
												"nodeType": "YulIdentifier",
												"src": "4041:2:7"
											},
											"nativeSrc": "4041:30:7",
											"nodeType": "YulFunctionCall",
											"src": "4041:30:7"
										},
										"nativeSrc": "4038:56:7",
										"nodeType": "YulIf",
										"src": "4038:56:7"
									},
									{
										"nativeSrc": "4104:52:7",
										"nodeType": "YulVariableDeclaration",
										"src": "4104:52:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "slot",
															"nativeSrc": "4150:4:7",
															"nodeType": "YulIdentifier",
															"src": "4150:4:7"
														}
													],
													"functionName": {
														"name": "sload",
														"nativeSrc": "4144:5:7",
														"nodeType": "YulIdentifier",
														"src": "4144:5:7"
													},
													"nativeSrc": "4144:11:7",
													"nodeType": "YulFunctionCall",
													"src": "4144:11:7"
												}
											],
											"functionName": {
												"name": "extract_byte_array_length",
												"nativeSrc": "4118:25:7",
												"nodeType": "YulIdentifier",
												"src": "4118:25:7"
											},
											"nativeSrc": "4118:38:7",
											"nodeType": "YulFunctionCall",
											"src": "4118:38:7"
										},
										"variables": [
											{
												"name": "oldLen",
												"nativeSrc": "4108:6:7",
												"nodeType": "YulTypedName",
												"src": "4108:6:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "4249:4:7",
													"nodeType": "YulIdentifier",
													"src": "4249:4:7"
												},
												{
													"name": "oldLen",
													"nativeSrc": "4255:6:7",
													"nodeType": "YulIdentifier",
													"src": "4255:6:7"
												},
												{
													"name": "newLen",
													"nativeSrc": "4263:6:7",
													"nodeType": "YulIdentifier",
													"src": "4263:6:7"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4203:45:7",
												"nodeType": "YulIdentifier",
												"src": "4203:45:7"
											},
											"nativeSrc": "4203:67:7",
											"nodeType": "YulFunctionCall",
											"src": "4203:67:7"
										},
										"nativeSrc": "4203:67:7",
										"nodeType": "YulExpressionStatement",
										"src": "4203:67:7"
									},
									{
										"nativeSrc": "4280:18:7",
										"nodeType": "YulVariableDeclaration",
										"src": "4280:18:7",
										"value": {
											"kind": "number",
											"nativeSrc": "4297:1:7",
											"nodeType": "YulLiteral",
											"src": "4297:1:7",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "4284:9:7",
												"nodeType": "YulTypedName",
												"src": "4284:9:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "4308:17:7",
										"nodeType": "YulAssignment",
										"src": "4308:17:7",
										"value": {
											"kind": "number",
											"nativeSrc": "4321:4:7",
											"nodeType": "YulLiteral",
											"src": "4321:4:7",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nativeSrc": "4308:9:7",
												"nodeType": "YulIdentifier",
												"src": "4308:9:7"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "4372:611:7",
													"nodeType": "YulBlock",
													"src": "4372:611:7",
													"statements": [
														{
															"nativeSrc": "4386:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4386:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4405:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4417:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4417:4:7",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:7"
																		},
																		"nativeSrc": "4413:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4413:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:7"
																},
																"nativeSrc": "4401:22:7",
																"nodeType": "YulFunctionCall",
																"src": "4401:22:7"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "4390:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4390:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4437:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4437:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4483:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4483:4:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_string_storage",
																	"nativeSrc": "4451:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "4451:31:7"
																},
																"nativeSrc": "4451:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4451:37:7"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "4441:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4441:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4501:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4501:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4510:1:7",
																"nodeType": "YulLiteral",
																"src": "4510:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4505:1:7",
																	"nodeType": "YulTypedName",
																	"src": "4505:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4569:163:7",
																"nodeType": "YulBlock",
																"src": "4569:163:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4594:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4594:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4612:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4612:3:7"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4617:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4617:9:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4608:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4608:3:7"
																							},
																							"nativeSrc": "4608:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4608:19:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4602:5:7"
																					},
																					"nativeSrc": "4602:26:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4602:26:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4587:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:7"
																			},
																			"nativeSrc": "4587:42:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4587:42:7"
																		},
																		"nativeSrc": "4587:42:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:42:7"
																	},
																	{
																		"nativeSrc": "4646:24:7",
																		"nodeType": "YulAssignment",
																		"src": "4646:24:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4660:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4660:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4656:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4656:3:7"
																			},
																			"nativeSrc": "4656:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4656:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "4646:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4687:31:7",
																		"nodeType": "YulAssignment",
																		"src": "4687:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "4704:9:7",
																					"nodeType": "YulIdentifier",
																					"src": "4704:9:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4715:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4715:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4700:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:7"
																			},
																			"nativeSrc": "4700:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4700:18:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "4687:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4535:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:7"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4538:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4538:7:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4532:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4532:2:7"
																},
																"nativeSrc": "4532:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4532:14:7"
															},
															"nativeSrc": "4524:208:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4547:21:7",
																"nodeType": "YulBlock",
																"src": "4547:21:7",
																"statements": [
																	{
																		"nativeSrc": "4549:17:7",
																		"nodeType": "YulAssignment",
																		"src": "4549:17:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4558:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "4558:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4561:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4561:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4554:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4554:3:7"
																			},
																			"nativeSrc": "4554:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4549:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4549:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4528:3:7",
																"nodeType": "YulBlock",
																"src": "4528:3:7",
																"statements": []
															},
															"src": "4524:208:7"
														},
														{
															"body": {
																"nativeSrc": "4768:156:7",
																"nodeType": "YulBlock",
																"src": "4768:156:7",
																"statements": [
																	{
																		"nativeSrc": "4786:43:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4786:43:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "4813:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4813:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "4818:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "4818:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4809:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4809:3:7"
																					},
																					"nativeSrc": "4809:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4809:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4803:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4803:5:7"
																			},
																			"nativeSrc": "4803:26:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4803:26:7"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nativeSrc": "4790:9:7",
																				"nodeType": "YulTypedName",
																				"src": "4790:9:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4853:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4853:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nativeSrc": "4880:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "4880:9:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "newLen",
																									"nativeSrc": "4895:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4895:6:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4903:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4903:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "4891:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4891:3:7"
																							},
																							"nativeSrc": "4891:17:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4891:17:7"
																						}
																					],
																					"functionName": {
																						"name": "mask_bytes_dynamic",
																						"nativeSrc": "4861:18:7",
																						"nodeType": "YulIdentifier",
																						"src": "4861:18:7"
																					},
																					"nativeSrc": "4861:48:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4861:48:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4846:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:7"
																			},
																			"nativeSrc": "4846:64:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4846:64:7"
																		},
																		"nativeSrc": "4846:64:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4846:64:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4751:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:7:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4748:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4748:2:7"
																},
																"nativeSrc": "4748:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4748:19:7"
															},
															"nativeSrc": "4745:179:7",
															"nodeType": "YulIf",
															"src": "4745:179:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4944:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "newLen",
																						"nativeSrc": "4958:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4958:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4966:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4966:1:7",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4954:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:7"
																				},
																				"nativeSrc": "4954:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:14:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4970:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4970:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:7"
																		},
																		"nativeSrc": "4950:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:22:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:7"
																},
																"nativeSrc": "4937:36:7",
																"nodeType": "YulFunctionCall",
																"src": "4937:36:7"
															},
															"nativeSrc": "4937:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "4937:36:7"
														}
													]
												},
												"nativeSrc": "4365:618:7",
												"nodeType": "YulCase",
												"src": "4365:618:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4370:1:7",
													"nodeType": "YulLiteral",
													"src": "4370:1:7",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "5000:222:7",
													"nodeType": "YulBlock",
													"src": "5000:222:7",
													"statements": [
														{
															"nativeSrc": "5014:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5014:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5027:1:7",
																"nodeType": "YulLiteral",
																"src": "5027:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5018:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5051:67:7",
																"nodeType": "YulBlock",
																"src": "5051:67:7",
																"statements": [
																	{
																		"nativeSrc": "5069:35:7",
																		"nodeType": "YulAssignment",
																		"src": "5069:35:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "5088:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5088:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "5093:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "5093:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5084:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5084:3:7"
																					},
																					"nativeSrc": "5084:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5084:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5078:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:7"
																			},
																			"nativeSrc": "5078:26:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5078:26:7"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "5069:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nativeSrc": "5044:6:7",
																"nodeType": "YulIdentifier",
																"src": "5044:6:7"
															},
															"nativeSrc": "5041:77:7",
															"nodeType": "YulIf",
															"src": "5041:77:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5138:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5197:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5197:5:7"
																			},
																			{
																				"name": "newLen",
																				"nativeSrc": "5204:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "5144:52:7",
																			"nodeType": "YulIdentifier",
																			"src": "5144:52:7"
																		},
																		"nativeSrc": "5144:67:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:67:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:7"
																},
																"nativeSrc": "5131:81:7",
																"nodeType": "YulFunctionCall",
																"src": "5131:81:7"
															},
															"nativeSrc": "5131:81:7",
															"nodeType": "YulExpressionStatement",
															"src": "5131:81:7"
														}
													]
												},
												"nativeSrc": "4992:230:7",
												"nodeType": "YulCase",
												"src": "4992:230:7",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4345:6:7",
													"nodeType": "YulIdentifier",
													"src": "4345:6:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4353:2:7",
													"nodeType": "YulLiteral",
													"src": "4353:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4342:2:7",
												"nodeType": "YulIdentifier",
												"src": "4342:2:7"
											},
											"nativeSrc": "4342:14:7",
											"nodeType": "YulFunctionCall",
											"src": "4342:14:7"
										},
										"nativeSrc": "4335:887:7",
										"nodeType": "YulSwitch",
										"src": "4335:887:7"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nativeSrc": "3833:1395:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "3914:4:7",
									"nodeType": "YulTypedName",
									"src": "3914:4:7",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "3920:3:7",
									"nodeType": "YulTypedName",
									"src": "3920:3:7",
									"type": ""
								}
							],
							"src": "3833:1395:7"
						},
						{
							"body": {
								"nativeSrc": "5279:81:7",
								"nodeType": "YulBlock",
								"src": "5279:81:7",
								"statements": [
									{
										"nativeSrc": "5289:65:7",
										"nodeType": "YulAssignment",
										"src": "5289:65:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5304:5:7",
													"nodeType": "YulIdentifier",
													"src": "5304:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5311:42:7",
													"nodeType": "YulLiteral",
													"src": "5311:42:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "5300:3:7",
												"nodeType": "YulIdentifier",
												"src": "5300:3:7"
											},
											"nativeSrc": "5300:54:7",
											"nodeType": "YulFunctionCall",
											"src": "5300:54:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5289:7:7",
												"nodeType": "YulIdentifier",
												"src": "5289:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "5234:126:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5261:5:7",
									"nodeType": "YulTypedName",
									"src": "5261:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5271:7:7",
									"nodeType": "YulTypedName",
									"src": "5271:7:7",
									"type": ""
								}
							],
							"src": "5234:126:7"
						},
						{
							"body": {
								"nativeSrc": "5411:51:7",
								"nodeType": "YulBlock",
								"src": "5411:51:7",
								"statements": [
									{
										"nativeSrc": "5421:35:7",
										"nodeType": "YulAssignment",
										"src": "5421:35:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5450:5:7",
													"nodeType": "YulIdentifier",
													"src": "5450:5:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "5432:17:7",
												"nodeType": "YulIdentifier",
												"src": "5432:17:7"
											},
											"nativeSrc": "5432:24:7",
											"nodeType": "YulFunctionCall",
											"src": "5432:24:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5421:7:7",
												"nodeType": "YulIdentifier",
												"src": "5421:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "5366:96:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5393:5:7",
									"nodeType": "YulTypedName",
									"src": "5393:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5403:7:7",
									"nodeType": "YulTypedName",
									"src": "5403:7:7",
									"type": ""
								}
							],
							"src": "5366:96:7"
						},
						{
							"body": {
								"nativeSrc": "5533:53:7",
								"nodeType": "YulBlock",
								"src": "5533:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5550:3:7",
													"nodeType": "YulIdentifier",
													"src": "5550:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5573:5:7",
															"nodeType": "YulIdentifier",
															"src": "5573:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "5555:17:7",
														"nodeType": "YulIdentifier",
														"src": "5555:17:7"
													},
													"nativeSrc": "5555:24:7",
													"nodeType": "YulFunctionCall",
													"src": "5555:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5543:6:7",
												"nodeType": "YulIdentifier",
												"src": "5543:6:7"
											},
											"nativeSrc": "5543:37:7",
											"nodeType": "YulFunctionCall",
											"src": "5543:37:7"
										},
										"nativeSrc": "5543:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "5543:37:7"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "5468:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5521:5:7",
									"nodeType": "YulTypedName",
									"src": "5521:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5528:3:7",
									"nodeType": "YulTypedName",
									"src": "5528:3:7",
									"type": ""
								}
							],
							"src": "5468:118:7"
						},
						{
							"body": {
								"nativeSrc": "5690:124:7",
								"nodeType": "YulBlock",
								"src": "5690:124:7",
								"statements": [
									{
										"nativeSrc": "5700:26:7",
										"nodeType": "YulAssignment",
										"src": "5700:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5712:9:7",
													"nodeType": "YulIdentifier",
													"src": "5712:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5723:2:7",
													"nodeType": "YulLiteral",
													"src": "5723:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5708:3:7",
												"nodeType": "YulIdentifier",
												"src": "5708:3:7"
											},
											"nativeSrc": "5708:18:7",
											"nodeType": "YulFunctionCall",
											"src": "5708:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5700:4:7",
												"nodeType": "YulIdentifier",
												"src": "5700:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5780:6:7",
													"nodeType": "YulIdentifier",
													"src": "5780:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5793:9:7",
															"nodeType": "YulIdentifier",
															"src": "5793:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "5804:1:7",
															"nodeType": "YulLiteral",
															"src": "5804:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5789:3:7",
														"nodeType": "YulIdentifier",
														"src": "5789:3:7"
													},
													"nativeSrc": "5789:17:7",
													"nodeType": "YulFunctionCall",
													"src": "5789:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5736:43:7",
												"nodeType": "YulIdentifier",
												"src": "5736:43:7"
											},
											"nativeSrc": "5736:71:7",
											"nodeType": "YulFunctionCall",
											"src": "5736:71:7"
										},
										"nativeSrc": "5736:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "5736:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "5592:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5662:9:7",
									"nodeType": "YulTypedName",
									"src": "5662:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5674:6:7",
									"nodeType": "YulTypedName",
									"src": "5674:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5685:4:7",
									"nodeType": "YulTypedName",
									"src": "5685:4:7",
									"type": ""
								}
							],
							"src": "5592:222:7"
						},
						{
							"body": {
								"nativeSrc": "5848:152:7",
								"nodeType": "YulBlock",
								"src": "5848:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5865:1:7",
													"nodeType": "YulLiteral",
													"src": "5865:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5868:77:7",
													"nodeType": "YulLiteral",
													"src": "5868:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5858:6:7",
												"nodeType": "YulIdentifier",
												"src": "5858:6:7"
											},
											"nativeSrc": "5858:88:7",
											"nodeType": "YulFunctionCall",
											"src": "5858:88:7"
										},
										"nativeSrc": "5858:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "5858:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5962:1:7",
													"nodeType": "YulLiteral",
													"src": "5962:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "5965:4:7",
													"nodeType": "YulLiteral",
													"src": "5965:4:7",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5955:6:7",
												"nodeType": "YulIdentifier",
												"src": "5955:6:7"
											},
											"nativeSrc": "5955:15:7",
											"nodeType": "YulFunctionCall",
											"src": "5955:15:7"
										},
										"nativeSrc": "5955:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "5955:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5986:1:7",
													"nodeType": "YulLiteral",
													"src": "5986:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5989:4:7",
													"nodeType": "YulLiteral",
													"src": "5989:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "5979:6:7",
												"nodeType": "YulIdentifier",
												"src": "5979:6:7"
											},
											"nativeSrc": "5979:15:7",
											"nodeType": "YulFunctionCall",
											"src": "5979:15:7"
										},
										"nativeSrc": "5979:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "5979:15:7"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "5820:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "5820:180:7"
						},
						{
							"body": {
								"nativeSrc": "6057:51:7",
								"nodeType": "YulBlock",
								"src": "6057:51:7",
								"statements": [
									{
										"nativeSrc": "6067:34:7",
										"nodeType": "YulAssignment",
										"src": "6067:34:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6092:1:7",
													"nodeType": "YulLiteral",
													"src": "6092:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "value",
													"nativeSrc": "6095:5:7",
													"nodeType": "YulIdentifier",
													"src": "6095:5:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "6088:3:7",
												"nodeType": "YulIdentifier",
												"src": "6088:3:7"
											},
											"nativeSrc": "6088:13:7",
											"nodeType": "YulFunctionCall",
											"src": "6088:13:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "6067:8:7",
												"nodeType": "YulIdentifier",
												"src": "6067:8:7"
											}
										]
									}
								]
							},
							"name": "shift_right_1_unsigned",
							"nativeSrc": "6006:102:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "6038:5:7",
									"nodeType": "YulTypedName",
									"src": "6038:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "6048:8:7",
									"nodeType": "YulTypedName",
									"src": "6048:8:7",
									"type": ""
								}
							],
							"src": "6006:102:7"
						},
						{
							"body": {
								"nativeSrc": "6187:775:7",
								"nodeType": "YulBlock",
								"src": "6187:775:7",
								"statements": [
									{
										"nativeSrc": "6197:15:7",
										"nodeType": "YulAssignment",
										"src": "6197:15:7",
										"value": {
											"name": "_power",
											"nativeSrc": "6206:6:7",
											"nodeType": "YulIdentifier",
											"src": "6206:6:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "6197:5:7",
												"nodeType": "YulIdentifier",
												"src": "6197:5:7"
											}
										]
									},
									{
										"nativeSrc": "6221:14:7",
										"nodeType": "YulAssignment",
										"src": "6221:14:7",
										"value": {
											"name": "_base",
											"nativeSrc": "6230:5:7",
											"nodeType": "YulIdentifier",
											"src": "6230:5:7"
										},
										"variableNames": [
											{
												"name": "base",
												"nativeSrc": "6221:4:7",
												"nodeType": "YulIdentifier",
												"src": "6221:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "6279:677:7",
											"nodeType": "YulBlock",
											"src": "6279:677:7",
											"statements": [
												{
													"body": {
														"nativeSrc": "6367:22:7",
														"nodeType": "YulBlock",
														"src": "6367:22:7",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"functionName": {
																		"name": "panic_error_0x11",
																		"nativeSrc": "6369:16:7",
																		"nodeType": "YulIdentifier",
																		"src": "6369:16:7"
																	},
																	"nativeSrc": "6369:18:7",
																	"nodeType": "YulFunctionCall",
																	"src": "6369:18:7"
																},
																"nativeSrc": "6369:18:7",
																"nodeType": "YulExpressionStatement",
																"src": "6369:18:7"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "6345:4:7",
																"nodeType": "YulIdentifier",
																"src": "6345:4:7"
															},
															{
																"arguments": [
																	{
																		"name": "max",
																		"nativeSrc": "6355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6355:3:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6360:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6360:4:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6351:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:7"
																},
																"nativeSrc": "6351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6351:14:7"
															}
														],
														"functionName": {
															"name": "gt",
															"nativeSrc": "6342:2:7",
															"nodeType": "YulIdentifier",
															"src": "6342:2:7"
														},
														"nativeSrc": "6342:24:7",
														"nodeType": "YulFunctionCall",
														"src": "6342:24:7"
													},
													"nativeSrc": "6339:50:7",
													"nodeType": "YulIf",
													"src": "6339:50:7"
												},
												{
													"body": {
														"nativeSrc": "6434:419:7",
														"nodeType": "YulBlock",
														"src": "6434:419:7",
														"statements": [
															{
																"nativeSrc": "6814:25:7",
																"nodeType": "YulAssignment",
																"src": "6814:25:7",
																"value": {
																	"arguments": [
																		{
																			"name": "power",
																			"nativeSrc": "6827:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6827:5:7"
																		},
																		{
																			"name": "base",
																			"nativeSrc": "6834:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "6834:4:7"
																		}
																	],
																	"functionName": {
																		"name": "mul",
																		"nativeSrc": "6823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:7"
																	},
																	"nativeSrc": "6823:16:7",
																	"nodeType": "YulFunctionCall",
																	"src": "6823:16:7"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nativeSrc": "6814:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6814:5:7"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "exponent",
																"nativeSrc": "6409:8:7",
																"nodeType": "YulIdentifier",
																"src": "6409:8:7"
															},
															{
																"kind": "number",
																"nativeSrc": "6419:1:7",
																"nodeType": "YulLiteral",
																"src": "6419:1:7",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "6405:3:7",
															"nodeType": "YulIdentifier",
															"src": "6405:3:7"
														},
														"nativeSrc": "6405:16:7",
														"nodeType": "YulFunctionCall",
														"src": "6405:16:7"
													},
													"nativeSrc": "6402:451:7",
													"nodeType": "YulIf",
													"src": "6402:451:7"
												},
												{
													"nativeSrc": "6866:23:7",
													"nodeType": "YulAssignment",
													"src": "6866:23:7",
													"value": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "6878:4:7",
																"nodeType": "YulIdentifier",
																"src": "6878:4:7"
															},
															{
																"name": "base",
																"nativeSrc": "6884:4:7",
																"nodeType": "YulIdentifier",
																"src": "6884:4:7"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "6874:3:7",
															"nodeType": "YulIdentifier",
															"src": "6874:3:7"
														},
														"nativeSrc": "6874:15:7",
														"nodeType": "YulFunctionCall",
														"src": "6874:15:7"
													},
													"variableNames": [
														{
															"name": "base",
															"nativeSrc": "6866:4:7",
															"nodeType": "YulIdentifier",
															"src": "6866:4:7"
														}
													]
												},
												{
													"nativeSrc": "6902:44:7",
													"nodeType": "YulAssignment",
													"src": "6902:44:7",
													"value": {
														"arguments": [
															{
																"name": "exponent",
																"nativeSrc": "6937:8:7",
																"nodeType": "YulIdentifier",
																"src": "6937:8:7"
															}
														],
														"functionName": {
															"name": "shift_right_1_unsigned",
															"nativeSrc": "6914:22:7",
															"nodeType": "YulIdentifier",
															"src": "6914:22:7"
														},
														"nativeSrc": "6914:32:7",
														"nodeType": "YulFunctionCall",
														"src": "6914:32:7"
													},
													"variableNames": [
														{
															"name": "exponent",
															"nativeSrc": "6902:8:7",
															"nodeType": "YulIdentifier",
															"src": "6902:8:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "6255:8:7",
													"nodeType": "YulIdentifier",
													"src": "6255:8:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6265:1:7",
													"nodeType": "YulLiteral",
													"src": "6265:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "6252:2:7",
												"nodeType": "YulIdentifier",
												"src": "6252:2:7"
											},
											"nativeSrc": "6252:15:7",
											"nodeType": "YulFunctionCall",
											"src": "6252:15:7"
										},
										"nativeSrc": "6244:712:7",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "6268:2:7",
											"nodeType": "YulBlock",
											"src": "6268:2:7",
											"statements": []
										},
										"pre": {
											"nativeSrc": "6248:3:7",
											"nodeType": "YulBlock",
											"src": "6248:3:7",
											"statements": []
										},
										"src": "6244:712:7"
									}
								]
							},
							"name": "checked_exp_helper",
							"nativeSrc": "6114:848:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "_power",
									"nativeSrc": "6142:6:7",
									"nodeType": "YulTypedName",
									"src": "6142:6:7",
									"type": ""
								},
								{
									"name": "_base",
									"nativeSrc": "6150:5:7",
									"nodeType": "YulTypedName",
									"src": "6150:5:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "6157:8:7",
									"nodeType": "YulTypedName",
									"src": "6157:8:7",
									"type": ""
								},
								{
									"name": "max",
									"nativeSrc": "6167:3:7",
									"nodeType": "YulTypedName",
									"src": "6167:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "6175:5:7",
									"nodeType": "YulTypedName",
									"src": "6175:5:7",
									"type": ""
								},
								{
									"name": "base",
									"nativeSrc": "6182:4:7",
									"nodeType": "YulTypedName",
									"src": "6182:4:7",
									"type": ""
								}
							],
							"src": "6114:848:7"
						},
						{
							"body": {
								"nativeSrc": "7028:1013:7",
								"nodeType": "YulBlock",
								"src": "7028:1013:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "7223:20:7",
											"nodeType": "YulBlock",
											"src": "7223:20:7",
											"statements": [
												{
													"nativeSrc": "7225:10:7",
													"nodeType": "YulAssignment",
													"src": "7225:10:7",
													"value": {
														"kind": "number",
														"nativeSrc": "7234:1:7",
														"nodeType": "YulLiteral",
														"src": "7234:1:7",
														"type": "",
														"value": "1"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7225:5:7",
															"nodeType": "YulIdentifier",
															"src": "7225:5:7"
														}
													]
												},
												{
													"nativeSrc": "7236:5:7",
													"nodeType": "YulLeave",
													"src": "7236:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "7213:8:7",
													"nodeType": "YulIdentifier",
													"src": "7213:8:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "7206:6:7",
												"nodeType": "YulIdentifier",
												"src": "7206:6:7"
											},
											"nativeSrc": "7206:16:7",
											"nodeType": "YulFunctionCall",
											"src": "7206:16:7"
										},
										"nativeSrc": "7203:40:7",
										"nodeType": "YulIf",
										"src": "7203:40:7"
									},
									{
										"body": {
											"nativeSrc": "7268:20:7",
											"nodeType": "YulBlock",
											"src": "7268:20:7",
											"statements": [
												{
													"nativeSrc": "7270:10:7",
													"nodeType": "YulAssignment",
													"src": "7270:10:7",
													"value": {
														"kind": "number",
														"nativeSrc": "7279:1:7",
														"nodeType": "YulLiteral",
														"src": "7279:1:7",
														"type": "",
														"value": "0"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7270:5:7",
															"nodeType": "YulIdentifier",
															"src": "7270:5:7"
														}
													]
												},
												{
													"nativeSrc": "7281:5:7",
													"nodeType": "YulLeave",
													"src": "7281:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "7262:4:7",
													"nodeType": "YulIdentifier",
													"src": "7262:4:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "7255:6:7",
												"nodeType": "YulIdentifier",
												"src": "7255:6:7"
											},
											"nativeSrc": "7255:12:7",
											"nodeType": "YulFunctionCall",
											"src": "7255:12:7"
										},
										"nativeSrc": "7252:36:7",
										"nodeType": "YulIf",
										"src": "7252:36:7"
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "7398:20:7",
													"nodeType": "YulBlock",
													"src": "7398:20:7",
													"statements": [
														{
															"nativeSrc": "7400:10:7",
															"nodeType": "YulAssignment",
															"src": "7400:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7409:1:7",
																"nodeType": "YulLiteral",
																"src": "7409:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7400:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:5:7"
																}
															]
														},
														{
															"nativeSrc": "7411:5:7",
															"nodeType": "YulLeave",
															"src": "7411:5:7"
														}
													]
												},
												"nativeSrc": "7391:27:7",
												"nodeType": "YulCase",
												"src": "7391:27:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7396:1:7",
													"nodeType": "YulLiteral",
													"src": "7396:1:7",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "7442:176:7",
													"nodeType": "YulBlock",
													"src": "7442:176:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7477:22:7",
																"nodeType": "YulBlock",
																"src": "7477:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7479:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7479:16:7"
																			},
																			"nativeSrc": "7479:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:18:7"
																		},
																		"nativeSrc": "7479:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7479:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7462:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7462:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7472:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7472:3:7",
																		"type": "",
																		"value": "255"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7459:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7459:2:7"
																},
																"nativeSrc": "7459:17:7",
																"nodeType": "YulFunctionCall",
																"src": "7459:17:7"
															},
															"nativeSrc": "7456:43:7",
															"nodeType": "YulIf",
															"src": "7456:43:7"
														},
														{
															"nativeSrc": "7512:25:7",
															"nodeType": "YulAssignment",
															"src": "7512:25:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7525:1:7",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7528:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7528:8:7"
																	}
																],
																"functionName": {
																	"name": "exp",
																	"nativeSrc": "7521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:7"
																},
																"nativeSrc": "7521:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7521:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7512:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7512:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7568:22:7",
																"nodeType": "YulBlock",
																"src": "7568:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7570:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7570:16:7"
																			},
																			"nativeSrc": "7570:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7570:18:7"
																		},
																		"nativeSrc": "7570:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7570:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7556:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7556:5:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7563:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7563:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7553:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7553:2:7"
																},
																"nativeSrc": "7553:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7553:14:7"
															},
															"nativeSrc": "7550:40:7",
															"nodeType": "YulIf",
															"src": "7550:40:7"
														},
														{
															"nativeSrc": "7603:5:7",
															"nodeType": "YulLeave",
															"src": "7603:5:7"
														}
													]
												},
												"nativeSrc": "7427:191:7",
												"nodeType": "YulCase",
												"src": "7427:191:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7432:1:7",
													"nodeType": "YulLiteral",
													"src": "7432:1:7",
													"type": "",
													"value": "2"
												}
											}
										],
										"expression": {
											"name": "base",
											"nativeSrc": "7348:4:7",
											"nodeType": "YulIdentifier",
											"src": "7348:4:7"
										},
										"nativeSrc": "7341:277:7",
										"nodeType": "YulSwitch",
										"src": "7341:277:7"
									},
									{
										"body": {
											"nativeSrc": "7750:123:7",
											"nodeType": "YulBlock",
											"src": "7750:123:7",
											"statements": [
												{
													"nativeSrc": "7764:28:7",
													"nodeType": "YulAssignment",
													"src": "7764:28:7",
													"value": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "7777:4:7",
																"nodeType": "YulIdentifier",
																"src": "7777:4:7"
															},
															{
																"name": "exponent",
																"nativeSrc": "7783:8:7",
																"nodeType": "YulIdentifier",
																"src": "7783:8:7"
															}
														],
														"functionName": {
															"name": "exp",
															"nativeSrc": "7773:3:7",
															"nodeType": "YulIdentifier",
															"src": "7773:3:7"
														},
														"nativeSrc": "7773:19:7",
														"nodeType": "YulFunctionCall",
														"src": "7773:19:7"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7764:5:7",
															"nodeType": "YulIdentifier",
															"src": "7764:5:7"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "7823:22:7",
														"nodeType": "YulBlock",
														"src": "7823:22:7",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"functionName": {
																		"name": "panic_error_0x11",
																		"nativeSrc": "7825:16:7",
																		"nodeType": "YulIdentifier",
																		"src": "7825:16:7"
																	},
																	"nativeSrc": "7825:18:7",
																	"nodeType": "YulFunctionCall",
																	"src": "7825:18:7"
																},
																"nativeSrc": "7825:18:7",
																"nodeType": "YulExpressionStatement",
																"src": "7825:18:7"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "power",
																"nativeSrc": "7811:5:7",
																"nodeType": "YulIdentifier",
																"src": "7811:5:7"
															},
															{
																"name": "max",
																"nativeSrc": "7818:3:7",
																"nodeType": "YulIdentifier",
																"src": "7818:3:7"
															}
														],
														"functionName": {
															"name": "gt",
															"nativeSrc": "7808:2:7",
															"nodeType": "YulIdentifier",
															"src": "7808:2:7"
														},
														"nativeSrc": "7808:14:7",
														"nodeType": "YulFunctionCall",
														"src": "7808:14:7"
													},
													"nativeSrc": "7805:40:7",
													"nodeType": "YulIf",
													"src": "7805:40:7"
												},
												{
													"nativeSrc": "7858:5:7",
													"nodeType": "YulLeave",
													"src": "7858:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "base",
																	"nativeSrc": "7653:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7653:4:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7659:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7659:2:7",
																	"type": "",
																	"value": "11"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7650:2:7",
																"nodeType": "YulIdentifier",
																"src": "7650:2:7"
															},
															"nativeSrc": "7650:12:7",
															"nodeType": "YulFunctionCall",
															"src": "7650:12:7"
														},
														{
															"arguments": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7677:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7677:2:7",
																	"type": "",
																	"value": "78"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7664:2:7",
																"nodeType": "YulIdentifier",
																"src": "7664:2:7"
															},
															"nativeSrc": "7664:16:7",
															"nodeType": "YulFunctionCall",
															"src": "7664:16:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "7646:3:7",
														"nodeType": "YulIdentifier",
														"src": "7646:3:7"
													},
													"nativeSrc": "7646:35:7",
													"nodeType": "YulFunctionCall",
													"src": "7646:35:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "base",
																	"nativeSrc": "7702:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7702:4:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7708:3:7",
																	"nodeType": "YulLiteral",
																	"src": "7708:3:7",
																	"type": "",
																	"value": "307"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7699:2:7",
																"nodeType": "YulIdentifier",
																"src": "7699:2:7"
															},
															"nativeSrc": "7699:13:7",
															"nodeType": "YulFunctionCall",
															"src": "7699:13:7"
														},
														{
															"arguments": [
																{
																	"name": "exponent",
																	"nativeSrc": "7717:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7717:8:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7727:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7727:2:7",
																	"type": "",
																	"value": "32"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7714:2:7",
																"nodeType": "YulIdentifier",
																"src": "7714:2:7"
															},
															"nativeSrc": "7714:16:7",
															"nodeType": "YulFunctionCall",
															"src": "7714:16:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "7695:3:7",
														"nodeType": "YulIdentifier",
														"src": "7695:3:7"
													},
													"nativeSrc": "7695:36:7",
													"nodeType": "YulFunctionCall",
													"src": "7695:36:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "7630:2:7",
												"nodeType": "YulIdentifier",
												"src": "7630:2:7"
											},
											"nativeSrc": "7630:111:7",
											"nodeType": "YulFunctionCall",
											"src": "7630:111:7"
										},
										"nativeSrc": "7627:246:7",
										"nodeType": "YulIf",
										"src": "7627:246:7"
									},
									{
										"nativeSrc": "7883:57:7",
										"nodeType": "YulAssignment",
										"src": "7883:57:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7917:1:7",
													"nodeType": "YulLiteral",
													"src": "7917:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "base",
													"nativeSrc": "7920:4:7",
													"nodeType": "YulIdentifier",
													"src": "7920:4:7"
												},
												{
													"name": "exponent",
													"nativeSrc": "7926:8:7",
													"nodeType": "YulIdentifier",
													"src": "7926:8:7"
												},
												{
													"name": "max",
													"nativeSrc": "7936:3:7",
													"nodeType": "YulIdentifier",
													"src": "7936:3:7"
												}
											],
											"functionName": {
												"name": "checked_exp_helper",
												"nativeSrc": "7898:18:7",
												"nodeType": "YulIdentifier",
												"src": "7898:18:7"
											},
											"nativeSrc": "7898:42:7",
											"nodeType": "YulFunctionCall",
											"src": "7898:42:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "7883:5:7",
												"nodeType": "YulIdentifier",
												"src": "7883:5:7"
											},
											{
												"name": "base",
												"nativeSrc": "7890:4:7",
												"nodeType": "YulIdentifier",
												"src": "7890:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "7979:22:7",
											"nodeType": "YulBlock",
											"src": "7979:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "7981:16:7",
															"nodeType": "YulIdentifier",
															"src": "7981:16:7"
														},
														"nativeSrc": "7981:18:7",
														"nodeType": "YulFunctionCall",
														"src": "7981:18:7"
													},
													"nativeSrc": "7981:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "7981:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "power",
													"nativeSrc": "7956:5:7",
													"nodeType": "YulIdentifier",
													"src": "7956:5:7"
												},
												{
													"arguments": [
														{
															"name": "max",
															"nativeSrc": "7967:3:7",
															"nodeType": "YulIdentifier",
															"src": "7967:3:7"
														},
														{
															"name": "base",
															"nativeSrc": "7972:4:7",
															"nodeType": "YulIdentifier",
															"src": "7972:4:7"
														}
													],
													"functionName": {
														"name": "div",
														"nativeSrc": "7963:3:7",
														"nodeType": "YulIdentifier",
														"src": "7963:3:7"
													},
													"nativeSrc": "7963:14:7",
													"nodeType": "YulFunctionCall",
													"src": "7963:14:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "7953:2:7",
												"nodeType": "YulIdentifier",
												"src": "7953:2:7"
											},
											"nativeSrc": "7953:25:7",
											"nodeType": "YulFunctionCall",
											"src": "7953:25:7"
										},
										"nativeSrc": "7950:51:7",
										"nodeType": "YulIf",
										"src": "7950:51:7"
									},
									{
										"nativeSrc": "8010:25:7",
										"nodeType": "YulAssignment",
										"src": "8010:25:7",
										"value": {
											"arguments": [
												{
													"name": "power",
													"nativeSrc": "8023:5:7",
													"nodeType": "YulIdentifier",
													"src": "8023:5:7"
												},
												{
													"name": "base",
													"nativeSrc": "8030:4:7",
													"nodeType": "YulIdentifier",
													"src": "8030:4:7"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "8019:3:7",
												"nodeType": "YulIdentifier",
												"src": "8019:3:7"
											},
											"nativeSrc": "8019:16:7",
											"nodeType": "YulFunctionCall",
											"src": "8019:16:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "8010:5:7",
												"nodeType": "YulIdentifier",
												"src": "8010:5:7"
											}
										]
									}
								]
							},
							"name": "checked_exp_unsigned",
							"nativeSrc": "6968:1073:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "base",
									"nativeSrc": "6998:4:7",
									"nodeType": "YulTypedName",
									"src": "6998:4:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "7004:8:7",
									"nodeType": "YulTypedName",
									"src": "7004:8:7",
									"type": ""
								},
								{
									"name": "max",
									"nativeSrc": "7014:3:7",
									"nodeType": "YulTypedName",
									"src": "7014:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "7022:5:7",
									"nodeType": "YulTypedName",
									"src": "7022:5:7",
									"type": ""
								}
							],
							"src": "6968:1073:7"
						},
						{
							"body": {
								"nativeSrc": "8090:43:7",
								"nodeType": "YulBlock",
								"src": "8090:43:7",
								"statements": [
									{
										"nativeSrc": "8100:27:7",
										"nodeType": "YulAssignment",
										"src": "8100:27:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "8115:5:7",
													"nodeType": "YulIdentifier",
													"src": "8115:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8122:4:7",
													"nodeType": "YulLiteral",
													"src": "8122:4:7",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "8111:3:7",
												"nodeType": "YulIdentifier",
												"src": "8111:3:7"
											},
											"nativeSrc": "8111:16:7",
											"nodeType": "YulFunctionCall",
											"src": "8111:16:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "8100:7:7",
												"nodeType": "YulIdentifier",
												"src": "8100:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nativeSrc": "8047:86:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "8072:5:7",
									"nodeType": "YulTypedName",
									"src": "8072:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "8082:7:7",
									"nodeType": "YulTypedName",
									"src": "8082:7:7",
									"type": ""
								}
							],
							"src": "8047:86:7"
						},
						{
							"body": {
								"nativeSrc": "8203:217:7",
								"nodeType": "YulBlock",
								"src": "8203:217:7",
								"statements": [
									{
										"nativeSrc": "8213:31:7",
										"nodeType": "YulAssignment",
										"src": "8213:31:7",
										"value": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "8239:4:7",
													"nodeType": "YulIdentifier",
													"src": "8239:4:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8221:17:7",
												"nodeType": "YulIdentifier",
												"src": "8221:17:7"
											},
											"nativeSrc": "8221:23:7",
											"nodeType": "YulFunctionCall",
											"src": "8221:23:7"
										},
										"variableNames": [
											{
												"name": "base",
												"nativeSrc": "8213:4:7",
												"nodeType": "YulIdentifier",
												"src": "8213:4:7"
											}
										]
									},
									{
										"nativeSrc": "8253:37:7",
										"nodeType": "YulAssignment",
										"src": "8253:37:7",
										"value": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "8281:8:7",
													"nodeType": "YulIdentifier",
													"src": "8281:8:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint8",
												"nativeSrc": "8265:15:7",
												"nodeType": "YulIdentifier",
												"src": "8265:15:7"
											},
											"nativeSrc": "8265:25:7",
											"nodeType": "YulFunctionCall",
											"src": "8265:25:7"
										},
										"variableNames": [
											{
												"name": "exponent",
												"nativeSrc": "8253:8:7",
												"nodeType": "YulIdentifier",
												"src": "8253:8:7"
											}
										]
									},
									{
										"nativeSrc": "8300:113:7",
										"nodeType": "YulAssignment",
										"src": "8300:113:7",
										"value": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "8330:4:7",
													"nodeType": "YulIdentifier",
													"src": "8330:4:7"
												},
												{
													"name": "exponent",
													"nativeSrc": "8336:8:7",
													"nodeType": "YulIdentifier",
													"src": "8336:8:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8346:66:7",
													"nodeType": "YulLiteral",
													"src": "8346:66:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "checked_exp_unsigned",
												"nativeSrc": "8309:20:7",
												"nodeType": "YulIdentifier",
												"src": "8309:20:7"
											},
											"nativeSrc": "8309:104:7",
											"nodeType": "YulFunctionCall",
											"src": "8309:104:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "8300:5:7",
												"nodeType": "YulIdentifier",
												"src": "8300:5:7"
											}
										]
									}
								]
							},
							"name": "checked_exp_t_uint256_t_uint8",
							"nativeSrc": "8139:281:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "base",
									"nativeSrc": "8178:4:7",
									"nodeType": "YulTypedName",
									"src": "8178:4:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "8184:8:7",
									"nodeType": "YulTypedName",
									"src": "8184:8:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "8197:5:7",
									"nodeType": "YulTypedName",
									"src": "8197:5:7",
									"type": ""
								}
							],
							"src": "8139:281:7"
						},
						{
							"body": {
								"nativeSrc": "8474:362:7",
								"nodeType": "YulBlock",
								"src": "8474:362:7",
								"statements": [
									{
										"nativeSrc": "8484:25:7",
										"nodeType": "YulAssignment",
										"src": "8484:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8507:1:7",
													"nodeType": "YulIdentifier",
													"src": "8507:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8489:17:7",
												"nodeType": "YulIdentifier",
												"src": "8489:17:7"
											},
											"nativeSrc": "8489:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8489:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "8484:1:7",
												"nodeType": "YulIdentifier",
												"src": "8484:1:7"
											}
										]
									},
									{
										"nativeSrc": "8518:25:7",
										"nodeType": "YulAssignment",
										"src": "8518:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "8541:1:7",
													"nodeType": "YulIdentifier",
													"src": "8541:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8523:17:7",
												"nodeType": "YulIdentifier",
												"src": "8523:17:7"
											},
											"nativeSrc": "8523:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8523:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "8518:1:7",
												"nodeType": "YulIdentifier",
												"src": "8518:1:7"
											}
										]
									},
									{
										"nativeSrc": "8552:28:7",
										"nodeType": "YulVariableDeclaration",
										"src": "8552:28:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8575:1:7",
													"nodeType": "YulIdentifier",
													"src": "8575:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "8578:1:7",
													"nodeType": "YulIdentifier",
													"src": "8578:1:7"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "8571:3:7",
												"nodeType": "YulIdentifier",
												"src": "8571:3:7"
											},
											"nativeSrc": "8571:9:7",
											"nodeType": "YulFunctionCall",
											"src": "8571:9:7"
										},
										"variables": [
											{
												"name": "product_raw",
												"nativeSrc": "8556:11:7",
												"nodeType": "YulTypedName",
												"src": "8556:11:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "8589:41:7",
										"nodeType": "YulAssignment",
										"src": "8589:41:7",
										"value": {
											"arguments": [
												{
													"name": "product_raw",
													"nativeSrc": "8618:11:7",
													"nodeType": "YulIdentifier",
													"src": "8618:11:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8600:17:7",
												"nodeType": "YulIdentifier",
												"src": "8600:17:7"
											},
											"nativeSrc": "8600:30:7",
											"nodeType": "YulFunctionCall",
											"src": "8600:30:7"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "8589:7:7",
												"nodeType": "YulIdentifier",
												"src": "8589:7:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8807:22:7",
											"nodeType": "YulBlock",
											"src": "8807:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "8809:16:7",
															"nodeType": "YulIdentifier",
															"src": "8809:16:7"
														},
														"nativeSrc": "8809:18:7",
														"nodeType": "YulFunctionCall",
														"src": "8809:18:7"
													},
													"nativeSrc": "8809:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "8809:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "8740:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8740:1:7"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "8733:6:7",
																"nodeType": "YulIdentifier",
																"src": "8733:6:7"
															},
															"nativeSrc": "8733:9:7",
															"nodeType": "YulFunctionCall",
															"src": "8733:9:7"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "8763:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8763:1:7"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "8770:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "8770:7:7"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "8779:1:7",
																			"nodeType": "YulIdentifier",
																			"src": "8779:1:7"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "8766:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8766:3:7"
																	},
																	"nativeSrc": "8766:15:7",
																	"nodeType": "YulFunctionCall",
																	"src": "8766:15:7"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "8760:2:7",
																"nodeType": "YulIdentifier",
																"src": "8760:2:7"
															},
															"nativeSrc": "8760:22:7",
															"nodeType": "YulFunctionCall",
															"src": "8760:22:7"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "8713:2:7",
														"nodeType": "YulIdentifier",
														"src": "8713:2:7"
													},
													"nativeSrc": "8713:83:7",
													"nodeType": "YulFunctionCall",
													"src": "8713:83:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "8693:6:7",
												"nodeType": "YulIdentifier",
												"src": "8693:6:7"
											},
											"nativeSrc": "8693:113:7",
											"nodeType": "YulFunctionCall",
											"src": "8693:113:7"
										},
										"nativeSrc": "8690:139:7",
										"nodeType": "YulIf",
										"src": "8690:139:7"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "8426:410:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "8457:1:7",
									"nodeType": "YulTypedName",
									"src": "8457:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "8460:1:7",
									"nodeType": "YulTypedName",
									"src": "8460:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "8466:7:7",
									"nodeType": "YulTypedName",
									"src": "8466:7:7",
									"type": ""
								}
							],
							"src": "8426:410:7"
						},
						{
							"body": {
								"nativeSrc": "8886:147:7",
								"nodeType": "YulBlock",
								"src": "8886:147:7",
								"statements": [
									{
										"nativeSrc": "8896:25:7",
										"nodeType": "YulAssignment",
										"src": "8896:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8919:1:7",
													"nodeType": "YulIdentifier",
													"src": "8919:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8901:17:7",
												"nodeType": "YulIdentifier",
												"src": "8901:17:7"
											},
											"nativeSrc": "8901:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8901:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "8896:1:7",
												"nodeType": "YulIdentifier",
												"src": "8896:1:7"
											}
										]
									},
									{
										"nativeSrc": "8930:25:7",
										"nodeType": "YulAssignment",
										"src": "8930:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "8953:1:7",
													"nodeType": "YulIdentifier",
													"src": "8953:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8935:17:7",
												"nodeType": "YulIdentifier",
												"src": "8935:17:7"
											},
											"nativeSrc": "8935:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8935:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "8930:1:7",
												"nodeType": "YulIdentifier",
												"src": "8930:1:7"
											}
										]
									},
									{
										"nativeSrc": "8964:16:7",
										"nodeType": "YulAssignment",
										"src": "8964:16:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8975:1:7",
													"nodeType": "YulIdentifier",
													"src": "8975:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "8978:1:7",
													"nodeType": "YulIdentifier",
													"src": "8978:1:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8971:3:7",
												"nodeType": "YulIdentifier",
												"src": "8971:3:7"
											},
											"nativeSrc": "8971:9:7",
											"nodeType": "YulFunctionCall",
											"src": "8971:9:7"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "8964:3:7",
												"nodeType": "YulIdentifier",
												"src": "8964:3:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "9004:22:7",
											"nodeType": "YulBlock",
											"src": "9004:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "9006:16:7",
															"nodeType": "YulIdentifier",
															"src": "9006:16:7"
														},
														"nativeSrc": "9006:18:7",
														"nodeType": "YulFunctionCall",
														"src": "9006:18:7"
													},
													"nativeSrc": "9006:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "9006:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8996:1:7",
													"nodeType": "YulIdentifier",
													"src": "8996:1:7"
												},
												{
													"name": "sum",
													"nativeSrc": "8999:3:7",
													"nodeType": "YulIdentifier",
													"src": "8999:3:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "8993:2:7",
												"nodeType": "YulIdentifier",
												"src": "8993:2:7"
											},
											"nativeSrc": "8993:10:7",
											"nodeType": "YulFunctionCall",
											"src": "8993:10:7"
										},
										"nativeSrc": "8990:36:7",
										"nodeType": "YulIf",
										"src": "8990:36:7"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "8842:191:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "8873:1:7",
									"nodeType": "YulTypedName",
									"src": "8873:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "8876:1:7",
									"nodeType": "YulTypedName",
									"src": "8876:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "8882:3:7",
									"nodeType": "YulTypedName",
									"src": "8882:3:7",
									"type": ""
								}
							],
							"src": "8842:191:7"
						},
						{
							"body": {
								"nativeSrc": "9104:53:7",
								"nodeType": "YulBlock",
								"src": "9104:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9121:3:7",
													"nodeType": "YulIdentifier",
													"src": "9121:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "9144:5:7",
															"nodeType": "YulIdentifier",
															"src": "9144:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "9126:17:7",
														"nodeType": "YulIdentifier",
														"src": "9126:17:7"
													},
													"nativeSrc": "9126:24:7",
													"nodeType": "YulFunctionCall",
													"src": "9126:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9114:6:7",
												"nodeType": "YulIdentifier",
												"src": "9114:6:7"
											},
											"nativeSrc": "9114:37:7",
											"nodeType": "YulFunctionCall",
											"src": "9114:37:7"
										},
										"nativeSrc": "9114:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "9114:37:7"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "9039:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "9092:5:7",
									"nodeType": "YulTypedName",
									"src": "9092:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "9099:3:7",
									"nodeType": "YulTypedName",
									"src": "9099:3:7",
									"type": ""
								}
							],
							"src": "9039:118:7"
						},
						{
							"body": {
								"nativeSrc": "9317:288:7",
								"nodeType": "YulBlock",
								"src": "9317:288:7",
								"statements": [
									{
										"nativeSrc": "9327:26:7",
										"nodeType": "YulAssignment",
										"src": "9327:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9339:9:7",
													"nodeType": "YulIdentifier",
													"src": "9339:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9350:2:7",
													"nodeType": "YulLiteral",
													"src": "9350:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9335:3:7",
												"nodeType": "YulIdentifier",
												"src": "9335:3:7"
											},
											"nativeSrc": "9335:18:7",
											"nodeType": "YulFunctionCall",
											"src": "9335:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9327:4:7",
												"nodeType": "YulIdentifier",
												"src": "9327:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "9407:6:7",
													"nodeType": "YulIdentifier",
													"src": "9407:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9420:9:7",
															"nodeType": "YulIdentifier",
															"src": "9420:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9431:1:7",
															"nodeType": "YulLiteral",
															"src": "9431:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9416:3:7",
														"nodeType": "YulIdentifier",
														"src": "9416:3:7"
													},
													"nativeSrc": "9416:17:7",
													"nodeType": "YulFunctionCall",
													"src": "9416:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9363:43:7",
												"nodeType": "YulIdentifier",
												"src": "9363:43:7"
											},
											"nativeSrc": "9363:71:7",
											"nodeType": "YulFunctionCall",
											"src": "9363:71:7"
										},
										"nativeSrc": "9363:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "9363:71:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "9488:6:7",
													"nodeType": "YulIdentifier",
													"src": "9488:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9501:9:7",
															"nodeType": "YulIdentifier",
															"src": "9501:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9512:2:7",
															"nodeType": "YulLiteral",
															"src": "9512:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9497:3:7",
														"nodeType": "YulIdentifier",
														"src": "9497:3:7"
													},
													"nativeSrc": "9497:18:7",
													"nodeType": "YulFunctionCall",
													"src": "9497:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9444:43:7",
												"nodeType": "YulIdentifier",
												"src": "9444:43:7"
											},
											"nativeSrc": "9444:72:7",
											"nodeType": "YulFunctionCall",
											"src": "9444:72:7"
										},
										"nativeSrc": "9444:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "9444:72:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "9570:6:7",
													"nodeType": "YulIdentifier",
													"src": "9570:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9583:9:7",
															"nodeType": "YulIdentifier",
															"src": "9583:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9594:2:7",
															"nodeType": "YulLiteral",
															"src": "9594:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9579:3:7",
														"nodeType": "YulIdentifier",
														"src": "9579:3:7"
													},
													"nativeSrc": "9579:18:7",
													"nodeType": "YulFunctionCall",
													"src": "9579:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9526:43:7",
												"nodeType": "YulIdentifier",
												"src": "9526:43:7"
											},
											"nativeSrc": "9526:72:7",
											"nodeType": "YulFunctionCall",
											"src": "9526:72:7"
										},
										"nativeSrc": "9526:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "9526:72:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "9163:442:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9273:9:7",
									"nodeType": "YulTypedName",
									"src": "9273:9:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "9285:6:7",
									"nodeType": "YulTypedName",
									"src": "9285:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "9293:6:7",
									"nodeType": "YulTypedName",
									"src": "9293:6:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "9301:6:7",
									"nodeType": "YulTypedName",
									"src": "9301:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9312:4:7",
									"nodeType": "YulTypedName",
									"src": "9312:4:7",
									"type": ""
								}
							],
							"src": "9163:442:7"
						},
						{
							"body": {
								"nativeSrc": "9709:124:7",
								"nodeType": "YulBlock",
								"src": "9709:124:7",
								"statements": [
									{
										"nativeSrc": "9719:26:7",
										"nodeType": "YulAssignment",
										"src": "9719:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9731:9:7",
													"nodeType": "YulIdentifier",
													"src": "9731:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9742:2:7",
													"nodeType": "YulLiteral",
													"src": "9742:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9727:3:7",
												"nodeType": "YulIdentifier",
												"src": "9727:3:7"
											},
											"nativeSrc": "9727:18:7",
											"nodeType": "YulFunctionCall",
											"src": "9727:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9719:4:7",
												"nodeType": "YulIdentifier",
												"src": "9719:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "9799:6:7",
													"nodeType": "YulIdentifier",
													"src": "9799:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9812:9:7",
															"nodeType": "YulIdentifier",
															"src": "9812:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9823:1:7",
															"nodeType": "YulLiteral",
															"src": "9823:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9808:3:7",
														"nodeType": "YulIdentifier",
														"src": "9808:3:7"
													},
													"nativeSrc": "9808:17:7",
													"nodeType": "YulFunctionCall",
													"src": "9808:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9755:43:7",
												"nodeType": "YulIdentifier",
												"src": "9755:43:7"
											},
											"nativeSrc": "9755:71:7",
											"nodeType": "YulFunctionCall",
											"src": "9755:71:7"
										},
										"nativeSrc": "9755:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "9755:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "9611:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9681:9:7",
									"nodeType": "YulTypedName",
									"src": "9681:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "9693:6:7",
									"nodeType": "YulTypedName",
									"src": "9693:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9704:4:7",
									"nodeType": "YulTypedName",
									"src": "9704:4:7",
									"type": ""
								}
							],
							"src": "9611:222:7"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "608060405234801561000f575f5ffd5b50336040518060400160405280600681526020017f54657468657200000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5553445400000000000000000000000000000000000000000000000000000000815250816003908161008c9190610707565b50806004908161009c9190610707565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610815565b60405180910390fd5b61011e8161016160201b60201c565b505f61012e61022460201b60201c565b600a61013a9190610996565b6305f5e10061014991906109e0565b905061015b338261022c60201b60201c565b50610ab1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361029c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102939190610815565b60405180910390fd5b6102ad5f83836102b160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610301578060025f8282546102f59190610a21565b925050819055506103cf565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561038a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038193929190610a63565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610416578060025f8282540392505081905550610460565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104bd9190610a98565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061054557607f821691505b60208210810361055857610557610501565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261057f565b6105c4868361057f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106086106036105fe846105dc565b6105e5565b6105dc565b9050919050565b5f819050919050565b610621836105ee565b61063561062d8261060f565b84845461058b565b825550505050565b5f5f905090565b61064c61063d565b610657818484610618565b505050565b5b8181101561067a5761066f5f82610644565b60018101905061065d565b5050565b601f8211156106bf576106908161055e565b61069984610570565b810160208510156106a8578190505b6106bc6106b485610570565b83018261065c565b50505b505050565b5f82821c905092915050565b5f6106df5f19846008026106c4565b1980831691505092915050565b5f6106f783836106d0565b9150826002028217905092915050565b610710826104ca565b67ffffffffffffffff811115610729576107286104d4565b5b610733825461052e565b61073e82828561067e565b5f60209050601f83116001811461076f575f841561075d578287015190505b61076785826106ec565b8655506107ce565b601f19841661077d8661055e565b5f5b828110156107a45784890151825560018201915060208501945060208101905061077f565b868310156107c157848901516107bd601f8916826106d0565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107ff826107d6565b9050919050565b61080f816107f5565b82525050565b5f6020820190506108285f830184610806565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156108b05780860481111561088c5761088b61082e565b5b600185161561089b5780820291505b80810290506108a98561085b565b9450610870565b94509492505050565b5f826108c85760019050610983565b816108d5575f9050610983565b81600181146108eb57600281146108f557610924565b6001915050610983565b60ff8411156109075761090661082e565b5b8360020a91508482111561091e5761091d61082e565b5b50610983565b5060208310610133831016604e8410600b84101617156109595782820a9050838111156109545761095361082e565b5b610983565b6109668484846001610867565b9250905081840481111561097d5761097c61082e565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6109a0826105dc565b91506109ab8361098a565b92506109d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108b9565b905092915050565b5f6109ea826105dc565b91506109f5836105dc565b9250828202610a03816105dc565b91508282048414831517610a1a57610a1961082e565b5b5092915050565b5f610a2b826105dc565b9150610a36836105dc565b9250828201905080821115610a4e57610a4d61082e565b5b92915050565b610a5d816105dc565b82525050565b5f606082019050610a765f830186610806565b610a836020830185610a54565b610a906040830184610a54565b949350505050565b5f602082019050610aab5f830184610a54565b92915050565b61120980610abe5f395ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f5ffd5b6100f46102d0565b6040516101019190610e57565b60405180910390f35b610124600480360381019061011f9190610f08565b610360565b6040516101319190610f60565b60405180910390f35b610142610382565b60405161014f9190610f88565b60405180910390f35b610172600480360381019061016d9190610fa1565b61038b565b60405161017f9190610f60565b60405180910390f35b6101906103b9565b60405161019d919061100c565b60405180910390f35b6101c060048036038101906101bb9190610f08565b6103c1565b005b6101dc60048036038101906101d79190611025565b6103d7565b005b6101f860048036038101906101f39190611050565b6103e4565b6040516102059190610f88565b60405180910390f35b610216610429565b005b61022061043c565b60405161022d919061108a565b60405180910390f35b61023e610464565b60405161024b9190610e57565b60405180910390f35b61026e60048036038101906102699190610f08565b6104f4565b60405161027b9190610f60565b60405180910390f35b61029e600480360381019061029991906110a3565b610516565b6040516102ab9190610f88565b60405180910390f35b6102ce60048036038101906102c99190611050565b610598565b005b6060600380546102df9061110e565b80601f016020809104026020016040519081016040528092919081815260200182805461030b9061110e565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f5f61036a61061c565b9050610377818585610623565b600191505092915050565b5f600254905090565b5f5f61039561061c565b90506103a2858285610635565b6103ad8585856106c7565b60019150509392505050565b5f6012905090565b6103c96107b7565b6103d3828261083e565b5050565b6103e133826108bd565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104316107b7565b61043a5f61093c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104739061110e565b80601f016020809104026020016040519081016040528092919081815260200182805461049f9061110e565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b5f5f6104fe61061c565b905061050b8185856106c7565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6105a06107b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610607919061108a565b60405180910390fd5b6106198161093c565b50565b5f33905090565b61063083838360016109ff565b505050565b5f6106408484610516565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c157818110156106b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a99392919061113e565b60405180910390fd5b6106c084848484035f6109ff565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610737575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072e919061108a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079e919061108a565b60405180910390fd5b6107b2838383610bce565b505050565b6107bf61061c565b73ffffffffffffffffffffffffffffffffffffffff166107dd61043c565b73ffffffffffffffffffffffffffffffffffffffff161461083c5761080061061c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610833919061108a565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108a5919061108a565b60405180910390fd5b6108b95f8383610bce565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610924919061108a565b60405180910390fd5b610938825f83610bce565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a6f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a66919061108a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610adf575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad6919061108a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbf9190610f88565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1e578060025f828254610c1291906111a0565b92505081905550610cec565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9e9392919061113e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d33578060025f8282540392505081905550610d7d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dda9190610f88565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e2982610de7565b610e338185610df1565b9350610e43818560208601610e01565b610e4c81610e0f565b840191505092915050565b5f6020820190508181035f830152610e6f8184610e1f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ea482610e7b565b9050919050565b610eb481610e9a565b8114610ebe575f5ffd5b50565b5f81359050610ecf81610eab565b92915050565b5f819050919050565b610ee781610ed5565b8114610ef1575f5ffd5b50565b5f81359050610f0281610ede565b92915050565b5f5f60408385031215610f1e57610f1d610e77565b5b5f610f2b85828601610ec1565b9250506020610f3c85828601610ef4565b9150509250929050565b5f8115159050919050565b610f5a81610f46565b82525050565b5f602082019050610f735f830184610f51565b92915050565b610f8281610ed5565b82525050565b5f602082019050610f9b5f830184610f79565b92915050565b5f5f5f60608486031215610fb857610fb7610e77565b5b5f610fc586828701610ec1565b9350506020610fd686828701610ec1565b9250506040610fe786828701610ef4565b9150509250925092565b5f60ff82169050919050565b61100681610ff1565b82525050565b5f60208201905061101f5f830184610ffd565b92915050565b5f6020828403121561103a57611039610e77565b5b5f61104784828501610ef4565b91505092915050565b5f6020828403121561106557611064610e77565b5b5f61107284828501610ec1565b91505092915050565b61108481610e9a565b82525050565b5f60208201905061109d5f83018461107b565b92915050565b5f5f604083850312156110b9576110b8610e77565b5b5f6110c685828601610ec1565b92505060206110d785828601610ec1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112557607f821691505b602082108103611138576111376110e1565b5b50919050565b5f6060820190506111515f83018661107b565b61115e6020830185610f79565b61116b6040830184610f79565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111aa82610ed5565b91506111b583610ed5565b92508282019050808211156111cd576111cc611173565b5b9291505056fea2646970667358221220f75bab997003c2e7cc0021a362e79f76534ef8c0c27bbc7525c444961407a45164736f6c634300081c0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465746865720000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x161 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH2 0x12E PUSH2 0x224 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x15B CALLER DUP3 PUSH2 0x22C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xAB1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD PUSH0 DUP4 DUP4 PUSH2 0x2B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x301 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3CF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x416 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x460 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x545 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x501 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5BA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x5C4 DUP7 DUP4 PUSH2 0x57F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x608 PUSH2 0x603 PUSH2 0x5FE DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x621 DUP4 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x635 PUSH2 0x62D DUP3 PUSH2 0x60F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x58B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x64C PUSH2 0x63D JUMP JUMPDEST PUSH2 0x657 DUP2 DUP5 DUP5 PUSH2 0x618 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x67A JUMPI PUSH2 0x66F PUSH0 DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x65D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6BF JUMPI PUSH2 0x690 DUP2 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x699 DUP5 PUSH2 0x570 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6A8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6BC PUSH2 0x6B4 DUP6 PUSH2 0x570 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x65C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6C4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6F7 DUP4 DUP4 PUSH2 0x6D0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x710 DUP3 PUSH2 0x4CA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST PUSH2 0x733 DUP3 SLOAD PUSH2 0x52E JUMP JUMPDEST PUSH2 0x73E DUP3 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x76F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x75D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x767 DUP6 DUP3 PUSH2 0x6EC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x77D DUP7 PUSH2 0x55E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x77F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7C1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7BD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6D0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FF DUP3 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80F DUP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x828 PUSH0 DUP4 ADD DUP5 PUSH2 0x806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x8B0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x82E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x89B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x8A9 DUP6 PUSH2 0x85B JUMP JUMPDEST SWAP5 POP PUSH2 0x870 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8C8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST DUP2 PUSH2 0x8D5 JUMPI PUSH0 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x8EB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x82E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x82E JUMP JUMPDEST JUMPDEST POP PUSH2 0x983 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x959 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x82E JUMP JUMPDEST JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x82E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A0 DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP2 POP PUSH2 0x9AB DUP4 PUSH2 0x98A JUMP JUMPDEST SWAP3 POP PUSH2 0x9D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP2 POP PUSH2 0x9F5 DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA03 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x82E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA2B DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP2 POP PUSH2 0xA36 DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA4E JUMPI PUSH2 0xA4D PUSH2 0x82E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA76 PUSH0 DUP4 ADD DUP7 PUSH2 0x806 JUMP JUMPDEST PUSH2 0xA83 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0xA90 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAB PUSH0 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1209 DUP1 PUSH2 0xABE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x36A PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x395 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x43A PUSH0 PUSH2 0x93C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FE PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP2 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP2 PUSH2 0x93C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x630 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP5 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x61C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DD PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83C JUMPI PUSH2 0x800 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B9 PUSH0 DUP4 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x938 DUP3 PUSH0 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 DUP3 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xE33 DUP2 DUP6 PUSH2 0xDF1 JUMP JUMPDEST SWAP4 POP PUSH2 0xE43 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST PUSH2 0xE4C DUP2 PUSH2 0xE0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6F DUP2 DUP5 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEA4 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB4 DUP2 PUSH2 0xE9A JUMP JUMPDEST DUP2 EQ PUSH2 0xEBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECF DUP2 PUSH2 0xEAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF02 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2B DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3C DUP6 DUP3 DUP7 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0xF46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9B PUSH0 DUP4 ADD DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC5 DUP7 DUP3 DUP8 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFD6 DUP7 DUP3 DUP8 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE7 DUP7 DUP3 DUP8 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1006 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101F PUSH0 DUP4 ADD DUP5 PUSH2 0xFFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103A JUMPI PUSH2 0x1039 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1047 DUP5 DUP3 DUP6 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP3 DUP6 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1084 DUP2 PUSH2 0xE9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH0 DUP4 ADD DUP5 PUSH2 0x107B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C6 DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D7 DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH0 DUP4 ADD DUP7 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x115E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x116B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11AA DUP3 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1173 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 JUMPDEST 0xAB SWAP10 PUSH17 0x3C2E7CC0021A362E79F76534EF8C0C27B 0xBC PUSH22 0x25C444961407A45164736F6C634300081C0033000000 ",
		"sourceMap": "174:561:6:-:0;;;231:221;;;;;;;;;;212:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;347:21:6::1;391:10;:8;;;:10;;:::i;:::-;385:2;:16;;;;:::i;:::-;371:11;:30;;;;:::i;:::-;347:54;;412:32;418:10;430:13;412:5;;;:32;;:::i;:::-;269:183;174:561:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;174:561:6:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "allowance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientAllowance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "balance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientBalance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "approver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidApprover",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidReceiver",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSpender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "OwnableInvalidOwner",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "OwnableUnauthorizedAccount",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "burn",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 307,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_balances",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 313,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_allowances",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 315,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_totalSupply",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 317,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_name",
				"offset": 0,
				"slot": "3",
				"type": "t_string_storage"
			},
			{
				"astId": 319,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_symbol",
				"offset": 0,
				"slot": "4",
				"type": "t_string_storage"
			},
			{
				"astId": 8,
				"contract": "contracts/tether.sol:TetherUSDT",
				"label": "_owner",
				"offset": 0,
				"slot": "5",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var tetherusdtContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar tetherusdt = tetherusdtContract.deploy({\n     data: '0x608060405234801561000f575f5ffd5b50336040518060400160405280600681526020017f54657468657200000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5553445400000000000000000000000000000000000000000000000000000000815250816003908161008c9190610707565b50806004908161009c9190610707565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610815565b60405180910390fd5b61011e8161016160201b60201c565b505f61012e61022460201b60201c565b600a61013a9190610996565b6305f5e10061014991906109e0565b905061015b338261022c60201b60201c565b50610ab1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361029c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102939190610815565b60405180910390fd5b6102ad5f83836102b160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610301578060025f8282546102f59190610a21565b925050819055506103cf565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561038a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038193929190610a63565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610416578060025f8282540392505081905550610460565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104bd9190610a98565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061054557607f821691505b60208210810361055857610557610501565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261057f565b6105c4868361057f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106086106036105fe846105dc565b6105e5565b6105dc565b9050919050565b5f819050919050565b610621836105ee565b61063561062d8261060f565b84845461058b565b825550505050565b5f5f905090565b61064c61063d565b610657818484610618565b505050565b5b8181101561067a5761066f5f82610644565b60018101905061065d565b5050565b601f8211156106bf576106908161055e565b61069984610570565b810160208510156106a8578190505b6106bc6106b485610570565b83018261065c565b50505b505050565b5f82821c905092915050565b5f6106df5f19846008026106c4565b1980831691505092915050565b5f6106f783836106d0565b9150826002028217905092915050565b610710826104ca565b67ffffffffffffffff811115610729576107286104d4565b5b610733825461052e565b61073e82828561067e565b5f60209050601f83116001811461076f575f841561075d578287015190505b61076785826106ec565b8655506107ce565b601f19841661077d8661055e565b5f5b828110156107a45784890151825560018201915060208501945060208101905061077f565b868310156107c157848901516107bd601f8916826106d0565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107ff826107d6565b9050919050565b61080f816107f5565b82525050565b5f6020820190506108285f830184610806565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156108b05780860481111561088c5761088b61082e565b5b600185161561089b5780820291505b80810290506108a98561085b565b9450610870565b94509492505050565b5f826108c85760019050610983565b816108d5575f9050610983565b81600181146108eb57600281146108f557610924565b6001915050610983565b60ff8411156109075761090661082e565b5b8360020a91508482111561091e5761091d61082e565b5b50610983565b5060208310610133831016604e8410600b84101617156109595782820a9050838111156109545761095361082e565b5b610983565b6109668484846001610867565b9250905081840481111561097d5761097c61082e565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6109a0826105dc565b91506109ab8361098a565b92506109d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108b9565b905092915050565b5f6109ea826105dc565b91506109f5836105dc565b9250828202610a03816105dc565b91508282048414831517610a1a57610a1961082e565b5b5092915050565b5f610a2b826105dc565b9150610a36836105dc565b9250828201905080821115610a4e57610a4d61082e565b5b92915050565b610a5d816105dc565b82525050565b5f606082019050610a765f830186610806565b610a836020830185610a54565b610a906040830184610a54565b949350505050565b5f602082019050610aab5f830184610a54565b92915050565b61120980610abe5f395ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f5ffd5b6100f46102d0565b6040516101019190610e57565b60405180910390f35b610124600480360381019061011f9190610f08565b610360565b6040516101319190610f60565b60405180910390f35b610142610382565b60405161014f9190610f88565b60405180910390f35b610172600480360381019061016d9190610fa1565b61038b565b60405161017f9190610f60565b60405180910390f35b6101906103b9565b60405161019d919061100c565b60405180910390f35b6101c060048036038101906101bb9190610f08565b6103c1565b005b6101dc60048036038101906101d79190611025565b6103d7565b005b6101f860048036038101906101f39190611050565b6103e4565b6040516102059190610f88565b60405180910390f35b610216610429565b005b61022061043c565b60405161022d919061108a565b60405180910390f35b61023e610464565b60405161024b9190610e57565b60405180910390f35b61026e60048036038101906102699190610f08565b6104f4565b60405161027b9190610f60565b60405180910390f35b61029e600480360381019061029991906110a3565b610516565b6040516102ab9190610f88565b60405180910390f35b6102ce60048036038101906102c99190611050565b610598565b005b6060600380546102df9061110e565b80601f016020809104026020016040519081016040528092919081815260200182805461030b9061110e565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f5f61036a61061c565b9050610377818585610623565b600191505092915050565b5f600254905090565b5f5f61039561061c565b90506103a2858285610635565b6103ad8585856106c7565b60019150509392505050565b5f6012905090565b6103c96107b7565b6103d3828261083e565b5050565b6103e133826108bd565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104316107b7565b61043a5f61093c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104739061110e565b80601f016020809104026020016040519081016040528092919081815260200182805461049f9061110e565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b5f5f6104fe61061c565b905061050b8185856106c7565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6105a06107b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610607919061108a565b60405180910390fd5b6106198161093c565b50565b5f33905090565b61063083838360016109ff565b505050565b5f6106408484610516565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c157818110156106b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a99392919061113e565b60405180910390fd5b6106c084848484035f6109ff565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610737575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072e919061108a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079e919061108a565b60405180910390fd5b6107b2838383610bce565b505050565b6107bf61061c565b73ffffffffffffffffffffffffffffffffffffffff166107dd61043c565b73ffffffffffffffffffffffffffffffffffffffff161461083c5761080061061c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610833919061108a565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108a5919061108a565b60405180910390fd5b6108b95f8383610bce565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610924919061108a565b60405180910390fd5b610938825f83610bce565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a6f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a66919061108a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610adf575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad6919061108a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbf9190610f88565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1e578060025f828254610c1291906111a0565b92505081905550610cec565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9e9392919061113e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d33578060025f8282540392505081905550610d7d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dda9190610f88565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e2982610de7565b610e338185610df1565b9350610e43818560208601610e01565b610e4c81610e0f565b840191505092915050565b5f6020820190508181035f830152610e6f8184610e1f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ea482610e7b565b9050919050565b610eb481610e9a565b8114610ebe575f5ffd5b50565b5f81359050610ecf81610eab565b92915050565b5f819050919050565b610ee781610ed5565b8114610ef1575f5ffd5b50565b5f81359050610f0281610ede565b92915050565b5f5f60408385031215610f1e57610f1d610e77565b5b5f610f2b85828601610ec1565b9250506020610f3c85828601610ef4565b9150509250929050565b5f8115159050919050565b610f5a81610f46565b82525050565b5f602082019050610f735f830184610f51565b92915050565b610f8281610ed5565b82525050565b5f602082019050610f9b5f830184610f79565b92915050565b5f5f5f60608486031215610fb857610fb7610e77565b5b5f610fc586828701610ec1565b9350506020610fd686828701610ec1565b9250506040610fe786828701610ef4565b9150509250925092565b5f60ff82169050919050565b61100681610ff1565b82525050565b5f60208201905061101f5f830184610ffd565b92915050565b5f6020828403121561103a57611039610e77565b5b5f61104784828501610ef4565b91505092915050565b5f6020828403121561106557611064610e77565b5b5f61107284828501610ec1565b91505092915050565b61108481610e9a565b82525050565b5f60208201905061109d5f83018461107b565b92915050565b5f5f604083850312156110b9576110b8610e77565b5b5f6110c685828601610ec1565b92505060206110d785828601610ec1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112557607f821691505b602082108103611138576111376110e1565b5b50919050565b5f6060820190506111515f83018661107b565b61115e6020830185610f79565b61116b6040830184610f79565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111aa82610ed5565b91506111b583610ed5565b92508282019050808211156111cd576111cc611173565b5b9291505056fea2646970667358221220f75bab997003c2e7cc0021a362e79f76534ef8c0c27bbc7525c444961407a45164736f6c634300081c0033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"42966c68": "burn(uint256)",
		"313ce567": "decimals()",
		"40c10f19": "mint(address,uint256)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"715018a6": "renounceOwnership()",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "923400",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "infinite",
			"balanceOf(address)": "2851",
			"burn(uint256)": "infinite",
			"decimals()": "383",
			"mint(address,uint256)": "infinite",
			"name()": "infinite",
			"owner()": "2582",
			"renounceOwnership()": "infinite",
			"symbol()": "infinite",
			"totalSupply()": "2500",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "infinite"
		}
	},
	"devdoc": {
		"errors": {
			"ERC20InsufficientAllowance(address,uint256,uint256)": [
				{
					"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
					"params": {
						"allowance": "Amount of tokens a `spender` is allowed to operate with.",
						"needed": "Minimum amount required to perform a transfer.",
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"ERC20InsufficientBalance(address,uint256,uint256)": [
				{
					"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
					"params": {
						"balance": "Current balance for the interacting account.",
						"needed": "Minimum amount required to perform a transfer.",
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidApprover(address)": [
				{
					"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
					"params": {
						"approver": "Address initiating an approval operation."
					}
				}
			],
			"ERC20InvalidReceiver(address)": [
				{
					"details": "Indicates a failure with the token `receiver`. Used in transfers.",
					"params": {
						"receiver": "Address to which tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSender(address)": [
				{
					"details": "Indicates a failure with the token `sender`. Used in transfers.",
					"params": {
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSpender(address)": [
				{
					"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
					"params": {
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"OwnableInvalidOwner(address)": [
				{
					"details": "The owner is not a valid owner account. (eg. `address(0)`)"
				}
			],
			"OwnableUnauthorizedAccount(address)": [
				{
					"details": "The caller account is not authorized to perform an operation."
				}
			]
		},
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
			}
		},
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_approve_690": {
				"entryPoint": 1571,
				"id": 690,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_approve_750": {
				"entryPoint": 2559,
				"id": 750,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@_burn_672": {
				"entryPoint": 2237,
				"id": 672,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_checkOwner_84": {
				"entryPoint": 1975,
				"id": 84,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_mint_639": {
				"entryPoint": 2110,
				"id": 639,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_msgSender_915": {
				"entryPoint": 1564,
				"id": 915,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_spendAllowance_798": {
				"entryPoint": 1589,
				"id": 798,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 2364,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_transfer_529": {
				"entryPoint": 1735,
				"id": 529,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 3022,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@allowance_426": {
				"entryPoint": 1302,
				"id": 426,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_450": {
				"entryPoint": 864,
				"id": 450,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_385": {
				"entryPoint": 996,
				"id": 385,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@burn_993": {
				"entryPoint": 983,
				"id": 993,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@decimals_363": {
				"entryPoint": 953,
				"id": 363,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@mint_981": {
				"entryPoint": 961,
				"id": 981,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@name_345": {
				"entryPoint": 720,
				"id": 345,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@owner_67": {
				"entryPoint": 1084,
				"id": 67,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@renounceOwnership_98": {
				"entryPoint": 1065,
				"id": 98,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@symbol_354": {
				"entryPoint": 1124,
				"id": 354,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalSupply_372": {
				"entryPoint": 898,
				"id": 372,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@transferFrom_482": {
				"entryPoint": 907,
				"id": 482,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_126": {
				"entryPoint": 1432,
				"id": 126,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_409": {
				"entryPoint": 1268,
				"id": 409,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 3777,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 3828,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 4176,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 4259,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 4001,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 3848,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 4133,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 4219,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 3921,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3615,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 3961,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_uint8_to_t_uint8_fromStack": {
				"entryPoint": 4093,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 4234,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 4414,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 3936,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3671,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 3976,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": 4108,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 3559,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 3569,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 4512,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 3738,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 3910,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 3707,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 3797,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 4081,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_memory_to_memory_with_cleanup": {
				"entryPoint": 3585,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 4366,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 4467,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 4321,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 3703,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"round_up_to_mul_of_32": {
				"entryPoint": 3599,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"validator_revert_t_address": {
				"entryPoint": 3755,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 3806,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:7588:7",
					"nodeType": "YulBlock",
					"src": "0:7588:7",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:7",
								"nodeType": "YulBlock",
								"src": "66:40:7",
								"statements": [
									{
										"nativeSrc": "77:22:7",
										"nodeType": "YulAssignment",
										"src": "77:22:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:7",
													"nodeType": "YulIdentifier",
													"src": "93:5:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:7",
												"nodeType": "YulIdentifier",
												"src": "87:5:7"
											},
											"nativeSrc": "87:12:7",
											"nodeType": "YulFunctionCall",
											"src": "87:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:7",
												"nodeType": "YulIdentifier",
												"src": "77:6:7"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:7",
									"nodeType": "YulTypedName",
									"src": "49:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:7",
									"nodeType": "YulTypedName",
									"src": "59:6:7",
									"type": ""
								}
							],
							"src": "7:99:7"
						},
						{
							"body": {
								"nativeSrc": "208:73:7",
								"nodeType": "YulBlock",
								"src": "208:73:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "225:3:7",
													"nodeType": "YulIdentifier",
													"src": "225:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "230:6:7",
													"nodeType": "YulIdentifier",
													"src": "230:6:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "218:6:7",
												"nodeType": "YulIdentifier",
												"src": "218:6:7"
											},
											"nativeSrc": "218:19:7",
											"nodeType": "YulFunctionCall",
											"src": "218:19:7"
										},
										"nativeSrc": "218:19:7",
										"nodeType": "YulExpressionStatement",
										"src": "218:19:7"
									},
									{
										"nativeSrc": "246:29:7",
										"nodeType": "YulAssignment",
										"src": "246:29:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "265:3:7",
													"nodeType": "YulIdentifier",
													"src": "265:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "270:4:7",
													"nodeType": "YulLiteral",
													"src": "270:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "261:3:7",
												"nodeType": "YulIdentifier",
												"src": "261:3:7"
											},
											"nativeSrc": "261:14:7",
											"nodeType": "YulFunctionCall",
											"src": "261:14:7"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "246:11:7",
												"nodeType": "YulIdentifier",
												"src": "246:11:7"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "112:169:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "180:3:7",
									"nodeType": "YulTypedName",
									"src": "180:3:7",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "185:6:7",
									"nodeType": "YulTypedName",
									"src": "185:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "196:11:7",
									"nodeType": "YulTypedName",
									"src": "196:11:7",
									"type": ""
								}
							],
							"src": "112:169:7"
						},
						{
							"body": {
								"nativeSrc": "349:77:7",
								"nodeType": "YulBlock",
								"src": "349:77:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "dst",
													"nativeSrc": "366:3:7",
													"nodeType": "YulIdentifier",
													"src": "366:3:7"
												},
												{
													"name": "src",
													"nativeSrc": "371:3:7",
													"nodeType": "YulIdentifier",
													"src": "371:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "376:6:7",
													"nodeType": "YulIdentifier",
													"src": "376:6:7"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "360:5:7",
												"nodeType": "YulIdentifier",
												"src": "360:5:7"
											},
											"nativeSrc": "360:23:7",
											"nodeType": "YulFunctionCall",
											"src": "360:23:7"
										},
										"nativeSrc": "360:23:7",
										"nodeType": "YulExpressionStatement",
										"src": "360:23:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dst",
															"nativeSrc": "403:3:7",
															"nodeType": "YulIdentifier",
															"src": "403:3:7"
														},
														{
															"name": "length",
															"nativeSrc": "408:6:7",
															"nodeType": "YulIdentifier",
															"src": "408:6:7"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "399:3:7",
														"nodeType": "YulIdentifier",
														"src": "399:3:7"
													},
													"nativeSrc": "399:16:7",
													"nodeType": "YulFunctionCall",
													"src": "399:16:7"
												},
												{
													"kind": "number",
													"nativeSrc": "417:1:7",
													"nodeType": "YulLiteral",
													"src": "417:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "392:6:7",
												"nodeType": "YulIdentifier",
												"src": "392:6:7"
											},
											"nativeSrc": "392:27:7",
											"nodeType": "YulFunctionCall",
											"src": "392:27:7"
										},
										"nativeSrc": "392:27:7",
										"nodeType": "YulExpressionStatement",
										"src": "392:27:7"
									}
								]
							},
							"name": "copy_memory_to_memory_with_cleanup",
							"nativeSrc": "287:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "src",
									"nativeSrc": "331:3:7",
									"nodeType": "YulTypedName",
									"src": "331:3:7",
									"type": ""
								},
								{
									"name": "dst",
									"nativeSrc": "336:3:7",
									"nodeType": "YulTypedName",
									"src": "336:3:7",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "341:6:7",
									"nodeType": "YulTypedName",
									"src": "341:6:7",
									"type": ""
								}
							],
							"src": "287:139:7"
						},
						{
							"body": {
								"nativeSrc": "480:54:7",
								"nodeType": "YulBlock",
								"src": "480:54:7",
								"statements": [
									{
										"nativeSrc": "490:38:7",
										"nodeType": "YulAssignment",
										"src": "490:38:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "508:5:7",
															"nodeType": "YulIdentifier",
															"src": "508:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "515:2:7",
															"nodeType": "YulLiteral",
															"src": "515:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "504:3:7",
														"nodeType": "YulIdentifier",
														"src": "504:3:7"
													},
													"nativeSrc": "504:14:7",
													"nodeType": "YulFunctionCall",
													"src": "504:14:7"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "524:2:7",
															"nodeType": "YulLiteral",
															"src": "524:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "520:3:7",
														"nodeType": "YulIdentifier",
														"src": "520:3:7"
													},
													"nativeSrc": "520:7:7",
													"nodeType": "YulFunctionCall",
													"src": "520:7:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "500:3:7",
												"nodeType": "YulIdentifier",
												"src": "500:3:7"
											},
											"nativeSrc": "500:28:7",
											"nodeType": "YulFunctionCall",
											"src": "500:28:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "490:6:7",
												"nodeType": "YulIdentifier",
												"src": "490:6:7"
											}
										]
									}
								]
							},
							"name": "round_up_to_mul_of_32",
							"nativeSrc": "432:102:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "463:5:7",
									"nodeType": "YulTypedName",
									"src": "463:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "473:6:7",
									"nodeType": "YulTypedName",
									"src": "473:6:7",
									"type": ""
								}
							],
							"src": "432:102:7"
						},
						{
							"body": {
								"nativeSrc": "632:285:7",
								"nodeType": "YulBlock",
								"src": "632:285:7",
								"statements": [
									{
										"nativeSrc": "642:53:7",
										"nodeType": "YulVariableDeclaration",
										"src": "642:53:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "689:5:7",
													"nodeType": "YulIdentifier",
													"src": "689:5:7"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "656:32:7",
												"nodeType": "YulIdentifier",
												"src": "656:32:7"
											},
											"nativeSrc": "656:39:7",
											"nodeType": "YulFunctionCall",
											"src": "656:39:7"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "646:6:7",
												"nodeType": "YulTypedName",
												"src": "646:6:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "704:78:7",
										"nodeType": "YulAssignment",
										"src": "704:78:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "770:3:7",
													"nodeType": "YulIdentifier",
													"src": "770:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "775:6:7",
													"nodeType": "YulIdentifier",
													"src": "775:6:7"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "711:58:7",
												"nodeType": "YulIdentifier",
												"src": "711:58:7"
											},
											"nativeSrc": "711:71:7",
											"nodeType": "YulFunctionCall",
											"src": "711:71:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "704:3:7",
												"nodeType": "YulIdentifier",
												"src": "704:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "830:5:7",
															"nodeType": "YulIdentifier",
															"src": "830:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "837:4:7",
															"nodeType": "YulLiteral",
															"src": "837:4:7",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "826:3:7",
														"nodeType": "YulIdentifier",
														"src": "826:3:7"
													},
													"nativeSrc": "826:16:7",
													"nodeType": "YulFunctionCall",
													"src": "826:16:7"
												},
												{
													"name": "pos",
													"nativeSrc": "844:3:7",
													"nodeType": "YulIdentifier",
													"src": "844:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "849:6:7",
													"nodeType": "YulIdentifier",
													"src": "849:6:7"
												}
											],
											"functionName": {
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "791:34:7",
												"nodeType": "YulIdentifier",
												"src": "791:34:7"
											},
											"nativeSrc": "791:65:7",
											"nodeType": "YulFunctionCall",
											"src": "791:65:7"
										},
										"nativeSrc": "791:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "791:65:7"
									},
									{
										"nativeSrc": "865:46:7",
										"nodeType": "YulAssignment",
										"src": "865:46:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "876:3:7",
													"nodeType": "YulIdentifier",
													"src": "876:3:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "903:6:7",
															"nodeType": "YulIdentifier",
															"src": "903:6:7"
														}
													],
													"functionName": {
														"name": "round_up_to_mul_of_32",
														"nativeSrc": "881:21:7",
														"nodeType": "YulIdentifier",
														"src": "881:21:7"
													},
													"nativeSrc": "881:29:7",
													"nodeType": "YulFunctionCall",
													"src": "881:29:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "872:3:7",
												"nodeType": "YulIdentifier",
												"src": "872:3:7"
											},
											"nativeSrc": "872:39:7",
											"nodeType": "YulFunctionCall",
											"src": "872:39:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "865:3:7",
												"nodeType": "YulIdentifier",
												"src": "865:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "540:377:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "613:5:7",
									"nodeType": "YulTypedName",
									"src": "613:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "620:3:7",
									"nodeType": "YulTypedName",
									"src": "620:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "628:3:7",
									"nodeType": "YulTypedName",
									"src": "628:3:7",
									"type": ""
								}
							],
							"src": "540:377:7"
						},
						{
							"body": {
								"nativeSrc": "1041:195:7",
								"nodeType": "YulBlock",
								"src": "1041:195:7",
								"statements": [
									{
										"nativeSrc": "1051:26:7",
										"nodeType": "YulAssignment",
										"src": "1051:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1063:9:7",
													"nodeType": "YulIdentifier",
													"src": "1063:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1074:2:7",
													"nodeType": "YulLiteral",
													"src": "1074:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1059:3:7",
												"nodeType": "YulIdentifier",
												"src": "1059:3:7"
											},
											"nativeSrc": "1059:18:7",
											"nodeType": "YulFunctionCall",
											"src": "1059:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1051:4:7",
												"nodeType": "YulIdentifier",
												"src": "1051:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1098:9:7",
															"nodeType": "YulIdentifier",
															"src": "1098:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "1109:1:7",
															"nodeType": "YulLiteral",
															"src": "1109:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1094:3:7",
														"nodeType": "YulIdentifier",
														"src": "1094:3:7"
													},
													"nativeSrc": "1094:17:7",
													"nodeType": "YulFunctionCall",
													"src": "1094:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "1117:4:7",
															"nodeType": "YulIdentifier",
															"src": "1117:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "1123:9:7",
															"nodeType": "YulIdentifier",
															"src": "1123:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1113:3:7",
														"nodeType": "YulIdentifier",
														"src": "1113:3:7"
													},
													"nativeSrc": "1113:20:7",
													"nodeType": "YulFunctionCall",
													"src": "1113:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1087:6:7",
												"nodeType": "YulIdentifier",
												"src": "1087:6:7"
											},
											"nativeSrc": "1087:47:7",
											"nodeType": "YulFunctionCall",
											"src": "1087:47:7"
										},
										"nativeSrc": "1087:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "1087:47:7"
									},
									{
										"nativeSrc": "1143:86:7",
										"nodeType": "YulAssignment",
										"src": "1143:86:7",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1215:6:7",
													"nodeType": "YulIdentifier",
													"src": "1215:6:7"
												},
												{
													"name": "tail",
													"nativeSrc": "1224:4:7",
													"nodeType": "YulIdentifier",
													"src": "1224:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1151:63:7",
												"nodeType": "YulIdentifier",
												"src": "1151:63:7"
											},
											"nativeSrc": "1151:78:7",
											"nodeType": "YulFunctionCall",
											"src": "1151:78:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1143:4:7",
												"nodeType": "YulIdentifier",
												"src": "1143:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "923:313:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1013:9:7",
									"nodeType": "YulTypedName",
									"src": "1013:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1025:6:7",
									"nodeType": "YulTypedName",
									"src": "1025:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1036:4:7",
									"nodeType": "YulTypedName",
									"src": "1036:4:7",
									"type": ""
								}
							],
							"src": "923:313:7"
						},
						{
							"body": {
								"nativeSrc": "1282:35:7",
								"nodeType": "YulBlock",
								"src": "1282:35:7",
								"statements": [
									{
										"nativeSrc": "1292:19:7",
										"nodeType": "YulAssignment",
										"src": "1292:19:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1308:2:7",
													"nodeType": "YulLiteral",
													"src": "1308:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1302:5:7",
												"nodeType": "YulIdentifier",
												"src": "1302:5:7"
											},
											"nativeSrc": "1302:9:7",
											"nodeType": "YulFunctionCall",
											"src": "1302:9:7"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "1292:6:7",
												"nodeType": "YulIdentifier",
												"src": "1292:6:7"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "1242:75:7",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "1275:6:7",
									"nodeType": "YulTypedName",
									"src": "1275:6:7",
									"type": ""
								}
							],
							"src": "1242:75:7"
						},
						{
							"body": {
								"nativeSrc": "1412:28:7",
								"nodeType": "YulBlock",
								"src": "1412:28:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1429:1:7",
													"nodeType": "YulLiteral",
													"src": "1429:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1432:1:7",
													"nodeType": "YulLiteral",
													"src": "1432:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1422:6:7",
												"nodeType": "YulIdentifier",
												"src": "1422:6:7"
											},
											"nativeSrc": "1422:12:7",
											"nodeType": "YulFunctionCall",
											"src": "1422:12:7"
										},
										"nativeSrc": "1422:12:7",
										"nodeType": "YulExpressionStatement",
										"src": "1422:12:7"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "1323:117:7",
							"nodeType": "YulFunctionDefinition",
							"src": "1323:117:7"
						},
						{
							"body": {
								"nativeSrc": "1535:28:7",
								"nodeType": "YulBlock",
								"src": "1535:28:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1552:1:7",
													"nodeType": "YulLiteral",
													"src": "1552:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1555:1:7",
													"nodeType": "YulLiteral",
													"src": "1555:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1545:6:7",
												"nodeType": "YulIdentifier",
												"src": "1545:6:7"
											},
											"nativeSrc": "1545:12:7",
											"nodeType": "YulFunctionCall",
											"src": "1545:12:7"
										},
										"nativeSrc": "1545:12:7",
										"nodeType": "YulExpressionStatement",
										"src": "1545:12:7"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "1446:117:7",
							"nodeType": "YulFunctionDefinition",
							"src": "1446:117:7"
						},
						{
							"body": {
								"nativeSrc": "1614:81:7",
								"nodeType": "YulBlock",
								"src": "1614:81:7",
								"statements": [
									{
										"nativeSrc": "1624:65:7",
										"nodeType": "YulAssignment",
										"src": "1624:65:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1639:5:7",
													"nodeType": "YulIdentifier",
													"src": "1639:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1646:42:7",
													"nodeType": "YulLiteral",
													"src": "1646:42:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1635:3:7",
												"nodeType": "YulIdentifier",
												"src": "1635:3:7"
											},
											"nativeSrc": "1635:54:7",
											"nodeType": "YulFunctionCall",
											"src": "1635:54:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1624:7:7",
												"nodeType": "YulIdentifier",
												"src": "1624:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "1569:126:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1596:5:7",
									"nodeType": "YulTypedName",
									"src": "1596:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1606:7:7",
									"nodeType": "YulTypedName",
									"src": "1606:7:7",
									"type": ""
								}
							],
							"src": "1569:126:7"
						},
						{
							"body": {
								"nativeSrc": "1746:51:7",
								"nodeType": "YulBlock",
								"src": "1746:51:7",
								"statements": [
									{
										"nativeSrc": "1756:35:7",
										"nodeType": "YulAssignment",
										"src": "1756:35:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1785:5:7",
													"nodeType": "YulIdentifier",
													"src": "1785:5:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "1767:17:7",
												"nodeType": "YulIdentifier",
												"src": "1767:17:7"
											},
											"nativeSrc": "1767:24:7",
											"nodeType": "YulFunctionCall",
											"src": "1767:24:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1756:7:7",
												"nodeType": "YulIdentifier",
												"src": "1756:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "1701:96:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1728:5:7",
									"nodeType": "YulTypedName",
									"src": "1728:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1738:7:7",
									"nodeType": "YulTypedName",
									"src": "1738:7:7",
									"type": ""
								}
							],
							"src": "1701:96:7"
						},
						{
							"body": {
								"nativeSrc": "1846:79:7",
								"nodeType": "YulBlock",
								"src": "1846:79:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "1903:16:7",
											"nodeType": "YulBlock",
											"src": "1903:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1912:1:7",
																"nodeType": "YulLiteral",
																"src": "1912:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1915:1:7",
																"nodeType": "YulLiteral",
																"src": "1915:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1905:6:7",
															"nodeType": "YulIdentifier",
															"src": "1905:6:7"
														},
														"nativeSrc": "1905:12:7",
														"nodeType": "YulFunctionCall",
														"src": "1905:12:7"
													},
													"nativeSrc": "1905:12:7",
													"nodeType": "YulExpressionStatement",
													"src": "1905:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1869:5:7",
															"nodeType": "YulIdentifier",
															"src": "1869:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1894:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1894:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "1876:17:7",
																"nodeType": "YulIdentifier",
																"src": "1876:17:7"
															},
															"nativeSrc": "1876:24:7",
															"nodeType": "YulFunctionCall",
															"src": "1876:24:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "1866:2:7",
														"nodeType": "YulIdentifier",
														"src": "1866:2:7"
													},
													"nativeSrc": "1866:35:7",
													"nodeType": "YulFunctionCall",
													"src": "1866:35:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1859:6:7",
												"nodeType": "YulIdentifier",
												"src": "1859:6:7"
											},
											"nativeSrc": "1859:43:7",
											"nodeType": "YulFunctionCall",
											"src": "1859:43:7"
										},
										"nativeSrc": "1856:63:7",
										"nodeType": "YulIf",
										"src": "1856:63:7"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "1803:122:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1839:5:7",
									"nodeType": "YulTypedName",
									"src": "1839:5:7",
									"type": ""
								}
							],
							"src": "1803:122:7"
						},
						{
							"body": {
								"nativeSrc": "1983:87:7",
								"nodeType": "YulBlock",
								"src": "1983:87:7",
								"statements": [
									{
										"nativeSrc": "1993:29:7",
										"nodeType": "YulAssignment",
										"src": "1993:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2015:6:7",
													"nodeType": "YulIdentifier",
													"src": "2015:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2002:12:7",
												"nodeType": "YulIdentifier",
												"src": "2002:12:7"
											},
											"nativeSrc": "2002:20:7",
											"nodeType": "YulFunctionCall",
											"src": "2002:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1993:5:7",
												"nodeType": "YulIdentifier",
												"src": "1993:5:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2058:5:7",
													"nodeType": "YulIdentifier",
													"src": "2058:5:7"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "2031:26:7",
												"nodeType": "YulIdentifier",
												"src": "2031:26:7"
											},
											"nativeSrc": "2031:33:7",
											"nodeType": "YulFunctionCall",
											"src": "2031:33:7"
										},
										"nativeSrc": "2031:33:7",
										"nodeType": "YulExpressionStatement",
										"src": "2031:33:7"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "1931:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1961:6:7",
									"nodeType": "YulTypedName",
									"src": "1961:6:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1969:3:7",
									"nodeType": "YulTypedName",
									"src": "1969:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1977:5:7",
									"nodeType": "YulTypedName",
									"src": "1977:5:7",
									"type": ""
								}
							],
							"src": "1931:139:7"
						},
						{
							"body": {
								"nativeSrc": "2121:32:7",
								"nodeType": "YulBlock",
								"src": "2121:32:7",
								"statements": [
									{
										"nativeSrc": "2131:16:7",
										"nodeType": "YulAssignment",
										"src": "2131:16:7",
										"value": {
											"name": "value",
											"nativeSrc": "2142:5:7",
											"nodeType": "YulIdentifier",
											"src": "2142:5:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2131:7:7",
												"nodeType": "YulIdentifier",
												"src": "2131:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "2076:77:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2103:5:7",
									"nodeType": "YulTypedName",
									"src": "2103:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2113:7:7",
									"nodeType": "YulTypedName",
									"src": "2113:7:7",
									"type": ""
								}
							],
							"src": "2076:77:7"
						},
						{
							"body": {
								"nativeSrc": "2202:79:7",
								"nodeType": "YulBlock",
								"src": "2202:79:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2259:16:7",
											"nodeType": "YulBlock",
											"src": "2259:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2268:1:7",
																"nodeType": "YulLiteral",
																"src": "2268:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2271:1:7",
																"nodeType": "YulLiteral",
																"src": "2271:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2261:6:7",
															"nodeType": "YulIdentifier",
															"src": "2261:6:7"
														},
														"nativeSrc": "2261:12:7",
														"nodeType": "YulFunctionCall",
														"src": "2261:12:7"
													},
													"nativeSrc": "2261:12:7",
													"nodeType": "YulExpressionStatement",
													"src": "2261:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2225:5:7",
															"nodeType": "YulIdentifier",
															"src": "2225:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "2250:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2250:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "2232:17:7",
																"nodeType": "YulIdentifier",
																"src": "2232:17:7"
															},
															"nativeSrc": "2232:24:7",
															"nodeType": "YulFunctionCall",
															"src": "2232:24:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "2222:2:7",
														"nodeType": "YulIdentifier",
														"src": "2222:2:7"
													},
													"nativeSrc": "2222:35:7",
													"nodeType": "YulFunctionCall",
													"src": "2222:35:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2215:6:7",
												"nodeType": "YulIdentifier",
												"src": "2215:6:7"
											},
											"nativeSrc": "2215:43:7",
											"nodeType": "YulFunctionCall",
											"src": "2215:43:7"
										},
										"nativeSrc": "2212:63:7",
										"nodeType": "YulIf",
										"src": "2212:63:7"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "2159:122:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2195:5:7",
									"nodeType": "YulTypedName",
									"src": "2195:5:7",
									"type": ""
								}
							],
							"src": "2159:122:7"
						},
						{
							"body": {
								"nativeSrc": "2339:87:7",
								"nodeType": "YulBlock",
								"src": "2339:87:7",
								"statements": [
									{
										"nativeSrc": "2349:29:7",
										"nodeType": "YulAssignment",
										"src": "2349:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2371:6:7",
													"nodeType": "YulIdentifier",
													"src": "2371:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2358:12:7",
												"nodeType": "YulIdentifier",
												"src": "2358:12:7"
											},
											"nativeSrc": "2358:20:7",
											"nodeType": "YulFunctionCall",
											"src": "2358:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "2349:5:7",
												"nodeType": "YulIdentifier",
												"src": "2349:5:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2414:5:7",
													"nodeType": "YulIdentifier",
													"src": "2414:5:7"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2387:26:7",
												"nodeType": "YulIdentifier",
												"src": "2387:26:7"
											},
											"nativeSrc": "2387:33:7",
											"nodeType": "YulFunctionCall",
											"src": "2387:33:7"
										},
										"nativeSrc": "2387:33:7",
										"nodeType": "YulExpressionStatement",
										"src": "2387:33:7"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "2287:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2317:6:7",
									"nodeType": "YulTypedName",
									"src": "2317:6:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2325:3:7",
									"nodeType": "YulTypedName",
									"src": "2325:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "2333:5:7",
									"nodeType": "YulTypedName",
									"src": "2333:5:7",
									"type": ""
								}
							],
							"src": "2287:139:7"
						},
						{
							"body": {
								"nativeSrc": "2515:391:7",
								"nodeType": "YulBlock",
								"src": "2515:391:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2561:83:7",
											"nodeType": "YulBlock",
											"src": "2561:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "2563:77:7",
															"nodeType": "YulIdentifier",
															"src": "2563:77:7"
														},
														"nativeSrc": "2563:79:7",
														"nodeType": "YulFunctionCall",
														"src": "2563:79:7"
													},
													"nativeSrc": "2563:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "2563:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2536:7:7",
															"nodeType": "YulIdentifier",
															"src": "2536:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "2545:9:7",
															"nodeType": "YulIdentifier",
															"src": "2545:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2532:3:7",
														"nodeType": "YulIdentifier",
														"src": "2532:3:7"
													},
													"nativeSrc": "2532:23:7",
													"nodeType": "YulFunctionCall",
													"src": "2532:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "2557:2:7",
													"nodeType": "YulLiteral",
													"src": "2557:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2528:3:7",
												"nodeType": "YulIdentifier",
												"src": "2528:3:7"
											},
											"nativeSrc": "2528:32:7",
											"nodeType": "YulFunctionCall",
											"src": "2528:32:7"
										},
										"nativeSrc": "2525:119:7",
										"nodeType": "YulIf",
										"src": "2525:119:7"
									},
									{
										"nativeSrc": "2654:117:7",
										"nodeType": "YulBlock",
										"src": "2654:117:7",
										"statements": [
											{
												"nativeSrc": "2669:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "2669:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "2683:1:7",
													"nodeType": "YulLiteral",
													"src": "2683:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2673:6:7",
														"nodeType": "YulTypedName",
														"src": "2673:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2698:63:7",
												"nodeType": "YulAssignment",
												"src": "2698:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2733:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2733:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2744:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2729:3:7",
																"nodeType": "YulIdentifier",
																"src": "2729:3:7"
															},
															"nativeSrc": "2729:22:7",
															"nodeType": "YulFunctionCall",
															"src": "2729:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2753:7:7",
															"nodeType": "YulIdentifier",
															"src": "2753:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "2708:20:7",
														"nodeType": "YulIdentifier",
														"src": "2708:20:7"
													},
													"nativeSrc": "2708:53:7",
													"nodeType": "YulFunctionCall",
													"src": "2708:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "2698:6:7",
														"nodeType": "YulIdentifier",
														"src": "2698:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "2781:118:7",
										"nodeType": "YulBlock",
										"src": "2781:118:7",
										"statements": [
											{
												"nativeSrc": "2796:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "2796:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "2810:2:7",
													"nodeType": "YulLiteral",
													"src": "2810:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2800:6:7",
														"nodeType": "YulTypedName",
														"src": "2800:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2826:63:7",
												"nodeType": "YulAssignment",
												"src": "2826:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2861:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2861:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2872:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2857:3:7",
																"nodeType": "YulIdentifier",
																"src": "2857:3:7"
															},
															"nativeSrc": "2857:22:7",
															"nodeType": "YulFunctionCall",
															"src": "2857:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2881:7:7",
															"nodeType": "YulIdentifier",
															"src": "2881:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "2836:20:7",
														"nodeType": "YulIdentifier",
														"src": "2836:20:7"
													},
													"nativeSrc": "2836:53:7",
													"nodeType": "YulFunctionCall",
													"src": "2836:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "2826:6:7",
														"nodeType": "YulIdentifier",
														"src": "2826:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "2432:474:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2477:9:7",
									"nodeType": "YulTypedName",
									"src": "2477:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2488:7:7",
									"nodeType": "YulTypedName",
									"src": "2488:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2500:6:7",
									"nodeType": "YulTypedName",
									"src": "2500:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "2508:6:7",
									"nodeType": "YulTypedName",
									"src": "2508:6:7",
									"type": ""
								}
							],
							"src": "2432:474:7"
						},
						{
							"body": {
								"nativeSrc": "2954:48:7",
								"nodeType": "YulBlock",
								"src": "2954:48:7",
								"statements": [
									{
										"nativeSrc": "2964:32:7",
										"nodeType": "YulAssignment",
										"src": "2964:32:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2989:5:7",
															"nodeType": "YulIdentifier",
															"src": "2989:5:7"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "2982:6:7",
														"nodeType": "YulIdentifier",
														"src": "2982:6:7"
													},
													"nativeSrc": "2982:13:7",
													"nodeType": "YulFunctionCall",
													"src": "2982:13:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2975:6:7",
												"nodeType": "YulIdentifier",
												"src": "2975:6:7"
											},
											"nativeSrc": "2975:21:7",
											"nodeType": "YulFunctionCall",
											"src": "2975:21:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2964:7:7",
												"nodeType": "YulIdentifier",
												"src": "2964:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "2912:90:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2936:5:7",
									"nodeType": "YulTypedName",
									"src": "2936:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2946:7:7",
									"nodeType": "YulTypedName",
									"src": "2946:7:7",
									"type": ""
								}
							],
							"src": "2912:90:7"
						},
						{
							"body": {
								"nativeSrc": "3067:50:7",
								"nodeType": "YulBlock",
								"src": "3067:50:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3084:3:7",
													"nodeType": "YulIdentifier",
													"src": "3084:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3104:5:7",
															"nodeType": "YulIdentifier",
															"src": "3104:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nativeSrc": "3089:14:7",
														"nodeType": "YulIdentifier",
														"src": "3089:14:7"
													},
													"nativeSrc": "3089:21:7",
													"nodeType": "YulFunctionCall",
													"src": "3089:21:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3077:6:7",
												"nodeType": "YulIdentifier",
												"src": "3077:6:7"
											},
											"nativeSrc": "3077:34:7",
											"nodeType": "YulFunctionCall",
											"src": "3077:34:7"
										},
										"nativeSrc": "3077:34:7",
										"nodeType": "YulExpressionStatement",
										"src": "3077:34:7"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nativeSrc": "3008:109:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3055:5:7",
									"nodeType": "YulTypedName",
									"src": "3055:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "3062:3:7",
									"nodeType": "YulTypedName",
									"src": "3062:3:7",
									"type": ""
								}
							],
							"src": "3008:109:7"
						},
						{
							"body": {
								"nativeSrc": "3215:118:7",
								"nodeType": "YulBlock",
								"src": "3215:118:7",
								"statements": [
									{
										"nativeSrc": "3225:26:7",
										"nodeType": "YulAssignment",
										"src": "3225:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3237:9:7",
													"nodeType": "YulIdentifier",
													"src": "3237:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "3248:2:7",
													"nodeType": "YulLiteral",
													"src": "3248:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3233:3:7",
												"nodeType": "YulIdentifier",
												"src": "3233:3:7"
											},
											"nativeSrc": "3233:18:7",
											"nodeType": "YulFunctionCall",
											"src": "3233:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3225:4:7",
												"nodeType": "YulIdentifier",
												"src": "3225:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "3299:6:7",
													"nodeType": "YulIdentifier",
													"src": "3299:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3312:9:7",
															"nodeType": "YulIdentifier",
															"src": "3312:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "3323:1:7",
															"nodeType": "YulLiteral",
															"src": "3323:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3308:3:7",
														"nodeType": "YulIdentifier",
														"src": "3308:3:7"
													},
													"nativeSrc": "3308:17:7",
													"nodeType": "YulFunctionCall",
													"src": "3308:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3261:37:7",
												"nodeType": "YulIdentifier",
												"src": "3261:37:7"
											},
											"nativeSrc": "3261:65:7",
											"nodeType": "YulFunctionCall",
											"src": "3261:65:7"
										},
										"nativeSrc": "3261:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "3261:65:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "3123:210:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3187:9:7",
									"nodeType": "YulTypedName",
									"src": "3187:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3199:6:7",
									"nodeType": "YulTypedName",
									"src": "3199:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3210:4:7",
									"nodeType": "YulTypedName",
									"src": "3210:4:7",
									"type": ""
								}
							],
							"src": "3123:210:7"
						},
						{
							"body": {
								"nativeSrc": "3404:53:7",
								"nodeType": "YulBlock",
								"src": "3404:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3421:3:7",
													"nodeType": "YulIdentifier",
													"src": "3421:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3444:5:7",
															"nodeType": "YulIdentifier",
															"src": "3444:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "3426:17:7",
														"nodeType": "YulIdentifier",
														"src": "3426:17:7"
													},
													"nativeSrc": "3426:24:7",
													"nodeType": "YulFunctionCall",
													"src": "3426:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3414:6:7",
												"nodeType": "YulIdentifier",
												"src": "3414:6:7"
											},
											"nativeSrc": "3414:37:7",
											"nodeType": "YulFunctionCall",
											"src": "3414:37:7"
										},
										"nativeSrc": "3414:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "3414:37:7"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "3339:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3392:5:7",
									"nodeType": "YulTypedName",
									"src": "3392:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "3399:3:7",
									"nodeType": "YulTypedName",
									"src": "3399:3:7",
									"type": ""
								}
							],
							"src": "3339:118:7"
						},
						{
							"body": {
								"nativeSrc": "3561:124:7",
								"nodeType": "YulBlock",
								"src": "3561:124:7",
								"statements": [
									{
										"nativeSrc": "3571:26:7",
										"nodeType": "YulAssignment",
										"src": "3571:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3583:9:7",
													"nodeType": "YulIdentifier",
													"src": "3583:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "3594:2:7",
													"nodeType": "YulLiteral",
													"src": "3594:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3579:3:7",
												"nodeType": "YulIdentifier",
												"src": "3579:3:7"
											},
											"nativeSrc": "3579:18:7",
											"nodeType": "YulFunctionCall",
											"src": "3579:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3571:4:7",
												"nodeType": "YulIdentifier",
												"src": "3571:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "3651:6:7",
													"nodeType": "YulIdentifier",
													"src": "3651:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3664:9:7",
															"nodeType": "YulIdentifier",
															"src": "3664:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "3675:1:7",
															"nodeType": "YulLiteral",
															"src": "3675:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3660:3:7",
														"nodeType": "YulIdentifier",
														"src": "3660:3:7"
													},
													"nativeSrc": "3660:17:7",
													"nodeType": "YulFunctionCall",
													"src": "3660:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3607:43:7",
												"nodeType": "YulIdentifier",
												"src": "3607:43:7"
											},
											"nativeSrc": "3607:71:7",
											"nodeType": "YulFunctionCall",
											"src": "3607:71:7"
										},
										"nativeSrc": "3607:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "3607:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "3463:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3533:9:7",
									"nodeType": "YulTypedName",
									"src": "3533:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3545:6:7",
									"nodeType": "YulTypedName",
									"src": "3545:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3556:4:7",
									"nodeType": "YulTypedName",
									"src": "3556:4:7",
									"type": ""
								}
							],
							"src": "3463:222:7"
						},
						{
							"body": {
								"nativeSrc": "3791:519:7",
								"nodeType": "YulBlock",
								"src": "3791:519:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "3837:83:7",
											"nodeType": "YulBlock",
											"src": "3837:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "3839:77:7",
															"nodeType": "YulIdentifier",
															"src": "3839:77:7"
														},
														"nativeSrc": "3839:79:7",
														"nodeType": "YulFunctionCall",
														"src": "3839:79:7"
													},
													"nativeSrc": "3839:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "3839:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3812:7:7",
															"nodeType": "YulIdentifier",
															"src": "3812:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "3821:9:7",
															"nodeType": "YulIdentifier",
															"src": "3821:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3808:3:7",
														"nodeType": "YulIdentifier",
														"src": "3808:3:7"
													},
													"nativeSrc": "3808:23:7",
													"nodeType": "YulFunctionCall",
													"src": "3808:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "3833:2:7",
													"nodeType": "YulLiteral",
													"src": "3833:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3804:3:7",
												"nodeType": "YulIdentifier",
												"src": "3804:3:7"
											},
											"nativeSrc": "3804:32:7",
											"nodeType": "YulFunctionCall",
											"src": "3804:32:7"
										},
										"nativeSrc": "3801:119:7",
										"nodeType": "YulIf",
										"src": "3801:119:7"
									},
									{
										"nativeSrc": "3930:117:7",
										"nodeType": "YulBlock",
										"src": "3930:117:7",
										"statements": [
											{
												"nativeSrc": "3945:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "3945:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "3959:1:7",
													"nodeType": "YulLiteral",
													"src": "3959:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3949:6:7",
														"nodeType": "YulTypedName",
														"src": "3949:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "3974:63:7",
												"nodeType": "YulAssignment",
												"src": "3974:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4009:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4009:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4020:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4005:3:7",
																"nodeType": "YulIdentifier",
																"src": "4005:3:7"
															},
															"nativeSrc": "4005:22:7",
															"nodeType": "YulFunctionCall",
															"src": "4005:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4029:7:7",
															"nodeType": "YulIdentifier",
															"src": "4029:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "3984:20:7",
														"nodeType": "YulIdentifier",
														"src": "3984:20:7"
													},
													"nativeSrc": "3984:53:7",
													"nodeType": "YulFunctionCall",
													"src": "3984:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "3974:6:7",
														"nodeType": "YulIdentifier",
														"src": "3974:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "4057:118:7",
										"nodeType": "YulBlock",
										"src": "4057:118:7",
										"statements": [
											{
												"nativeSrc": "4072:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "4072:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4086:2:7",
													"nodeType": "YulLiteral",
													"src": "4086:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4076:6:7",
														"nodeType": "YulTypedName",
														"src": "4076:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4102:63:7",
												"nodeType": "YulAssignment",
												"src": "4102:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4137:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4137:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4148:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4133:3:7",
																"nodeType": "YulIdentifier",
																"src": "4133:3:7"
															},
															"nativeSrc": "4133:22:7",
															"nodeType": "YulFunctionCall",
															"src": "4133:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4157:7:7",
															"nodeType": "YulIdentifier",
															"src": "4157:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "4112:20:7",
														"nodeType": "YulIdentifier",
														"src": "4112:20:7"
													},
													"nativeSrc": "4112:53:7",
													"nodeType": "YulFunctionCall",
													"src": "4112:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "4102:6:7",
														"nodeType": "YulIdentifier",
														"src": "4102:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "4185:118:7",
										"nodeType": "YulBlock",
										"src": "4185:118:7",
										"statements": [
											{
												"nativeSrc": "4200:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "4200:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4214:2:7",
													"nodeType": "YulLiteral",
													"src": "4214:2:7",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4204:6:7",
														"nodeType": "YulTypedName",
														"src": "4204:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4230:63:7",
												"nodeType": "YulAssignment",
												"src": "4230:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4265:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4265:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4276:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4261:3:7",
																"nodeType": "YulIdentifier",
																"src": "4261:3:7"
															},
															"nativeSrc": "4261:22:7",
															"nodeType": "YulFunctionCall",
															"src": "4261:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4285:7:7",
															"nodeType": "YulIdentifier",
															"src": "4285:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "4240:20:7",
														"nodeType": "YulIdentifier",
														"src": "4240:20:7"
													},
													"nativeSrc": "4240:53:7",
													"nodeType": "YulFunctionCall",
													"src": "4240:53:7"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "4230:6:7",
														"nodeType": "YulIdentifier",
														"src": "4230:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nativeSrc": "3691:619:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3745:9:7",
									"nodeType": "YulTypedName",
									"src": "3745:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3756:7:7",
									"nodeType": "YulTypedName",
									"src": "3756:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3768:6:7",
									"nodeType": "YulTypedName",
									"src": "3768:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3776:6:7",
									"nodeType": "YulTypedName",
									"src": "3776:6:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3784:6:7",
									"nodeType": "YulTypedName",
									"src": "3784:6:7",
									"type": ""
								}
							],
							"src": "3691:619:7"
						},
						{
							"body": {
								"nativeSrc": "4359:43:7",
								"nodeType": "YulBlock",
								"src": "4359:43:7",
								"statements": [
									{
										"nativeSrc": "4369:27:7",
										"nodeType": "YulAssignment",
										"src": "4369:27:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "4384:5:7",
													"nodeType": "YulIdentifier",
													"src": "4384:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4391:4:7",
													"nodeType": "YulLiteral",
													"src": "4391:4:7",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "4380:3:7",
												"nodeType": "YulIdentifier",
												"src": "4380:3:7"
											},
											"nativeSrc": "4380:16:7",
											"nodeType": "YulFunctionCall",
											"src": "4380:16:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "4369:7:7",
												"nodeType": "YulIdentifier",
												"src": "4369:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nativeSrc": "4316:86:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4341:5:7",
									"nodeType": "YulTypedName",
									"src": "4341:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "4351:7:7",
									"nodeType": "YulTypedName",
									"src": "4351:7:7",
									"type": ""
								}
							],
							"src": "4316:86:7"
						},
						{
							"body": {
								"nativeSrc": "4469:51:7",
								"nodeType": "YulBlock",
								"src": "4469:51:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4486:3:7",
													"nodeType": "YulIdentifier",
													"src": "4486:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4507:5:7",
															"nodeType": "YulIdentifier",
															"src": "4507:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint8",
														"nativeSrc": "4491:15:7",
														"nodeType": "YulIdentifier",
														"src": "4491:15:7"
													},
													"nativeSrc": "4491:22:7",
													"nodeType": "YulFunctionCall",
													"src": "4491:22:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4479:6:7",
												"nodeType": "YulIdentifier",
												"src": "4479:6:7"
											},
											"nativeSrc": "4479:35:7",
											"nodeType": "YulFunctionCall",
											"src": "4479:35:7"
										},
										"nativeSrc": "4479:35:7",
										"nodeType": "YulExpressionStatement",
										"src": "4479:35:7"
									}
								]
							},
							"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
							"nativeSrc": "4408:112:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4457:5:7",
									"nodeType": "YulTypedName",
									"src": "4457:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "4464:3:7",
									"nodeType": "YulTypedName",
									"src": "4464:3:7",
									"type": ""
								}
							],
							"src": "4408:112:7"
						},
						{
							"body": {
								"nativeSrc": "4620:120:7",
								"nodeType": "YulBlock",
								"src": "4620:120:7",
								"statements": [
									{
										"nativeSrc": "4630:26:7",
										"nodeType": "YulAssignment",
										"src": "4630:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4642:9:7",
													"nodeType": "YulIdentifier",
													"src": "4642:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4653:2:7",
													"nodeType": "YulLiteral",
													"src": "4653:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4638:3:7",
												"nodeType": "YulIdentifier",
												"src": "4638:3:7"
											},
											"nativeSrc": "4638:18:7",
											"nodeType": "YulFunctionCall",
											"src": "4638:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4630:4:7",
												"nodeType": "YulIdentifier",
												"src": "4630:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "4706:6:7",
													"nodeType": "YulIdentifier",
													"src": "4706:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4719:9:7",
															"nodeType": "YulIdentifier",
															"src": "4719:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "4730:1:7",
															"nodeType": "YulLiteral",
															"src": "4730:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4715:3:7",
														"nodeType": "YulIdentifier",
														"src": "4715:3:7"
													},
													"nativeSrc": "4715:17:7",
													"nodeType": "YulFunctionCall",
													"src": "4715:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4666:39:7",
												"nodeType": "YulIdentifier",
												"src": "4666:39:7"
											},
											"nativeSrc": "4666:67:7",
											"nodeType": "YulFunctionCall",
											"src": "4666:67:7"
										},
										"nativeSrc": "4666:67:7",
										"nodeType": "YulExpressionStatement",
										"src": "4666:67:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nativeSrc": "4526:214:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4592:9:7",
									"nodeType": "YulTypedName",
									"src": "4592:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4604:6:7",
									"nodeType": "YulTypedName",
									"src": "4604:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4615:4:7",
									"nodeType": "YulTypedName",
									"src": "4615:4:7",
									"type": ""
								}
							],
							"src": "4526:214:7"
						},
						{
							"body": {
								"nativeSrc": "4812:263:7",
								"nodeType": "YulBlock",
								"src": "4812:263:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "4858:83:7",
											"nodeType": "YulBlock",
											"src": "4858:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "4860:77:7",
															"nodeType": "YulIdentifier",
															"src": "4860:77:7"
														},
														"nativeSrc": "4860:79:7",
														"nodeType": "YulFunctionCall",
														"src": "4860:79:7"
													},
													"nativeSrc": "4860:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "4860:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4833:7:7",
															"nodeType": "YulIdentifier",
															"src": "4833:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "4842:9:7",
															"nodeType": "YulIdentifier",
															"src": "4842:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4829:3:7",
														"nodeType": "YulIdentifier",
														"src": "4829:3:7"
													},
													"nativeSrc": "4829:23:7",
													"nodeType": "YulFunctionCall",
													"src": "4829:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4854:2:7",
													"nodeType": "YulLiteral",
													"src": "4854:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4825:3:7",
												"nodeType": "YulIdentifier",
												"src": "4825:3:7"
											},
											"nativeSrc": "4825:32:7",
											"nodeType": "YulFunctionCall",
											"src": "4825:32:7"
										},
										"nativeSrc": "4822:119:7",
										"nodeType": "YulIf",
										"src": "4822:119:7"
									},
									{
										"nativeSrc": "4951:117:7",
										"nodeType": "YulBlock",
										"src": "4951:117:7",
										"statements": [
											{
												"nativeSrc": "4966:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "4966:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4980:1:7",
													"nodeType": "YulLiteral",
													"src": "4980:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4970:6:7",
														"nodeType": "YulTypedName",
														"src": "4970:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4995:63:7",
												"nodeType": "YulAssignment",
												"src": "4995:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5030:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5030:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5041:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5026:3:7",
																"nodeType": "YulIdentifier",
																"src": "5026:3:7"
															},
															"nativeSrc": "5026:22:7",
															"nodeType": "YulFunctionCall",
															"src": "5026:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5050:7:7",
															"nodeType": "YulIdentifier",
															"src": "5050:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "5005:20:7",
														"nodeType": "YulIdentifier",
														"src": "5005:20:7"
													},
													"nativeSrc": "5005:53:7",
													"nodeType": "YulFunctionCall",
													"src": "5005:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "4995:6:7",
														"nodeType": "YulIdentifier",
														"src": "4995:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "4746:329:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4782:9:7",
									"nodeType": "YulTypedName",
									"src": "4782:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4793:7:7",
									"nodeType": "YulTypedName",
									"src": "4793:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4805:6:7",
									"nodeType": "YulTypedName",
									"src": "4805:6:7",
									"type": ""
								}
							],
							"src": "4746:329:7"
						},
						{
							"body": {
								"nativeSrc": "5147:263:7",
								"nodeType": "YulBlock",
								"src": "5147:263:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "5193:83:7",
											"nodeType": "YulBlock",
											"src": "5193:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5195:77:7",
															"nodeType": "YulIdentifier",
															"src": "5195:77:7"
														},
														"nativeSrc": "5195:79:7",
														"nodeType": "YulFunctionCall",
														"src": "5195:79:7"
													},
													"nativeSrc": "5195:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "5195:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5168:7:7",
															"nodeType": "YulIdentifier",
															"src": "5168:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "5177:9:7",
															"nodeType": "YulIdentifier",
															"src": "5177:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5164:3:7",
														"nodeType": "YulIdentifier",
														"src": "5164:3:7"
													},
													"nativeSrc": "5164:23:7",
													"nodeType": "YulFunctionCall",
													"src": "5164:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5189:2:7",
													"nodeType": "YulLiteral",
													"src": "5189:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5160:3:7",
												"nodeType": "YulIdentifier",
												"src": "5160:3:7"
											},
											"nativeSrc": "5160:32:7",
											"nodeType": "YulFunctionCall",
											"src": "5160:32:7"
										},
										"nativeSrc": "5157:119:7",
										"nodeType": "YulIf",
										"src": "5157:119:7"
									},
									{
										"nativeSrc": "5286:117:7",
										"nodeType": "YulBlock",
										"src": "5286:117:7",
										"statements": [
											{
												"nativeSrc": "5301:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "5301:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "5315:1:7",
													"nodeType": "YulLiteral",
													"src": "5315:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5305:6:7",
														"nodeType": "YulTypedName",
														"src": "5305:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "5330:63:7",
												"nodeType": "YulAssignment",
												"src": "5330:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5365:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5365:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5376:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5361:3:7",
																"nodeType": "YulIdentifier",
																"src": "5361:3:7"
															},
															"nativeSrc": "5361:22:7",
															"nodeType": "YulFunctionCall",
															"src": "5361:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5385:7:7",
															"nodeType": "YulIdentifier",
															"src": "5385:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "5340:20:7",
														"nodeType": "YulIdentifier",
														"src": "5340:20:7"
													},
													"nativeSrc": "5340:53:7",
													"nodeType": "YulFunctionCall",
													"src": "5340:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "5330:6:7",
														"nodeType": "YulIdentifier",
														"src": "5330:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "5081:329:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5117:9:7",
									"nodeType": "YulTypedName",
									"src": "5117:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5128:7:7",
									"nodeType": "YulTypedName",
									"src": "5128:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5140:6:7",
									"nodeType": "YulTypedName",
									"src": "5140:6:7",
									"type": ""
								}
							],
							"src": "5081:329:7"
						},
						{
							"body": {
								"nativeSrc": "5481:53:7",
								"nodeType": "YulBlock",
								"src": "5481:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5498:3:7",
													"nodeType": "YulIdentifier",
													"src": "5498:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5521:5:7",
															"nodeType": "YulIdentifier",
															"src": "5521:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "5503:17:7",
														"nodeType": "YulIdentifier",
														"src": "5503:17:7"
													},
													"nativeSrc": "5503:24:7",
													"nodeType": "YulFunctionCall",
													"src": "5503:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5491:6:7",
												"nodeType": "YulIdentifier",
												"src": "5491:6:7"
											},
											"nativeSrc": "5491:37:7",
											"nodeType": "YulFunctionCall",
											"src": "5491:37:7"
										},
										"nativeSrc": "5491:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "5491:37:7"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "5416:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5469:5:7",
									"nodeType": "YulTypedName",
									"src": "5469:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5476:3:7",
									"nodeType": "YulTypedName",
									"src": "5476:3:7",
									"type": ""
								}
							],
							"src": "5416:118:7"
						},
						{
							"body": {
								"nativeSrc": "5638:124:7",
								"nodeType": "YulBlock",
								"src": "5638:124:7",
								"statements": [
									{
										"nativeSrc": "5648:26:7",
										"nodeType": "YulAssignment",
										"src": "5648:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5660:9:7",
													"nodeType": "YulIdentifier",
													"src": "5660:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5671:2:7",
													"nodeType": "YulLiteral",
													"src": "5671:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5656:3:7",
												"nodeType": "YulIdentifier",
												"src": "5656:3:7"
											},
											"nativeSrc": "5656:18:7",
											"nodeType": "YulFunctionCall",
											"src": "5656:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5648:4:7",
												"nodeType": "YulIdentifier",
												"src": "5648:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5728:6:7",
													"nodeType": "YulIdentifier",
													"src": "5728:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5741:9:7",
															"nodeType": "YulIdentifier",
															"src": "5741:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "5752:1:7",
															"nodeType": "YulLiteral",
															"src": "5752:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5737:3:7",
														"nodeType": "YulIdentifier",
														"src": "5737:3:7"
													},
													"nativeSrc": "5737:17:7",
													"nodeType": "YulFunctionCall",
													"src": "5737:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5684:43:7",
												"nodeType": "YulIdentifier",
												"src": "5684:43:7"
											},
											"nativeSrc": "5684:71:7",
											"nodeType": "YulFunctionCall",
											"src": "5684:71:7"
										},
										"nativeSrc": "5684:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "5684:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "5540:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5610:9:7",
									"nodeType": "YulTypedName",
									"src": "5610:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5622:6:7",
									"nodeType": "YulTypedName",
									"src": "5622:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5633:4:7",
									"nodeType": "YulTypedName",
									"src": "5633:4:7",
									"type": ""
								}
							],
							"src": "5540:222:7"
						},
						{
							"body": {
								"nativeSrc": "5851:391:7",
								"nodeType": "YulBlock",
								"src": "5851:391:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "5897:83:7",
											"nodeType": "YulBlock",
											"src": "5897:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5899:77:7",
															"nodeType": "YulIdentifier",
															"src": "5899:77:7"
														},
														"nativeSrc": "5899:79:7",
														"nodeType": "YulFunctionCall",
														"src": "5899:79:7"
													},
													"nativeSrc": "5899:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "5899:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5872:7:7",
															"nodeType": "YulIdentifier",
															"src": "5872:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "5881:9:7",
															"nodeType": "YulIdentifier",
															"src": "5881:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5868:3:7",
														"nodeType": "YulIdentifier",
														"src": "5868:3:7"
													},
													"nativeSrc": "5868:23:7",
													"nodeType": "YulFunctionCall",
													"src": "5868:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5893:2:7",
													"nodeType": "YulLiteral",
													"src": "5893:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5864:3:7",
												"nodeType": "YulIdentifier",
												"src": "5864:3:7"
											},
											"nativeSrc": "5864:32:7",
											"nodeType": "YulFunctionCall",
											"src": "5864:32:7"
										},
										"nativeSrc": "5861:119:7",
										"nodeType": "YulIf",
										"src": "5861:119:7"
									},
									{
										"nativeSrc": "5990:117:7",
										"nodeType": "YulBlock",
										"src": "5990:117:7",
										"statements": [
											{
												"nativeSrc": "6005:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6005:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6019:1:7",
													"nodeType": "YulLiteral",
													"src": "6019:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6009:6:7",
														"nodeType": "YulTypedName",
														"src": "6009:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6034:63:7",
												"nodeType": "YulAssignment",
												"src": "6034:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6069:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6069:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6080:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6065:3:7",
																"nodeType": "YulIdentifier",
																"src": "6065:3:7"
															},
															"nativeSrc": "6065:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6065:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6089:7:7",
															"nodeType": "YulIdentifier",
															"src": "6089:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "6044:20:7",
														"nodeType": "YulIdentifier",
														"src": "6044:20:7"
													},
													"nativeSrc": "6044:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6044:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "6034:6:7",
														"nodeType": "YulIdentifier",
														"src": "6034:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "6117:118:7",
										"nodeType": "YulBlock",
										"src": "6117:118:7",
										"statements": [
											{
												"nativeSrc": "6132:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6132:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6146:2:7",
													"nodeType": "YulLiteral",
													"src": "6146:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6136:6:7",
														"nodeType": "YulTypedName",
														"src": "6136:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6162:63:7",
												"nodeType": "YulAssignment",
												"src": "6162:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6197:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6197:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6208:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6193:3:7",
																"nodeType": "YulIdentifier",
																"src": "6193:3:7"
															},
															"nativeSrc": "6193:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6193:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6217:7:7",
															"nodeType": "YulIdentifier",
															"src": "6217:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "6172:20:7",
														"nodeType": "YulIdentifier",
														"src": "6172:20:7"
													},
													"nativeSrc": "6172:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6172:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "6162:6:7",
														"nodeType": "YulIdentifier",
														"src": "6162:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nativeSrc": "5768:474:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5813:9:7",
									"nodeType": "YulTypedName",
									"src": "5813:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5824:7:7",
									"nodeType": "YulTypedName",
									"src": "5824:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5836:6:7",
									"nodeType": "YulTypedName",
									"src": "5836:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "5844:6:7",
									"nodeType": "YulTypedName",
									"src": "5844:6:7",
									"type": ""
								}
							],
							"src": "5768:474:7"
						},
						{
							"body": {
								"nativeSrc": "6276:152:7",
								"nodeType": "YulBlock",
								"src": "6276:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6293:1:7",
													"nodeType": "YulLiteral",
													"src": "6293:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "6296:77:7",
													"nodeType": "YulLiteral",
													"src": "6296:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6286:6:7",
												"nodeType": "YulIdentifier",
												"src": "6286:6:7"
											},
											"nativeSrc": "6286:88:7",
											"nodeType": "YulFunctionCall",
											"src": "6286:88:7"
										},
										"nativeSrc": "6286:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "6286:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6390:1:7",
													"nodeType": "YulLiteral",
													"src": "6390:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "6393:4:7",
													"nodeType": "YulLiteral",
													"src": "6393:4:7",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6383:6:7",
												"nodeType": "YulIdentifier",
												"src": "6383:6:7"
											},
											"nativeSrc": "6383:15:7",
											"nodeType": "YulFunctionCall",
											"src": "6383:15:7"
										},
										"nativeSrc": "6383:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "6383:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6414:1:7",
													"nodeType": "YulLiteral",
													"src": "6414:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "6417:4:7",
													"nodeType": "YulLiteral",
													"src": "6417:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "6407:6:7",
												"nodeType": "YulIdentifier",
												"src": "6407:6:7"
											},
											"nativeSrc": "6407:15:7",
											"nodeType": "YulFunctionCall",
											"src": "6407:15:7"
										},
										"nativeSrc": "6407:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "6407:15:7"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "6248:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "6248:180:7"
						},
						{
							"body": {
								"nativeSrc": "6485:269:7",
								"nodeType": "YulBlock",
								"src": "6485:269:7",
								"statements": [
									{
										"nativeSrc": "6495:22:7",
										"nodeType": "YulAssignment",
										"src": "6495:22:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "6509:4:7",
													"nodeType": "YulIdentifier",
													"src": "6509:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6515:1:7",
													"nodeType": "YulLiteral",
													"src": "6515:1:7",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "6505:3:7",
												"nodeType": "YulIdentifier",
												"src": "6505:3:7"
											},
											"nativeSrc": "6505:12:7",
											"nodeType": "YulFunctionCall",
											"src": "6505:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "6495:6:7",
												"nodeType": "YulIdentifier",
												"src": "6495:6:7"
											}
										]
									},
									{
										"nativeSrc": "6526:38:7",
										"nodeType": "YulVariableDeclaration",
										"src": "6526:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "6556:4:7",
													"nodeType": "YulIdentifier",
													"src": "6556:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6562:1:7",
													"nodeType": "YulLiteral",
													"src": "6562:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "6552:3:7",
												"nodeType": "YulIdentifier",
												"src": "6552:3:7"
											},
											"nativeSrc": "6552:12:7",
											"nodeType": "YulFunctionCall",
											"src": "6552:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "6530:18:7",
												"nodeType": "YulTypedName",
												"src": "6530:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "6603:51:7",
											"nodeType": "YulBlock",
											"src": "6603:51:7",
											"statements": [
												{
													"nativeSrc": "6617:27:7",
													"nodeType": "YulAssignment",
													"src": "6617:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "6631:6:7",
																"nodeType": "YulIdentifier",
																"src": "6631:6:7"
															},
															{
																"kind": "number",
																"nativeSrc": "6639:4:7",
																"nodeType": "YulLiteral",
																"src": "6639:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "6627:3:7",
															"nodeType": "YulIdentifier",
															"src": "6627:3:7"
														},
														"nativeSrc": "6627:17:7",
														"nodeType": "YulFunctionCall",
														"src": "6627:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "6617:6:7",
															"nodeType": "YulIdentifier",
															"src": "6617:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "6583:18:7",
													"nodeType": "YulIdentifier",
													"src": "6583:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "6576:6:7",
												"nodeType": "YulIdentifier",
												"src": "6576:6:7"
											},
											"nativeSrc": "6576:26:7",
											"nodeType": "YulFunctionCall",
											"src": "6576:26:7"
										},
										"nativeSrc": "6573:81:7",
										"nodeType": "YulIf",
										"src": "6573:81:7"
									},
									{
										"body": {
											"nativeSrc": "6706:42:7",
											"nodeType": "YulBlock",
											"src": "6706:42:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "6720:16:7",
															"nodeType": "YulIdentifier",
															"src": "6720:16:7"
														},
														"nativeSrc": "6720:18:7",
														"nodeType": "YulFunctionCall",
														"src": "6720:18:7"
													},
													"nativeSrc": "6720:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "6720:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "6670:18:7",
													"nodeType": "YulIdentifier",
													"src": "6670:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "6693:6:7",
															"nodeType": "YulIdentifier",
															"src": "6693:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "6701:2:7",
															"nodeType": "YulLiteral",
															"src": "6701:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "6690:2:7",
														"nodeType": "YulIdentifier",
														"src": "6690:2:7"
													},
													"nativeSrc": "6690:14:7",
													"nodeType": "YulFunctionCall",
													"src": "6690:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "6667:2:7",
												"nodeType": "YulIdentifier",
												"src": "6667:2:7"
											},
											"nativeSrc": "6667:38:7",
											"nodeType": "YulFunctionCall",
											"src": "6667:38:7"
										},
										"nativeSrc": "6664:84:7",
										"nodeType": "YulIf",
										"src": "6664:84:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "6434:320:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "6469:4:7",
									"nodeType": "YulTypedName",
									"src": "6469:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "6478:6:7",
									"nodeType": "YulTypedName",
									"src": "6478:6:7",
									"type": ""
								}
							],
							"src": "6434:320:7"
						},
						{
							"body": {
								"nativeSrc": "6914:288:7",
								"nodeType": "YulBlock",
								"src": "6914:288:7",
								"statements": [
									{
										"nativeSrc": "6924:26:7",
										"nodeType": "YulAssignment",
										"src": "6924:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6936:9:7",
													"nodeType": "YulIdentifier",
													"src": "6936:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6947:2:7",
													"nodeType": "YulLiteral",
													"src": "6947:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6932:3:7",
												"nodeType": "YulIdentifier",
												"src": "6932:3:7"
											},
											"nativeSrc": "6932:18:7",
											"nodeType": "YulFunctionCall",
											"src": "6932:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6924:4:7",
												"nodeType": "YulIdentifier",
												"src": "6924:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "7004:6:7",
													"nodeType": "YulIdentifier",
													"src": "7004:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7017:9:7",
															"nodeType": "YulIdentifier",
															"src": "7017:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "7028:1:7",
															"nodeType": "YulLiteral",
															"src": "7028:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7013:3:7",
														"nodeType": "YulIdentifier",
														"src": "7013:3:7"
													},
													"nativeSrc": "7013:17:7",
													"nodeType": "YulFunctionCall",
													"src": "7013:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6960:43:7",
												"nodeType": "YulIdentifier",
												"src": "6960:43:7"
											},
											"nativeSrc": "6960:71:7",
											"nodeType": "YulFunctionCall",
											"src": "6960:71:7"
										},
										"nativeSrc": "6960:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "6960:71:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "7085:6:7",
													"nodeType": "YulIdentifier",
													"src": "7085:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7098:9:7",
															"nodeType": "YulIdentifier",
															"src": "7098:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "7109:2:7",
															"nodeType": "YulLiteral",
															"src": "7109:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7094:3:7",
														"nodeType": "YulIdentifier",
														"src": "7094:3:7"
													},
													"nativeSrc": "7094:18:7",
													"nodeType": "YulFunctionCall",
													"src": "7094:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7041:43:7",
												"nodeType": "YulIdentifier",
												"src": "7041:43:7"
											},
											"nativeSrc": "7041:72:7",
											"nodeType": "YulFunctionCall",
											"src": "7041:72:7"
										},
										"nativeSrc": "7041:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "7041:72:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "7167:6:7",
													"nodeType": "YulIdentifier",
													"src": "7167:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7180:9:7",
															"nodeType": "YulIdentifier",
															"src": "7180:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "7191:2:7",
															"nodeType": "YulLiteral",
															"src": "7191:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7176:3:7",
														"nodeType": "YulIdentifier",
														"src": "7176:3:7"
													},
													"nativeSrc": "7176:18:7",
													"nodeType": "YulFunctionCall",
													"src": "7176:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7123:43:7",
												"nodeType": "YulIdentifier",
												"src": "7123:43:7"
											},
											"nativeSrc": "7123:72:7",
											"nodeType": "YulFunctionCall",
											"src": "7123:72:7"
										},
										"nativeSrc": "7123:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "7123:72:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "6760:442:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6870:9:7",
									"nodeType": "YulTypedName",
									"src": "6870:9:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "6882:6:7",
									"nodeType": "YulTypedName",
									"src": "6882:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "6890:6:7",
									"nodeType": "YulTypedName",
									"src": "6890:6:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "6898:6:7",
									"nodeType": "YulTypedName",
									"src": "6898:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "6909:4:7",
									"nodeType": "YulTypedName",
									"src": "6909:4:7",
									"type": ""
								}
							],
							"src": "6760:442:7"
						},
						{
							"body": {
								"nativeSrc": "7236:152:7",
								"nodeType": "YulBlock",
								"src": "7236:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7253:1:7",
													"nodeType": "YulLiteral",
													"src": "7253:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "7256:77:7",
													"nodeType": "YulLiteral",
													"src": "7256:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7246:6:7",
												"nodeType": "YulIdentifier",
												"src": "7246:6:7"
											},
											"nativeSrc": "7246:88:7",
											"nodeType": "YulFunctionCall",
											"src": "7246:88:7"
										},
										"nativeSrc": "7246:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "7246:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7350:1:7",
													"nodeType": "YulLiteral",
													"src": "7350:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "7353:4:7",
													"nodeType": "YulLiteral",
													"src": "7353:4:7",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7343:6:7",
												"nodeType": "YulIdentifier",
												"src": "7343:6:7"
											},
											"nativeSrc": "7343:15:7",
											"nodeType": "YulFunctionCall",
											"src": "7343:15:7"
										},
										"nativeSrc": "7343:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "7343:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7374:1:7",
													"nodeType": "YulLiteral",
													"src": "7374:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "7377:4:7",
													"nodeType": "YulLiteral",
													"src": "7377:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "7367:6:7",
												"nodeType": "YulIdentifier",
												"src": "7367:6:7"
											},
											"nativeSrc": "7367:15:7",
											"nodeType": "YulFunctionCall",
											"src": "7367:15:7"
										},
										"nativeSrc": "7367:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "7367:15:7"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "7208:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "7208:180:7"
						},
						{
							"body": {
								"nativeSrc": "7438:147:7",
								"nodeType": "YulBlock",
								"src": "7438:147:7",
								"statements": [
									{
										"nativeSrc": "7448:25:7",
										"nodeType": "YulAssignment",
										"src": "7448:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "7471:1:7",
													"nodeType": "YulIdentifier",
													"src": "7471:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "7453:17:7",
												"nodeType": "YulIdentifier",
												"src": "7453:17:7"
											},
											"nativeSrc": "7453:20:7",
											"nodeType": "YulFunctionCall",
											"src": "7453:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "7448:1:7",
												"nodeType": "YulIdentifier",
												"src": "7448:1:7"
											}
										]
									},
									{
										"nativeSrc": "7482:25:7",
										"nodeType": "YulAssignment",
										"src": "7482:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "7505:1:7",
													"nodeType": "YulIdentifier",
													"src": "7505:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "7487:17:7",
												"nodeType": "YulIdentifier",
												"src": "7487:17:7"
											},
											"nativeSrc": "7487:20:7",
											"nodeType": "YulFunctionCall",
											"src": "7487:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "7482:1:7",
												"nodeType": "YulIdentifier",
												"src": "7482:1:7"
											}
										]
									},
									{
										"nativeSrc": "7516:16:7",
										"nodeType": "YulAssignment",
										"src": "7516:16:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "7527:1:7",
													"nodeType": "YulIdentifier",
													"src": "7527:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "7530:1:7",
													"nodeType": "YulIdentifier",
													"src": "7530:1:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7523:3:7",
												"nodeType": "YulIdentifier",
												"src": "7523:3:7"
											},
											"nativeSrc": "7523:9:7",
											"nodeType": "YulFunctionCall",
											"src": "7523:9:7"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "7516:3:7",
												"nodeType": "YulIdentifier",
												"src": "7516:3:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "7556:22:7",
											"nodeType": "YulBlock",
											"src": "7556:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "7558:16:7",
															"nodeType": "YulIdentifier",
															"src": "7558:16:7"
														},
														"nativeSrc": "7558:18:7",
														"nodeType": "YulFunctionCall",
														"src": "7558:18:7"
													},
													"nativeSrc": "7558:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "7558:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "7548:1:7",
													"nodeType": "YulIdentifier",
													"src": "7548:1:7"
												},
												{
													"name": "sum",
													"nativeSrc": "7551:3:7",
													"nodeType": "YulIdentifier",
													"src": "7551:3:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "7545:2:7",
												"nodeType": "YulIdentifier",
												"src": "7545:2:7"
											},
											"nativeSrc": "7545:10:7",
											"nodeType": "YulFunctionCall",
											"src": "7545:10:7"
										},
										"nativeSrc": "7542:36:7",
										"nodeType": "YulIf",
										"src": "7542:36:7"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "7394:191:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "7425:1:7",
									"nodeType": "YulTypedName",
									"src": "7425:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "7428:1:7",
									"nodeType": "YulTypedName",
									"src": "7428:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "7434:3:7",
									"nodeType": "YulTypedName",
									"src": "7434:3:7",
									"type": ""
								}
							],
							"src": "7394:191:7"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x36A PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x395 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x43A PUSH0 PUSH2 0x93C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x110E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FE PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP2 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP2 PUSH2 0x93C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x630 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP5 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x61C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DD PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83C JUMPI PUSH2 0x800 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B9 PUSH0 DUP4 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x938 DUP3 PUSH0 DUP4 PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 DUP3 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xE33 DUP2 DUP6 PUSH2 0xDF1 JUMP JUMPDEST SWAP4 POP PUSH2 0xE43 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST PUSH2 0xE4C DUP2 PUSH2 0xE0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6F DUP2 DUP5 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEA4 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB4 DUP2 PUSH2 0xE9A JUMP JUMPDEST DUP2 EQ PUSH2 0xEBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECF DUP2 PUSH2 0xEAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF02 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2B DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3C DUP6 DUP3 DUP7 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0xF46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9B PUSH0 DUP4 ADD DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC5 DUP7 DUP3 DUP8 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFD6 DUP7 DUP3 DUP8 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE7 DUP7 DUP3 DUP8 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1006 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101F PUSH0 DUP4 ADD DUP5 PUSH2 0xFFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103A JUMPI PUSH2 0x1039 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1047 DUP5 DUP3 DUP6 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP3 DUP6 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1084 DUP2 PUSH2 0xE9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH0 DUP4 ADD DUP5 PUSH2 0x107B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xE77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C6 DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D7 DUP6 DUP3 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH0 DUP4 ADD DUP7 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x115E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x116B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11AA DUP3 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1173 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 JUMPDEST 0xAB SWAP10 PUSH17 0x3C2E7CC0021A362E79F76534EF8C0C27B 0xBC PUSH22 0x25C444961407A45164736F6C634300081C0033000000 ",
		"sourceMap": "174:561:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504:97:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;649:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;504:97:6:-;1531:13:0;:11;:13::i;:::-;576:17:6::1;582:2;586:6;576:5;:17::i;:::-;504:97:::0;;:::o;649:83::-;699:25;705:10;717:6;699:5;:25::i;:::-;649:83;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:442::-;6909:4;6947:2;6936:9;6932:18;6924:26;;6960:71;7028:1;7017:9;7013:17;7004:6;6960:71;:::i;:::-;7041:72;7109:2;7098:9;7094:18;7085:6;7041:72;:::i;:::-;7123;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;6760:442;;;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract TetherUSDT is ERC20, ...\n  PUSH 40\t\t\tcontract TetherUSDT is ERC20, ...\n  MSTORE \t\t\tcontract TetherUSDT is ERC20, ...\n  CALLVALUE \t\t\tconstructor() ERC20(\"Tether\", ...\n  DUP1 \t\t\tconstructor() ERC20(\"Tether\", ...\n  ISZERO \t\t\tconstructor() ERC20(\"Tether\", ...\n  PUSH [tag] 1\t\t\tconstructor() ERC20(\"Tether\", ...\n  JUMPI \t\t\tconstructor() ERC20(\"Tether\", ...\n  PUSH 0\t\t\tconstructor() ERC20(\"Tether\", ...\n  PUSH 0\t\t\tconstructor() ERC20(\"Tether\", ...\n  REVERT \t\t\tconstructor() ERC20(\"Tether\", ...\ntag 1\t\t\tconstructor() ERC20(\"Tether\", ...\n  JUMPDEST \t\t\tconstructor() ERC20(\"Tether\", ...\n  POP \t\t\tconstructor() ERC20(\"Tether\", ...\n  CALLER \t\t\tmsg.sender\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 6\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 5465746865720000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 4\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 5553445400000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 3\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 6\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 6\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  PUSH 4\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 8\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 8\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 10\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 1E4FBDF700000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 11\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 11\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 10\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 13\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 14\t\t\t\n  PUSH 20\t\t\t\n  SHL \t\t\t\n  PUSH 20\t\t\t\n  SHR \t\t\t\n  JUMP \t\t\t\ntag 13\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 0\t\t\tuint256 initialSupply\n  PUSH [tag] 16\t\t\tdecimals()\n  PUSH [tag] 17\t\t\tdecimals\n  PUSH 20\t\t\tdecimals\n  SHL \t\t\tdecimals\n  PUSH 20\t\t\tdecimals()\n  SHR \t\t\tdecimals()\n  JUMP \t\t\tdecimals()\ntag 16\t\t\tdecimals()\n  JUMPDEST \t\t\tdecimals()\n  PUSH A\t\t\t10\n  PUSH [tag] 18\t\t\t10 ** decimals()\n  SWAP2 \t\t\t10 ** decimals()\n  SWAP1 \t\t\t10 ** decimals()\n  PUSH [tag] 19\t\t\t10 ** decimals()\n  JUMP \t\t\t10 ** decimals()\ntag 18\t\t\t10 ** decimals()\n  JUMPDEST \t\t\t10 ** decimals()\n  PUSH 5F5E100\t\t\t100_000_000\n  PUSH [tag] 20\t\t\t100_000_000 * 10 ** decimals()\n  SWAP2 \t\t\t100_000_000 * 10 ** decimals()\n  SWAP1 \t\t\t100_000_000 * 10 ** decimals()\n  PUSH [tag] 21\t\t\t100_000_000 * 10 ** decimals()\n  JUMP \t\t\t100_000_000 * 10 ** decimals()\ntag 20\t\t\t100_000_000 * 10 ** decimals()\n  JUMPDEST \t\t\t100_000_000 * 10 ** decimals()\n  SWAP1 \t\t\tuint256 initialSupply = 100_00...\n  POP \t\t\tuint256 initialSupply = 100_00...\n  PUSH [tag] 22\t\t\t_mint(msg.sender, initialSuppl...\n  CALLER \t\t\tmsg.sender\n  DUP3 \t\t\tinitialSupply\n  PUSH [tag] 23\t\t\t_mint\n  PUSH 20\t\t\t_mint\n  SHL \t\t\t_mint\n  PUSH 20\t\t\t_mint(msg.sender, initialSuppl...\n  SHR \t\t\t_mint(msg.sender, initialSuppl...\n  JUMP \t\t\t_mint(msg.sender, initialSuppl...\ntag 22\t\t\t_mint(msg.sender, initialSuppl...\n  JUMPDEST \t\t\t_mint(msg.sender, initialSuppl...\n  POP \t\t\t{\\r\\n        // Mint initial s...\n  PUSH [tag] 24\t\t\tcontract TetherUSDT is ERC20, ...\n  JUMP \t\t\tcontract TetherUSDT is ERC20, ...\ntag 14\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 5\t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  PUSH 100\t\t\t\n  EXP \t\t\t\n  SWAP1 \t\t\t\n  DIV \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 5\t\t\t\n  PUSH 0\t\t\t\n  PUSH 100\t\t\t\n  EXP \t\t\t\n  DUP2 \t\t\t\n  SLOAD \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  MUL \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  MUL \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 17\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 12\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP1 \t\t\t\n  JUMP \t\t\t\ntag 23\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 28\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH EC442F0500000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 29\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 29\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 28\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 30\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 31\t\t\t\n  PUSH 20\t\t\t\n  SHL \t\t\t\n  PUSH 20\t\t\t\n  SHR \t\t\t\n  JUMP \t\t\t\ntag 30\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 31\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 33\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  PUSH 2\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 34\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 35\t\t\t\n  JUMP \t\t\t\ntag 34\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 36\t\t\t\n  JUMP \t\t\t\ntag 33\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP6 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 37\t\t\t\n  JUMPI \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  DUP4 \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH E450D38C00000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 38\t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 39\t\t\t\n  JUMP \t\t\t\ntag 38\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 37\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SUB \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP7 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 36\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 40\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  PUSH 2\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  SUB \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 41\t\t\t\n  JUMP \t\t\t\ntag 40\t\t\t\n  JUMPDEST \t\t\t\n  DUP1 \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  ADD \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\ntag 41\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n  DUP4 \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 42\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 43\t\t\t\n  JUMP \t\t\t\ntag 42\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 44\t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n  PUSH 0\t\t\t\\r\\nimpo\n  DUP2 \t\t\ttoken\n  MLOAD \t\t\tracts/token/\n  SWAP1 \t\t\tpelin/contracts/token/\n  POP \t\t\tpelin/contracts/token/\n  SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n  SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n  POP \t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\ntag 45\t\t\tol\";\\r\\nimport \"@openzeppelin/...\n  JUMPDEST \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\table.sol\";\\r\\n\\r\\ncontract Tet...\n  PUSH 0\t\t\tO\n  MSTORE \t\t\taccess/Ownable.sol\";\\r\\n\\r\\nco...\n  PUSH 41\t\t\tr\", \n  PUSH 4\t\t\tt\n  MSTORE \t\t\tC20(\"Tether\", \"\n  PUSH 24\t\t\t/ Mi\n  PUSH 0\t\t\t \n  REVERT \t\t\t\\n        // Min\ntag 46\t\t\tpply of 100,000,000 tokens to ...\n  JUMPDEST \t\t\tpply of 100,000,000 tokens to ...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t uint256 initialSupply = 100_0...\n  PUSH 0\t\t\t \n  MSTORE \t\t\tr\\r\\n        uint256 initialSu...\n  PUSH 22\t\t\t);\\r\\n\n  PUSH 4\t\t\tp\n  MSTORE \t\t\ttialSupply);\\r\\n \n  PUSH 24\t\t\tr ca\n  PUSH 0\t\t\tw\n  REVERT \t\t\t   // Owner can\ntag 47\t\t\tkens if needed\\r\\n    function...\n  JUMPDEST \t\t\tkens if needed\\r\\n    function...\n  PUSH 0\t\t\t, uint\n  PUSH 2\t\t\t{\n  DUP3 \t\t\tOwne\n  DIV \t\t\tonlyOwner {\\r\n  SWAP1 \t\t\t external onlyOwner {\\r\n  POP \t\t\t external onlyOwner {\\r\n  PUSH 1\t\t\tO\n  DUP3 \t\t\t   /\n  AND \t\t\t\\n\\r\\n    // Ow\n  DUP1 \t\t\t if needed\\r\\n    fu\n  PUSH [tag] 78\t\t\turn tokens if needed\\r\\n    fu...\n  JUMPI \t\t\turn tokens if needed\\r\\n    fu...\n  PUSH 7F\t\t\t\\r\\n  \n  DUP3 \t\t\tternal\n  AND \t\t\t) external {\\r\\n   \n  SWAP2 \t\t\t256 amount) external {\\r\\n   \n  POP \t\t\t256 amount) external {\\r\\n   \ntag 78\t\t\turn tokens if needed\\r\\n    fu...\n  JUMPDEST \t\t\turn tokens if needed\\r\\n    fu...\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  LT \t\t\t\n  DUP2 \t\t\tunt);\\r\\n    }\\r\\n}\\r\\n\n  SUB \t\t\tamount);\\r\\n    }\\r\\n}\\r\\n\n  PUSH [tag] 79\t\t\tr, amount);\\r\\n    }\\r\\n}\\r\\n\n  JUMPI \t\t\tr, amount);\\r\\n    }\\r\\n}\\r\\n\n  PUSH [tag] 80\t\t\t\n  PUSH [tag] 46\t\t\t\n  JUMP \t\t\t\ntag 80\t\t\t\n  JUMPDEST \t\t\t\ntag 79\t\t\tr, amount);\\r\\n    }\\r\\n}\\r\\n\n  JUMPDEST \t\t\tr, amount);\\r\\n    }\\r\\n}\\r\\n\n  POP \t\t\t56 amount) external onlyOwner ...\n  SWAP2 \t\t\tkens if needed\\r\\n    function...\n  SWAP1 \t\t\tkens if needed\\r\\n    function...\n  POP \t\t\tkens if needed\\r\\n    function...\n  JUMP \t\t\tkens if needed\\r\\n    function...\ntag 48\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 49\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  PUSH 1F\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DIV \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 50\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SHL \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 51\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 8\t\t\t\n  DUP4 \t\t\t\n  MUL \t\t\t\n  PUSH [tag] 85\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 50\t\t\t\n  JUMP \t\t\t\ntag 85\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 86\t\t\t\n  DUP7 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 50\t\t\t\n  JUMP \t\t\t\ntag 86\t\t\t\n  JUMPDEST \t\t\t\n  SWAP6 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  SWAP4 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  DUP7 \t\t\t\n  AND \t\t\t\n  DUP5 \t\t\t\n  OR \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 52\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 53\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 54\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 90\t\t\t\n  PUSH [tag] 91\t\t\t\n  PUSH [tag] 92\t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 92\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 53\t\t\t\n  JUMP \t\t\t\ntag 91\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 90\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 55\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 56\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 95\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 54\t\t\t\n  JUMP \t\t\t\ntag 95\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 96\t\t\t\n  PUSH [tag] 97\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 55\t\t\t\n  JUMP \t\t\t\ntag 97\t\t\t\n  JUMPDEST \t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 51\t\t\t\n  JUMP \t\t\t\ntag 96\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 57\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP1 \t\t\t\n  JUMP \t\t\t\ntag 58\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 100\t\t\t\n  PUSH [tag] 57\t\t\t\n  JUMP \t\t\t\ntag 100\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 101\t\t\t\n  DUP2 \t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 56\t\t\t\n  JUMP \t\t\t\ntag 101\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 59\t\t\t\n  JUMPDEST \t\t\t\ntag 103\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 105\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 106\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 58\t\t\t\n  JUMP \t\t\t\ntag 106\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 103\t\t\t\n  JUMP \t\t\t\ntag 105\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 60\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1F\t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 108\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 109\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 48\t\t\t\n  JUMP \t\t\t\ntag 109\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 110\t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 49\t\t\t\n  JUMP \t\t\t\ntag 110\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 111\t\t\t\n  JUMPI \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 111\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 112\t\t\t\n  PUSH [tag] 113\t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 49\t\t\t\n  JUMP \t\t\t\ntag 113\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 59\t\t\t\n  JUMP \t\t\t\ntag 112\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 108\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 61\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 62\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 116\t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  PUSH 8\t\t\t\n  MUL \t\t\t\n  PUSH [tag] 61\t\t\t\n  JUMP \t\t\t\ntag 116\t\t\t\n  JUMPDEST \t\t\t\n  NOT \t\t\t\n  DUP1 \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 63\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 118\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 62\t\t\t\n  JUMP \t\t\t\ntag 118\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  PUSH 2\t\t\t\n  MUL \t\t\t\n  DUP3 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 7\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 120\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 44\t\t\t\n  JUMP \t\t\t\ntag 120\t\t\t\n  JUMPDEST \t\t\t\n  PUSH FFFFFFFFFFFFFFFF\t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 121\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 122\t\t\t\n  PUSH [tag] 45\t\t\t\n  JUMP \t\t\t\ntag 122\t\t\t\n  JUMPDEST \t\t\t\ntag 121\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 123\t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 47\t\t\t\n  JUMP \t\t\t\ntag 123\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 124\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 60\t\t\t\n  JUMP \t\t\t\ntag 124\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH 1F\t\t\t\n  DUP4 \t\t\t\n  GT \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 126\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 127\t\t\t\n  JUMPI \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 127\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 128\t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 63\t\t\t\n  JUMP \t\t\t\ntag 128\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 125\t\t\t\n  JUMP \t\t\t\ntag 126\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 129\t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 48\t\t\t\n  JUMP \t\t\t\ntag 129\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\ntag 130\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 132\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 1\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 130\t\t\t\n  JUMP \t\t\t\ntag 132\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 133\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 134\t\t\t\n  PUSH 1F\t\t\t\n  DUP10 \t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 62\t\t\t\n  JUMP \t\t\t\ntag 134\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\ntag 133\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 2\t\t\t\n  DUP9 \t\t\t\n  MUL \t\t\t\n  ADD \t\t\t\n  DUP9 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 125\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 64\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 65\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 137\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 64\t\t\t\n  JUMP \t\t\t\ntag 137\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 66\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 139\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 65\t\t\t\n  JUMP \t\t\t\ntag 139\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 12\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 141\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 66\t\t\t\n  JUMP \t\t\t\ntag 141\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 67\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 11\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 68\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  PUSH 1\t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 69\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP4 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 145\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP6 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 147\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  DUP7 \t\t\t\n  DIV \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 148\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 149\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 149\t\t\t\n  JUMPDEST \t\t\t\ntag 148\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP6 \t\t\t\n  AND \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 150\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  MUL \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\ntag 150\t\t\t\n  JUMPDEST \t\t\t\n  DUP1 \t\t\t\n  DUP2 \t\t\t\n  MUL \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 151\t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 68\t\t\t\n  JUMP \t\t\t\ntag 151\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 145\t\t\t\n  JUMP \t\t\t\ntag 147\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  SWAP5 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 70\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 153\t\t\t\n  JUMPI \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 152\t\t\t\n  JUMP \t\t\t\ntag 153\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 154\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 152\t\t\t\n  JUMP \t\t\t\ntag 154\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 156\t\t\t\n  JUMPI \t\t\t\n  PUSH 2\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 157\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 155\t\t\t\n  JUMP \t\t\t\ntag 156\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH [tag] 152\t\t\t\n  JUMP \t\t\t\ntag 157\t\t\t\n  JUMPDEST \t\t\t\n  PUSH FF\t\t\t\n  DUP5 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 158\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 159\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 159\t\t\t\n  JUMPDEST \t\t\t\ntag 158\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  PUSH 2\t\t\t\n  EXP \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP5 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 160\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 161\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 161\t\t\t\n  JUMPDEST \t\t\t\ntag 160\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH [tag] 152\t\t\t\n  JUMP \t\t\t\ntag 155\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  PUSH 133\t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  AND \t\t\t\n  PUSH 4E\t\t\t\n  DUP5 \t\t\t\n  LT \t\t\t\n  PUSH B\t\t\t\n  DUP5 \t\t\t\n  LT \t\t\t\n  AND \t\t\t\n  OR \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 162\t\t\t\n  JUMPI \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  EXP \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 163\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 164\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 164\t\t\t\n  JUMPDEST \t\t\t\ntag 163\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 152\t\t\t\n  JUMP \t\t\t\ntag 162\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 165\t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  PUSH 1\t\t\t\n  PUSH [tag] 69\t\t\t\n  JUMP \t\t\t\ntag 165\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP5 \t\t\t\n  DIV \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 166\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 167\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 167\t\t\t\n  JUMPDEST \t\t\t\ntag 166\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  MUL \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 152\t\t\t\n  JUMPDEST \t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 71\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FF\t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 19\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 170\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 170\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 171\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 71\t\t\t\n  JUMP \t\t\t\ntag 171\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 172\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 70\t\t\t\n  JUMP \t\t\t\ntag 172\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 21\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 174\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 174\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 175\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 175\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  MUL \t\t\t\n  PUSH [tag] 176\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 176\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DIV \t\t\t\n  DUP5 \t\t\t\n  EQ \t\t\t\n  DUP4 \t\t\t\n  ISZERO \t\t\t\n  OR \t\t\t\n  PUSH [tag] 177\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 178\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 178\t\t\t\n  JUMPDEST \t\t\t\ntag 177\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 35\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 180\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 180\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 181\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 181\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 182\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 183\t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMP \t\t\t\ntag 183\t\t\t\n  JUMPDEST \t\t\t\ntag 182\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 72\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 185\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 52\t\t\t\n  JUMP \t\t\t\ntag 185\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 39\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 60\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 187\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 66\t\t\t\n  JUMP \t\t\t\ntag 187\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 188\t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 72\t\t\t\n  JUMP \t\t\t\ntag 188\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 189\t\t\t\n  PUSH 40\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 72\t\t\t\n  JUMP \t\t\t\ntag 189\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  SWAP4 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 43\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 191\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 72\t\t\t\n  JUMP \t\t\t\ntag 191\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 24\t\t\tcontract TetherUSDT is ERC20, ...\n  JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract TetherUSDT is ERC20, ...\n  DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract TetherUSDT is ERC20, ...\n  PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n  CODECOPY \t\t\tcontract TetherUSDT is ERC20, ...\n  PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n  RETURN \t\t\tcontract TetherUSDT is ERC20, ...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 40\t\t\tcontract TetherUSDT is ERC20, ...\n      MSTORE \t\t\tcontract TetherUSDT is ERC20, ...\n      CALLVALUE \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      ISZERO \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 1\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n      REVERT \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 1\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n      POP \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 4\t\t\tcontract TetherUSDT is ERC20, ...\n      CALLDATASIZE \t\t\tcontract TetherUSDT is ERC20, ...\n      LT \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n      CALLDATALOAD \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH E0\t\t\tcontract TetherUSDT is ERC20, ...\n      SHR \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 70A08231\t\t\tcontract TetherUSDT is ERC20, ...\n      GT \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 17\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 95D89B41\t\t\tcontract TetherUSDT is ERC20, ...\n      GT \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 18\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 95D89B41\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 13\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH A9059CBB\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 14\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH DD62ED3E\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 15\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH F2FDE38B\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 16\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMP \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 18\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 70A08231\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 10\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 715018A6\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 11\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 8DA5CB5B\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 12\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMP \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 17\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 23B872DD\t\t\tcontract TetherUSDT is ERC20, ...\n      GT \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 19\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 23B872DD\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 6\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 313CE567\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 7\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 40C10F19\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 8\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 42966C68\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 9\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMP \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 19\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 6FDDE03\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 3\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 95EA7B3\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 4\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n      DUP1 \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 18160DDD\t\t\tcontract TetherUSDT is ERC20, ...\n      EQ \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH [tag] 5\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPI \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 2\t\t\tcontract TetherUSDT is ERC20, ...\n      JUMPDEST \t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n      PUSH 0\t\t\tcontract TetherUSDT is ERC20, ...\n      REVERT \t\t\tcontract TetherUSDT is ERC20, ...\n    tag 3\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 20\t\t\t\n      PUSH [tag] 21\t\t\t\n      JUMP \t\t\t\n    tag 20\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 22\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 23\t\t\t\n      JUMP \t\t\t\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 4\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 24\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 25\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 25\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      JUMP \t\t\t\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 28\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 5\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 30\t\t\t\n      PUSH [tag] 31\t\t\t\n      JUMP \t\t\t\n    tag 30\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 32\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 32\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 6\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 34\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 35\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 36\t\t\t\n      JUMP \t\t\t\n    tag 35\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 37\t\t\t\n      JUMP \t\t\t\n    tag 34\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 38\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 38\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 7\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 39\t\t\t\n      PUSH [tag] 40\t\t\t\n      JUMP \t\t\t\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 41\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 42\t\t\t\n      JUMP \t\t\t\n    tag 41\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 8\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 43\t\t\tfunction mint(address to, uint...\n      PUSH 4\t\t\tfunction mint(address to, uint...\n      DUP1 \t\t\tfunction mint(address to, uint...\n      CALLDATASIZE \t\t\tfunction mint(address to, uint...\n      SUB \t\t\tfunction mint(address to, uint...\n      DUP2 \t\t\tfunction mint(address to, uint...\n      ADD \t\t\tfunction mint(address to, uint...\n      SWAP1 \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 44\t\t\tfunction mint(address to, uint...\n      SWAP2 \t\t\tfunction mint(address to, uint...\n      SWAP1 \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 26\t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 44\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 45\t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 43\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      STOP \t\t\tfunction mint(address to, uint...\n    tag 9\t\t\tfunction burn(uint256 amount) ...\n      JUMPDEST \t\t\tfunction burn(uint256 amount) ...\n      PUSH [tag] 46\t\t\tfunction burn(uint256 amount) ...\n      PUSH 4\t\t\tfunction burn(uint256 amount) ...\n      DUP1 \t\t\tfunction burn(uint256 amount) ...\n      CALLDATASIZE \t\t\tfunction burn(uint256 amount) ...\n      SUB \t\t\tfunction burn(uint256 amount) ...\n      DUP2 \t\t\tfunction burn(uint256 amount) ...\n      ADD \t\t\tfunction burn(uint256 amount) ...\n      SWAP1 \t\t\tfunction burn(uint256 amount) ...\n      PUSH [tag] 47\t\t\tfunction burn(uint256 amount) ...\n      SWAP2 \t\t\tfunction burn(uint256 amount) ...\n      SWAP1 \t\t\tfunction burn(uint256 amount) ...\n      PUSH [tag] 48\t\t\tfunction burn(uint256 amount) ...\n      JUMP \t\t\tfunction burn(uint256 amount) ...\n    tag 47\t\t\tfunction burn(uint256 amount) ...\n      JUMPDEST \t\t\tfunction burn(uint256 amount) ...\n      PUSH [tag] 49\t\t\tfunction burn(uint256 amount) ...\n      JUMP \t\t\tfunction burn(uint256 amount) ...\n    tag 46\t\t\tfunction burn(uint256 amount) ...\n      JUMPDEST \t\t\tfunction burn(uint256 amount) ...\n      STOP \t\t\tfunction burn(uint256 amount) ...\n    tag 10\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 51\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 53\t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 54\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 11\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 55\t\t\t\n      PUSH [tag] 56\t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      STOP \t\t\t\n    tag 12\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 57\t\t\t\n      PUSH [tag] 58\t\t\t\n      JUMP \t\t\t\n    tag 57\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 59\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 59\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 13\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 61\t\t\t\n      PUSH [tag] 62\t\t\t\n      JUMP \t\t\t\n    tag 61\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 63\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 23\t\t\t\n      JUMP \t\t\t\n    tag 63\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 14\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 64\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 65\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 65\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 66\t\t\t\n      JUMP \t\t\t\n    tag 64\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 67\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 67\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 15\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 68\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 69\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 70\t\t\t\n      JUMP \t\t\t\n    tag 69\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 71\t\t\t\n      JUMP \t\t\t\n    tag 68\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 72\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 72\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 16\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 73\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 74\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 74\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 75\t\t\t\n      JUMP \t\t\t\n    tag 73\t\t\t\n      JUMPDEST \t\t\t\n      STOP \t\t\t\n    tag 21\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 77\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP \t\t\t\n    tag 77\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 79\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP \t\t\t\n    tag 79\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 80\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 81\t\t\t\n      JUMPI \t\t\t\n      PUSH 100\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 80\t\t\t\n      JUMP \t\t\t\n    tag 81\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      PUSH [tag] 82\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 27\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 84\t\t\t\n      PUSH [tag] 85\t\t\t\n      JUMP \t\t\t\n    tag 84\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 86\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP \t\t\t\n    tag 86\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 31\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 2\t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 90\t\t\t\n      PUSH [tag] 85\t\t\t\n      JUMP \t\t\t\n    tag 90\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 91\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 92\t\t\t\n      JUMP \t\t\t\n    tag 91\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 93\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 12\t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 45\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 97\t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMP \t\t\t\n    tag 97\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 100\t\t\t_mint(to, amount)\n      DUP3 \t\t\tto\n      DUP3 \t\t\tamount\n      PUSH [tag] 101\t\t\t_mint\n      JUMP \t\t\t_mint(to, amount)\n    tag 100\t\t\t_mint(to, amount)\n      JUMPDEST \t\t\t_mint(to, amount)\n      POP \t\t\tfunction mint(address to, uint...\n      POP \t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 49\t\t\tfunction burn(uint256 amount) ...\n      JUMPDEST \t\t\tfunction burn(uint256 amount) ...\n      PUSH [tag] 103\t\t\t_burn(msg.sender, amount)\n      CALLER \t\t\tmsg.sender\n      DUP3 \t\t\tamount\n      PUSH [tag] 104\t\t\t_burn\n      JUMP \t\t\t_burn(msg.sender, amount)\n    tag 103\t\t\t_burn(msg.sender, amount)\n      JUMPDEST \t\t\t_burn(msg.sender, amount)\n      POP \t\t\tfunction burn(uint256 amount) ...\n      JUMP \t\t\tfunction burn(uint256 amount) ...\n    tag 53\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 56\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 107\t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMP \t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 109\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 109\t\t\t\n      JUMPDEST \t\t\t\n      JUMP \t\t\t\n    tag 58\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 5\t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 62\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 113\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP \t\t\t\n    tag 113\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 114\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP \t\t\t\n    tag 114\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 115\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 116\t\t\t\n      JUMPI \t\t\t\n      PUSH 100\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 115\t\t\t\n      JUMP \t\t\t\n    tag 116\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n    tag 117\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      PUSH [tag] 117\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n    tag 115\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 66\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 119\t\t\t\n      PUSH [tag] 85\t\t\t\n      JUMP \t\t\t\n    tag 119\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 120\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 120\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 71\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 1\t\t\t\n      PUSH 0\t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 123\t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMP \t\t\t\n    tag 123\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 125\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1E4FBDF700000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 126\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 126\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 125\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 127\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 127\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 85\t\t\tn burn(uint256 amount) externa...\n      JUMPDEST \t\t\tn burn(uint256 amount) externa...\n      PUSH 0\t\t\tsender,\n      CALLER \t\t\t\\r\\n\n      SWAP1 \t\t\t   }\\r\\n}\\r\\n\n      POP \t\t\t   }\\r\\n}\\r\\n\n      SWAP1 \t\t\tn burn(uint256 amount) externa...\n      JUMP \t\t\tn burn(uint256 amount) externa...\n    tag 87\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 130\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 130\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 92\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 133\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 71\t\t\t\n      JUMP \t\t\t\n    tag 133\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 134\t\t\t\n      JUMPI \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 135\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH FB8F41B200000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 136\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 137\t\t\t\n      JUMP \t\t\t\n    tag 136\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 135\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 138\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 138\t\t\t\n      JUMPDEST \t\t\t\n    tag 134\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 94\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 140\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 96C6FD1E00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 141\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 141\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 140\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 142\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EC442F0500000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 143\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 143\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 142\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 144\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 145\t\t\t\n      JUMP \t\t\t\n    tag 144\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 98\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 147\t\t\t\n      PUSH [tag] 85\t\t\t\n      JUMP \t\t\t\n    tag 147\t\t\t\n      JUMPDEST \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 148\t\t\t\n      PUSH [tag] 58\t\t\t\n      JUMP \t\t\t\n    tag 148\t\t\t\n      JUMPDEST \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 150\t\t\t\n      PUSH [tag] 85\t\t\t\n      JUMP \t\t\t\n    tag 150\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 118CDAA700000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 151\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 151\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 149\t\t\t\n      JUMPDEST \t\t\t\n      JUMP \t\t\t\n    tag 101\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 153\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EC442F0500000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 154\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 154\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 153\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 155\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 145\t\t\t\n      JUMP \t\t\t\n    tag 155\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 104\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 96C6FD1E00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 158\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 158\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 157\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 159\t\t\t\n      DUP3 \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 145\t\t\t\n      JUMP \t\t\t\n    tag 159\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 110\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 5\t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH 5\t\t\t\n      PUSH 0\t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      MUL \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      MUL \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 131\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 162\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E602DF0500000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 163\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 163\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 162\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 94280D6200000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 165\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\t\n    tag 165\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 164\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 0\t\t\t\n      DUP7 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 166\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      DUP5 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 167\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 167\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n    tag 166\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 145\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 169\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 170\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 170\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 172\t\t\t\n      JUMP \t\t\t\n    tag 169\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 173\t\t\t\n      JUMPI \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E450D38C00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 174\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 137\t\t\t\n      JUMP \t\t\t\n    tag 174\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 173\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP7 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n    tag 172\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 175\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      SUB \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 176\t\t\t\n      JUMP \t\t\t\n    tag 175\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n    tag 176\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 177\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 177\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 178\t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n      PUSH 0\t\t\t\\r\\nimpo\n      DUP2 \t\t\ttoken\n      MLOAD \t\t\tracts/token/\n      SWAP1 \t\t\tpelin/contracts/token/\n      POP \t\t\tpelin/contracts/token/\n      SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n      SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n      POP \t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\n    tag 179\t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      JUMPDEST \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      PUSH 0\t\t\t ERC20, Own\n      DUP3 \t\t\t const\n      DUP3 \t\t\t\\r\\n \n      MSTORE \t\t\tnder) {\\r\\n    constr\n      PUSH 20\t\t\t\\r\\n  \n      DUP3 \t\t\tT\")\n      ADD \t\t\t\"USDT\") {\\r\\n   \n      SWAP1 \t\t\tRC20(\"Tether\", \"USDT\") {\\r\\n  ...\n      POP \t\t\tRC20(\"Tether\", \"USDT\") {\\r\\n  ...\n      SWAP3 \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      SWAP2 \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      POP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      POP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      JUMP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n    tag 180\t\t\t initial supply of 100,000,000...\n      JUMPDEST \t\t\t initial supply of 100,000,000...\n      DUP3 \t\t\t00_000\n      DUP2 \t\t\t100\n      DUP4 \t\t\tly \n      MCOPY \t\t\talSupply = 100_000_000 \n      PUSH 0\t\t\t(\n      DUP4 \t\t\t    _m\n      DUP4 \t\t\t\\n  \n      ADD \t\t\t();\\r\\n        _mi\n      MSTORE \t\t\tecimals();\\r\\n        _mint(m\n      POP \t\t\t initial supply of 100,000,000...\n      POP \t\t\t initial supply of 100,000,000...\n      POP \t\t\t initial supply of 100,000,000...\n      JUMP \t\t\t initial supply of 100,000,000...\n    tag 181\t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n      JUMPDEST \t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n      PUSH 0\t\t\tmint n\n      PUSH 1F\t\t\ts \n      NOT \t\t\tdress t\n      PUSH 1F\t\t\tnt\n      DUP4 \t\t\ttion \n      ADD \t\t\tfunction mint(\n      AND \t\t\t    function mint(address to\n      SWAP1 \t\t\tf needed\\r\\n    function mint(...\n      POP \t\t\tf needed\\r\\n    function mint(...\n      SWAP2 \t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n      SWAP1 \t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n      POP \t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n      JUMP \t\t\titialSupply);\\r\\n    }\\r\\n\\r\\n...\n    tag 182\t\t\tount) external onlyOwner {\\r\\n...\n      JUMPDEST \t\t\tount) external onlyOwner {\\r\\n...\n      PUSH 0\t\t\toke\n      PUSH [tag] 207\t\t\tn burn(uint256 amount) externa...\n      DUP3 \t\t\t\\r\\n   \n      PUSH [tag] 178\t\t\tn burn(uint256 amount) externa...\n      JUMP \t\t\tn burn(uint256 amount) externa...\n    tag 207\t\t\tn burn(uint256 amount) externa...\n      JUMPDEST \t\t\tn burn(uint256 amount) externa...\n      PUSH [tag] 208\t\t\tnder, amount);\\r\\n    }\\r\\n}\\r...\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 179\t\t\tnder, amount);\\r\\n    }\\r\\n}\\r...\n      JUMP \t\t\tnder, amount);\\r\\n    }\\r\\n}\\r...\n    tag 208\t\t\tnder, amount);\\r\\n    }\\r\\n}\\r...\n      JUMPDEST \t\t\tnder, amount);\\r\\n    }\\r\\n}\\r...\n      SWAP4 \t\t\t(msg.sender, amount);\\r\\n    }...\n      POP \t\t\t(msg.sender, amount);\\r\\n    }...\n      PUSH [tag] 209\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      PUSH 20\t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 209\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 210\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 210\t\t\t\n      JUMPDEST \t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\ts if needed\\r\\n    function bu...\n      SWAP3 \t\t\tount) external onlyOwner {\\r\\n...\n      SWAP2 \t\t\tount) external onlyOwner {\\r\\n...\n      POP \t\t\tount) external onlyOwner {\\r\\n...\n      POP \t\t\tount) external onlyOwner {\\r\\n...\n      JUMP \t\t\tount) external onlyOwner {\\r\\n...\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 212\t\t\t\n      DUP2 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 182\t\t\t\n      JUMP \t\t\t\n    tag 212\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 184\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 186\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 187\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 218\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 186\t\t\t\n      JUMP \t\t\t\n    tag 218\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 188\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 220\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 187\t\t\t\n      JUMP \t\t\t\n    tag 220\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 221\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 221\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 189\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 223\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 188\t\t\t\n      JUMP \t\t\t\n    tag 223\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 190\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 191\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 226\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMP \t\t\t\n    tag 226\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 227\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 227\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 192\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 229\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 191\t\t\t\n      JUMP \t\t\t\n    tag 229\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 26\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 231\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 232\t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 232\t\t\t\n      JUMPDEST \t\t\t\n    tag 231\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 233\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 233\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 234\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 192\t\t\t\n      JUMP \t\t\t\n    tag 234\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 193\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 194\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 237\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 193\t\t\t\n      JUMP \t\t\t\n    tag 237\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 29\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 239\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP \t\t\t\n    tag 239\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 195\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 241\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMP \t\t\t\n    tag 241\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 33\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 243\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 195\t\t\t\n      JUMP \t\t\t\n    tag 243\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 245\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 246\t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 246\t\t\t\n      JUMPDEST \t\t\t\n    tag 245\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 247\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 247\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 248\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 248\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      PUSH [tag] 249\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 192\t\t\t\n      JUMP \t\t\t\n    tag 249\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      JUMP \t\t\t\n    tag 196\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FF\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 252\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 196\t\t\t\n      JUMP \t\t\t\n    tag 252\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 42\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 254\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 197\t\t\t\n      JUMP \t\t\t\n    tag 254\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 256\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 257\t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 257\t\t\t\n      JUMPDEST \t\t\t\n    tag 256\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 258\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 192\t\t\t\n      JUMP \t\t\t\n    tag 258\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 260\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 261\t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 261\t\t\t\n      JUMPDEST \t\t\t\n    tag 260\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 262\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 262\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 198\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 264\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 187\t\t\t\n      JUMP \t\t\t\n    tag 264\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 60\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 266\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 198\t\t\t\n      JUMP \t\t\t\n    tag 266\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 70\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 268\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 269\t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 269\t\t\t\n      JUMPDEST \t\t\t\n    tag 268\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 270\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 270\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 271\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 271\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 199\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 2\t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 274\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 274\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 275\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 276\t\t\t\n      PUSH [tag] 199\t\t\t\n      JUMP \t\t\t\n    tag 276\t\t\t\n      JUMPDEST \t\t\t\n    tag 275\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 137\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 278\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 198\t\t\t\n      JUMP \t\t\t\n    tag 278\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 279\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 195\t\t\t\n      JUMP \t\t\t\n    tag 279\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 280\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 195\t\t\t\n      JUMP \t\t\t\n    tag 280\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 200\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 171\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 283\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMP \t\t\t\n    tag 283\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 284\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMP \t\t\t\n    tag 284\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 285\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 286\t\t\t\n      PUSH [tag] 200\t\t\t\n      JUMP \t\t\t\n    tag 286\t\t\t\n      JUMPDEST \t\t\t\n    tag 285\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}